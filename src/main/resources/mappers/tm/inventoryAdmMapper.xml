<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  	
<mapper namespace="mes.mappers.tm.InventoryAdmMapper">

<resultMap id="MatrlInOutWhsAdmVo" type="mes.domain.io.MatrlInOutWhsAdmVo">
		<result property="lotNo"				column="LOT_NO"					/>
		<result property="srLot"				column="SR_LOT"					/>
		<result property="inWhsGroupSeq"		column="IN_WHS_GROUP_SEQ"		/>
		<result property="matrlCd"				column="MATRL_CD"				/>
		<result property="matrlNm"				column="MATRL_NM"				/>
		<result property="preInWhsQty"			column="PRE_IN_WHS_QTY"			/>
		<result property="inWhsQty"				column="IN_WHS_QTY"				/>
		<result property="inspectQty"			column="INSPECT_QTY"			/>
		<result property="inspectWaitQty"		column="INSPAET_WAIT_QTY"		/>
		<result property="adjustQty"			column="ADJUST_QTY"				/>
		<result property="diffQty"				column="DIFF_QTY"				/>
		<result property="inWhsLength"			column="IN_WHS_LENGTH"			/>
		<result property="spplyDealCorpCd"		column="SPPLY_DEAL_CORP_CD"		/>
		<result property="spplyDealCorpNm"		column="SPPLY_DEAL_CORP_NM"		/>
		<result property="preInWhsDate"			column="PRE_IN_WHS_DATE"		/>
		<result property="inWhsDate"			column="IN_WHS_DATE"			/>
		<result property="inspctDate"			column="INSPCT_DATE"			/>
		<result property="barcodeNo"			column="BARCODE_NO"				/>
		<result property="approvalCd"			column="APPROVAL_CD"			/>
		<result property="approvalNm"			column="APPROVAL_NM"			/>
		<result property="statusCd"				column="STATUS_CD"				/>
		<result property="statusNm"				column="STATUS_NM"				/>
		<result property="matrlChargr"			column="MATRL_CHARGR"			/>
		<result property="preOutEquipCd"		column="PRE_OUT_EQUIP_CD"		/>
		<result property="preOutEquipNm"		column="PRE_OUT_EQUIP_NM"		/>
		<result property="preOutGoodsCd"		column="PRE_OUT_GOODS_CD"		/>
		<result property="preOutGoodsNm"		column="PRE_OUT_GOODS_NM"		/>
		<result property="preWorkCharger"		column="PRE_WORK_CHARGER"		/>
		<result property="preWorkChargerNm"		column="PRE_WORK_CHARGERNM"		/>
		<result property="preOutQty"			column="PRE_OUT_QTY"			/>
		<result property="preOutWhsDate"		column="PRE_OUT_WHS_DATE"		/>
		<result property="outEquipCd"			column="OUT_EQUIP_CD"			/>
		<result property="outEquipNm"			column="OUT_EQUIP_NM"			/>
		<result property="outGoodsCd"			column="OUT_GOODS_CD"			/>
		<result property="outGoodsNm"			column="OUT_GOODS_NM"			/>
		<result property="outWorkCharger"		column="OUT_WORK_CHARGER"		/>
		<result property="outWorkChargerNm"		column="OUT_WORK_CHARGERNM"		/>
		<result property="outQty"				column="OUT_QTY"				/>
		<result property="outWhsDate"			column="OUT_WHS_DATE"			/>
		<result property="locationCd"			column="LOCATION_CD"			/>
		<result property="locationNm"			column="LOCATION_NM"			/>
		<result property="lifeCycle"			column="LIFE_CYCLE"				/>
		<result property="inWhsDesc"			column="IN_WHS_DESC"			/>
		<result property="manufactrCd"			column="MANUFACTR_CD"			/>
		<result property="manufactrNm"			column="MANUFACTR_NM"			/>
		<result property="qutyCd"              	column="QUTY_CD"				/>
		<result property="qutyNm"  	            column="QUTY_NM"				/>
		<result property="surfaceTrtmtCd"      	column="SURFACE_TRTMT_CD"		/>
		<result property="surfaceTrtmtNm"  	    column="SURFACE_TRTMT_NM"		/>
		<result property="thickness"            column="THICKNESS"				/>
		<result property="depth"               	column="DEPTH"					/>
		<result property="length"               column="LENGTH"					/>
		<result property="width"               	column="WIDTH"					/>
		<result property="pitch"               	column="PITCH"					/>
		<result property="model"               	column="MODEL"					/>
		<result property="regId"				column="REG_ID"					/>
		<result property="regDate"				column="REG_DATE"				/>
		<result property="updId"				column="UPD_ID"					/>
		<result property="updDate"				column="UPD_DATE"				/>
		<result property="boxNo"				column="BOX_NO"					/>
		<result property="packCnt"				column="PACK_CNT"				/>
		<result property="goodsInDate"			column="GOODS_IN_DATE"			/>
		<result property="remainCnt"			column="REMAIN_CNT"				/>
		<result property="goodsInDate"			column="GOODS_IN_DATE"			/>
		<result property="goodsCd"				column="GOODS_CD"				/>
		<result property="goodsNm"				column="GOODS_NM"				/>
		<result property="dealCorpCd"			column="DEAL_CORP_CD"			/>
		<result property="dealCorpNm"			column="DEAL_CORP_NM"			/>
		<result property="optimumStock"			column="OPTIMUM_STOCK"			/>
		<result property="ordGubun"				column="ORD_GUBUN"				/>
		<result property="ordGubunNm"			column="ORD_GUBUN_NM"			/>
		<result property="faultyStatus"			column="FAULTY_STATUS"			/>
		<result property="goodsRemainSum"		column="GOODS_REMAIN_SUM"		/>
		<result property="gubunCd"				column="GUBUN_CD" 				/>
		<result property="gubunNm"				column="GUBUN_NM" 				/>
		<result property="chamferYnCd"			column="CHAMFER_YN_CD" 			/>
		<result property="chamferYnNm"			column="CHAMFER_YN_NM" 			/>
		<result property="surfaceTrtmtCd"		column="SURFACE_TRTMT_CD" 		/>
		<result property="surfaceTrtmtNm"		column="SURFACE_TRTMT_NM" 		/>
		
		
		<result property="inCount"				column="IN_COUNT" 		/>
		<result property="outCount"				column="OUT_COUNT" 		/>
		<result property="carryOverCount"		column="CARRY_OVER_COUNT" 		/>
</resultMap>

	<!-- 재고관리 재고실사및조정(창고위치별) 목록조회 -->
	<select id="tmInspectAdjustList" resultMap="MatrlInOutWhsAdmVo">
		SELECT	
			A.LOT_NO
			,A.SR_LOT
			,A.IN_WHS_GROUP_SEQ
			,A.MATRL_CD
			,C.MATRL_NM
			,C.QUTY_CD
			,(SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='007' AND B.BASE_CD = C.QUTY_CD) QUTY_NM	
			,C.SURFACE_TRTMT_CD
			, ISNULL((SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE D WHERE D.BASE_GROUP_CD='021' AND D.BASE_CD = C.SURFACE_TRTMT_CD),'') SURFACE_TRTMT_NM
			,(C.THICKNESS + 'X' + C.DEPTH + '-PP' + C.WIDTH + 'X' + C.LENGTH + '-' + C.PITCH +'P')  MODEL				
			,A.PRE_IN_WHS_QTY
			,A.IN_WHS_QTY
			,A.INSPECT_QTY
			,A.ADJUST_QTY				
			,A.DIFF_QTY
			,A.IN_WHS_LENGTH
			,A.SPPLY_DEAL_CORP_CD
			,(SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM B WHERE B.DEAL_CORP_CD = A.SPPLY_DEAL_CORP_CD) SPPLY_DEAL_CORP_NM
			,A.PRE_IN_WHS_DATE
			,A.IN_WHS_DATE
			,A.INSPCT_DATE
			,A.BARCODE_NO
			,A.APPROVAL_CD
			,(SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='026' AND B.BASE_CD = A.APPROVAL_CD) APPROVAL_NM
			,A.STATUS_CD
			,A.MATRL_CHARGR
			,A.PRE_OUT_WHS_DATE
			,A.PRE_OUT_EQUIP_CD
			,(SELECT EQUIP_NM FROM TB_EQUIP_CODE_ADM B WHERE B.EQUIP_CD = A.PRE_OUT_EQUIP_CD) PRE_OUT_EQUIP_NM
			,A.OUT_WHS_DATE
			,A.OUT_EQUIP_CD
			,(SELECT EQUIP_NM FROM TB_EQUIP_CODE_ADM B WHERE B.EQUIP_CD = A.OUT_EQUIP_CD) OUT_EQUIP_NM			
			,A.LOCATION_CD
			,(SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='004' AND B.BASE_CD = A.LOCATION_CD) LOCATION_NM	
			,DATEADD(month,CONVERT(int, C.LIFE_CYCLE),A.IN_WHS_DATE) LIFE_CYCLE
			,A.IN_WHS_DESC
			,A.REG_ID
			,A.REG_DATE
			,A.UPD_ID
			,A.UPD_DATE
		FROM TB_IN_OUT_WHS_ADM A,
			TB_MATRL_CODE_ADM C
			WHERE 1=1
		  	AND A.IN_WHS_DATE = #{inWhsDate}
		  	AND A.STATUS_CD = 'A'
		  	AND A.MATRL_CD = C.MATRL_CD
			<if test="locationCd != null and locationCd != ''">				
				AND A.LOCATION_CD = #{locationCd}
			</if>		  	
			<if test="qutyCd == 'A'.toString()"> 
			  	AND C.QUTY_CD IN (SELECT BASE_CD FROM TB_SYSTEM_COMMON_CODE WHERE BASE_GROUP_CD = '007' AND (BASE_CD_ABBR = 'A' OR BASE_CD_ABBR = 'N'))
			</if>
			<if test="qutyCd == 'F'.toString()"> 
			  	AND C.QUTY_CD NOT IN (SELECT BASE_CD FROM TB_SYSTEM_COMMON_CODE WHERE BASE_GROUP_CD = '007' AND BASE_CD_ABBR = 'F')
			</if>				 
		
	</select>
	
	<!-- 재고관리 품목별 목록조회 -->
	<select id="tmByMatrlTypeList" resultMap="MatrlInOutWhsAdmVo">
		SELECT	
			A.LOT_NO
			,A.SR_LOT
			,A.IN_WHS_GROUP_SEQ
			,A.MATRL_CD
			,C.MATRL_NM
			,C.QUTY_CD
			,(SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='007' AND B.BASE_CD = C.QUTY_CD) QUTY_NM	
			,C.SURFACE_TRTMT_CD
			, ISNULL((SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE D WHERE D.BASE_GROUP_CD='021' AND D.BASE_CD = C.SURFACE_TRTMT_CD),'') SURFACE_TRTMT_NM
			,(C.THICKNESS + 'X' + C.DEPTH + '-PP' + C.WIDTH + 'X' + C.LENGTH + '-' + C.PITCH +'P')  MODEL				
			,A.PRE_IN_WHS_QTY
			,A.IN_WHS_QTY
			,A.INSPECT_QTY
			,A.ADJUST_QTY				
			,A.DIFF_QTY
			,A.IN_WHS_LENGTH
			,A.SPPLY_DEAL_CORP_CD
			,(SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM B WHERE B.DEAL_CORP_CD = A.SPPLY_DEAL_CORP_CD) SPPLY_DEAL_CORP_NM
			,A.PRE_IN_WHS_DATE
			,A.IN_WHS_DATE
			,A.INSPCT_DATE
			,A.BARCODE_NO
			,A.APPROVAL_CD
			,(SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='026' AND B.BASE_CD = A.APPROVAL_CD) APPROVAL_NM
			,A.STATUS_CD
			,A.MATRL_CHARGR
			,A.PRE_OUT_WHS_DATE
			,A.PRE_OUT_EQUIP_CD
			,(SELECT EQUIP_NM FROM TB_EQUIP_CODE_ADM B WHERE B.EQUIP_CD = A.PRE_OUT_EQUIP_CD) PRE_OUT_EQUIP_NM
			,A.OUT_WHS_DATE
			,A.OUT_EQUIP_CD
			,(SELECT EQUIP_NM FROM TB_EQUIP_CODE_ADM B WHERE B.EQUIP_CD = A.OUT_EQUIP_CD) OUT_EQUIP_NM			
			,A.LOCATION_CD
			,(SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='004' AND B.BASE_CD = A.LOCATION_CD) LOCATION_NM	
			,DATEADD(month,CONVERT(int, C.LIFE_CYCLE),A.IN_WHS_DATE) LIFE_CYCLE
			,A.IN_WHS_DESC
			,A.REG_ID
			,A.REG_DATE
			,A.UPD_ID
			,A.UPD_DATE
		FROM TB_IN_OUT_WHS_ADM A,
			TB_MATRL_CODE_ADM C
			WHERE 1=1
		  	AND A.IN_WHS_DATE BETWEEN #{inWhsDateFrom} AND #{inWhsDateTo}
		  	<!-- AND A.STATUS_CD = 'A' -->
		  	AND A.MATRL_CD = C.MATRL_CD
			<if test="locationCd != null and locationCd != ''">				
				AND A.LOCATION_CD = #{locationCd}
			</if>		  	
			<if test="qutyCd == 'A'.toString()"> 
			  	AND C.QUTY_CD IN ('001','002')
			</if>
			<if test="qutyCd == 'F'.toString()"> 
			  	AND C.QUTY_CD NOT IN ('001','002')
			</if>						 
		
	</select>

	<!-- 재고관리 입고량조정 수정 -->
	<update id="updateInspectAdjust">
		UPDATE	TB_IN_OUT_WHS_ADM 
		SET
			INSPECT_QTY = #{inspectQty}
			<!-- ,DIFF_QTY = #{diffQty} -->
			,ADJUST_QTY = #{adjustQty}
			,UPD_ID = #{updId}
			,UPD_DATE = getDate()
		WHERE	LOT_NO = #{lotNo}
			AND STATUS_CD  = 'A'
	</update>
	
	<!-- 재고관리 자재보류상태 수정 -->
	<update id="updateHoldStatus">
		UPDATE	TB_IN_OUT_WHS_ADM 
		SET
			APPROVAL_CD =	#{approvalCd}				
			,STATUS_CD = #{statusCd}
			,UPD_ID = #{updId}
			,UPD_DATE = getDate()
		WHERE	LOT_NO = #{lotNo}
			AND STATUS_CD  = 'A'
	</update>
	

	<!-- 적정재고관리 자재별적정재고 목록조회 tmsc0040-->
	<select id="tmByMatrlBaseInventoryList" resultMap="MatrlInOutWhsAdmVo">
		SELECT
			A.MATRL_CD
			, A.INSPECT_QTY
			, C.MATRL_NM
			, C.QUTY_CD
			, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='007' AND B.BASE_CD = C.QUTY_CD) QUTY_NM
			, C.GUBUN_CD
			, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE H WHERE H.BASE_GROUP_CD='019' AND H.BASE_CD = C.GUBUN_CD) GUBUN_NM
			, C.CHAMFER_YN_CD
			,(SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE H WHERE H.BASE_GROUP_CD='020' AND H.BASE_CD = C.CHAMFER_YN_CD) CHAMFER_YN_NM
			, C.SURFACE_TRTMT_CD
			,(SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE H WHERE H.BASE_GROUP_CD='021' AND H.BASE_CD = C.SURFACE_TRTMT_CD) SURFACE_TRTMT_NM
			, OPTIMUM_STOCK
			, CASE WHEN C.OPTIMUM_STOCK='0' THEN 0 ELSE CAST((A.inspect_qty - C.OPTIMUM_STOCK) AS NUMERIC(10,1)) END DIFF_QTY
		FROM (
			SELECT MATRL_CD,SUM(CONVERT(float, INSPECT_QTY)) INSPECT_QTY
			FROM TB_IN_OUT_WHS_ADM 
			WHERE 1=1
			<![CDATA[
			AND IN_WHS_DATE <= #{inWhsDate}
			]]>
			AND APPROVAL_CD = '001'
			AND STATUS_CD = 'A'
			GROUP BY MATRL_CD
		
			UNION ALL
		
			SELECT
				MATRL_CD
				, '0' INSPECT_QTY
			FROM TB_MATRL_CODE_ADM
			WHERE 1=1
			AND MATRL_CD NOT IN (SELECT A.MATRL_CD
									FROM TB_IN_OUT_WHS_ADM A
									WHERE 1=1
									<![CDATA[
									AND IN_WHS_DATE <= #{inWhsDate}
									]]>
									AND APPROVAL_CD = '001'
									AND STATUS_CD = 'A'
									GROUP BY A.MATRL_CD)
			AND USE_YN_CD = '001') A,
			TB_MATRL_CODE_ADM C
		WHERE A.MATRL_CD = C.MATRL_CD
			<if test="qutyCd == 'A'.toString()"> 
				AND C.QUTY_CD IN ( SELECT H.BASE_CD FROM TB_SYSTEM_COMMON_CODE H WHERE H.BASE_GROUP_CD='007' AND H.BASE_CD_ABBR IN ('A', 'N') )
			</if>
			<if test="qutyCd == 'F'.toString()"> 
				AND C.QUTY_CD IN ( SELECT H.BASE_CD FROM TB_SYSTEM_COMMON_CODE H WHERE H.BASE_GROUP_CD='007' AND H.BASE_CD_ABBR NOT IN ('A', 'N') )
			</if>
			<choose>
				<when test="diffQtyGubun == ''"> 
				</when>
				<when test="diffQtyGubun == '001'"> 
					<![CDATA[
					AND CASE WHEN C.OPTIMUM_STOCK='0' THEN 0 ELSE CAST((A.inspect_qty - C.OPTIMUM_STOCK) AS NUMERIC(10,1)) END > 0
					]]>
				</when>
				<when test="diffQtyGubun == '002'">
					<![CDATA[ 
					AND (CASE WHEN C.OPTIMUM_STOCK='0' THEN 0 ELSE CAST((A.inspect_qty - C.OPTIMUM_STOCK) AS NUMERIC(10,1)) END <= 0
					OR CASE WHEN C.OPTIMUM_STOCK='0' THEN 0 ELSE CAST((A.inspect_qty - C.OPTIMUM_STOCK) AS NUMERIC(10,1)) END IS NULL)
					]]>
				</when>
				
				<otherwise>
				</otherwise>
			</choose>
			
			<!-- 
			<if test="useYnCd == null or useYnCd == ''"> 
				AND USE_YN_CD = '001'
			</if>
			<choose>
				<when test="dealGubun1 == null and dealGubun2 == null and dealGubun3 == null and dealGubun4 == null and dealGubun5 == null and dealGubun6 == null">
					
				</when>
				<otherwise>
					AND (
						1!=1
					<if test='dealGubun1 == "1"'> 
						OR SUBSTRING(DEAL_GUBUN, 1, 1) = #{dealGubun1}
					</if>
					<if test='dealGubun2 == "1"'> 
						OR SUBSTRING(DEAL_GUBUN, 2, 1) = #{dealGubun2}
					</if>
					<if test='dealGubun3 == "1"'> 
						OR SUBSTRING(DEAL_GUBUN, 3, 1) = #{dealGubun3}
					</if>
					<if test='dealGubun4 == "1"'> 
						OR SUBSTRING(DEAL_GUBUN, 4, 1) = #{dealGubun4}
					</if>
					<if test='dealGubun5 == "1"'> 
						OR SUBSTRING(DEAL_GUBUN, 5, 1) = #{dealGubun5}
					</if>
					<if test='dealGubun6 == "1"'> 
						OR SUBSTRING(DEAL_GUBUN, 6, 1) = #{dealGubun6}
					</if>
					)
				</otherwise>
			</choose>
			 -->
			<!-- 
			<if test="diffQtyGubun == '001'"> 
			  	AND CASE WHEN C.OPTIMUM_STOCK='0' THEN 0 ELSE CAST((A.inspect_qty - C.OPTIMUM_STOCK) AS NUMERIC(10,1)) END > 0
			</if>
			<if test="diffQtyGubun == '002'"> 
			  	AND (CASE WHEN C.OPTIMUM_STOCK='0' THEN 0 ELSE CAST((A.inspect_qty - C.OPTIMUM_STOCK) AS NUMERIC(10,1)) END <= 0
					OR CASE WHEN C.OPTIMUM_STOCK='0' THEN 0 ELSE CAST((A.inspect_qty - C.OPTIMUM_STOCK) AS NUMERIC(10,1)) END IS NULL)
			</if>
			 -->
		ORDER BY DIFF_QTY ASC, A.MATRL_CD
	</select>	
	
	<!-- 적정재고관리 자재별적정재고 상세목록조회-->
	<select id="tmByMatrlBaseInventoryDtlList" resultMap="MatrlInOutWhsAdmVo">
		SELECT	
			A.LOT_NO
			,A.SR_LOT
			,A.IN_WHS_GROUP_SEQ
			,A.MATRL_CD
			,C.MATRL_NM
			,C.QUTY_CD
			,(SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='007' AND B.BASE_CD = C.QUTY_CD) QUTY_NM	
			,C.SURFACE_TRTMT_CD
			, ISNULL((SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE D WHERE D.BASE_GROUP_CD='021' AND D.BASE_CD = C.SURFACE_TRTMT_CD),'') SURFACE_TRTMT_NM
			,(C.THICKNESS + 'X' + C.DEPTH + '-PP' + C.WIDTH + 'X' + C.LENGTH + '-' + C.PITCH +'P')  MODEL				
			,A.PRE_IN_WHS_QTY
			,A.IN_WHS_QTY
			,A.INSPECT_QTY
			,A.ADJUST_QTY				
			,A.DIFF_QTY
			,A.IN_WHS_LENGTH
			,A.SPPLY_DEAL_CORP_CD
			,(SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM B WHERE B.DEAL_CORP_CD = A.SPPLY_DEAL_CORP_CD) SPPLY_DEAL_CORP_NM
			,A.PRE_IN_WHS_DATE
			,A.IN_WHS_DATE
			,A.INSPCT_DATE
			,A.BARCODE_NO
			,A.APPROVAL_CD
			,(SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='026' AND B.BASE_CD = A.APPROVAL_CD) APPROVAL_NM
			,A.STATUS_CD
			,A.MATRL_CHARGR
			,A.PRE_OUT_WHS_DATE
			,A.PRE_OUT_EQUIP_CD
			,(SELECT EQUIP_NM FROM TB_EQUIP_CODE_ADM B WHERE B.EQUIP_CD = A.PRE_OUT_EQUIP_CD) PRE_OUT_EQUIP_NM
			,A.OUT_WHS_DATE
			,A.OUT_EQUIP_CD
			,(SELECT EQUIP_NM FROM TB_EQUIP_CODE_ADM B WHERE B.EQUIP_CD = A.OUT_EQUIP_CD) OUT_EQUIP_NM			
			,A.LOCATION_CD
			,(SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='004' AND B.BASE_CD = A.LOCATION_CD) LOCATION_NM	
			,DATEADD(month,CONVERT(int, C.LIFE_CYCLE),A.IN_WHS_DATE) LIFE_CYCLE
			,A.IN_WHS_DESC
			,A.REG_ID
			,A.REG_DATE
			,A.UPD_ID
			,A.UPD_DATE
		FROM TB_IN_OUT_WHS_ADM A,
			TB_MATRL_CODE_ADM C
			WHERE 1=1
			AND A.MATRL_CD = #{matrlCd}
			<![CDATA[
			AND A.IN_WHS_DATE <= #{inWhsDate}
			]]>
			AND A.APPROVAL_CD = '001'
			AND A.STATUS_CD = 'A'
		  	AND A.MATRL_CD = C.MATRL_CD
	</select>
	
	<!-- 재고관리 재고현황관리(자재)tmsc0050-->
	<select id="tmByMatrlInventoryList" resultMap="MatrlInOutWhsAdmVo">
		<![CDATA[
			SELECT
				A.MATRL_CD
				, D.MATRL_NM
				, D.QUTY_CD
				, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='007' AND B.BASE_CD = D.QUTY_CD) QUTY_NM
				, D.GUBUN_CD
				, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE H WHERE H.BASE_GROUP_CD='019' AND H.BASE_CD = D.GUBUN_CD) GUBUN_NM
				, D.CHAMFER_YN_CD
				, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE H WHERE H.BASE_GROUP_CD='020' AND H.BASE_CD = D.CHAMFER_YN_CD) CHAMFER_YN_NM
				, D.SURFACE_TRTMT_CD
				, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE H WHERE H.BASE_GROUP_CD='021' AND H.BASE_CD = D.SURFACE_TRTMT_CD) SURFACE_TRTMT_NM
				, A.PRE_IN_WHS_QTY
				, B.IN_WHS_QTY
				, C.PRE_OUT_QTY
				, (A.PRE_IN_WHS_QTY+B.IN_WHS_QTY-C.PRE_OUT_QTY) DIFF_QTY
				, E.INSPAET_WAIT_QTY
			FROM
				(
					SELECT A.MATRL_CD, ISNULL(SUM(CAST(B.INSPECT_QTY AS FLOAT)),0)  PRE_IN_WHS_QTY
					FROM TB_MATRL_CODE_ADM A  LEFT OUTER JOIN TB_IN_OUT_WHS_ADM B
					ON A.MATRL_CD = B.MATRL_CD
					AND A.USE_YN_CD = '001'
					AND ((B.IN_WHS_DATE < #{inWhsDate} + '01' AND STATUS_CD IN ('A'))
						OR (B.IN_WHS_DATE < #{inWhsDate} + '01' AND B.PRE_OUT_WHS_DATE IS NOT NULL
							AND SUBSTRING(B.PRE_OUT_WHS_DATE,1,6) >= #{inWhsDate}))
					AND B.APPROVAL_CD IN ('001')
					GROUP BY A.MATRL_CD) A,
				(
					SELECT A.MATRL_CD, ISNULL(SUM(CAST(B.INSPECT_QTY AS FLOAT)),0)  IN_WHS_QTY
					FROM TB_MATRL_CODE_ADM A  LEFT OUTER JOIN TB_IN_OUT_WHS_ADM B
					ON A.MATRL_CD = B.MATRL_CD
					AND A.USE_YN_CD = '001'
					AND B.APPROVAL_CD = '001'
					AND B.IN_WHS_DATE LIKE #{inWhsDate} + '%'
					GROUP BY A.MATRL_CD) B,
				(
					SELECT A.MATRL_CD, ISNULL(SUM(CAST(B.INSPECT_QTY AS FLOAT)),0)  PRE_OUT_QTY
					FROM TB_MATRL_CODE_ADM A  LEFT OUTER JOIN TB_IN_OUT_WHS_ADM B
					ON A.MATRL_CD = B.MATRL_CD
					AND A.USE_YN_CD = '001'
					AND B.APPROVAL_CD = '001'
					AND B.PRE_OUT_WHS_DATE LIKE #{inWhsDate} + '%'
					GROUP BY A.MATRL_CD) C,
				(
					SELECT A.MATRL_CD, ISNULL(SUM(CAST(B.INSPECT_QTY AS FLOAT)),0)  INSPAET_WAIT_QTY
					FROM TB_MATRL_CODE_ADM A  LEFT OUTER JOIN TB_IN_OUT_WHS_ADM B
					ON A.MATRL_CD = B.MATRL_CD
					AND A.USE_YN_CD = '001'
					AND B.STATUS_CD = 'S'
					AND B.PRE_IN_WHS_DATE LIKE #{inWhsDate} + '%'
					GROUP BY A.MATRL_CD) E,
				TB_MATRL_CODE_ADM D
			WHERE A.MATRL_CD = B.MATRL_CD
			AND B.MATRL_CD = C.MATRL_CD
			AND C.MATRL_CD = D.MATRL_CD
			AND D.MATRL_CD = E.MATRL_CD
			AND D.USE_YN_CD = '001'
		]]>
		<if test="qutyCd == 'A'.toString()"> 
		  	AND D.QUTY_CD IN (SELECT BASE_CD FROM TB_SYSTEM_COMMON_CODE WHERE BASE_GROUP_CD = '007' AND (BASE_CD_ABBR = 'A' OR BASE_CD_ABBR = 'N'))
		</if>
		<if test="qutyCd == 'F'.toString()"> 
		  	AND D.QUTY_CD IN (SELECT BASE_CD FROM TB_SYSTEM_COMMON_CODE WHERE BASE_GROUP_CD = '007' AND BASE_CD_ABBR = 'F')
		</if>
			ORDER BY DIFF_QTY DESC, E.INSPAET_WAIT_QTY DESC, MATRL_CD
	</select>	
		
	<!-- 재고관리 재고현황관리(자재상세)-->
	<select id="tmByMatrlInventoryDtlList" resultMap="MatrlInOutWhsAdmVo">
		SELECT 
			C.MATRL_CD
			, C.LOT_NO
			, C.BARCODE_NO
			, C.LOCATION_CD
			, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='077' AND B.BASE_CD = C.LOCATION_CD) LOCATION_NM
			, D.MATRL_NM
			, D.QUTY_CD
			, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='007' AND B.BASE_CD = D.QUTY_CD) QUTY_NM
			, C.PRE_IN_WHS_DATE
			, C.IN_WHS_DATE
			, C.INSPECT_QTY
			, C.INSPCT_DATE
			, D.SURFACE_TRTMT_CD
			, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='021' AND B.BASE_CD = D.SURFACE_TRTMT_CD) SURFACE_TRTMT_NM
			, LIFE_CYCLE
		FROM 
			( 
				(SELECT
					PRE_IN_WHS_DATE
					, IN_WHS_DATE
					, MATRL_CD
					, LOT_NO
					, INSPECT_QTY
					, LOCATION_CD
					, INSPCT_DATE
					, BARCODE_NO
				FROM TB_IN_OUT_WHS_ADM
				WHERE 1=1
			<if test="matrlCd != null and matrlCd != ''">		
				AND MATRL_CD = #{matrlCd}
			</if>
			<![CDATA[
				AND ((IN_WHS_DATE < #{inWhsDate}+'01')
						OR (IN_WHS_DATE < #{inWhsDate}+'01'  AND PRE_OUT_WHS_DATE IS NOT NULL
							AND SUBSTRING(PRE_OUT_WHS_DATE,1,6) >= #{inWhsDate})
					)
			]]>
				AND APPROVAL_CD IN ('001')
				AND STATUS_CD IN ('A')
				<!-- AND STATUS_CD != 'O' 가투입자재 제외하고싶으면-->
				
		        UNION ALL
		        
				SELECT
					PRE_IN_WHS_DATE
					, IN_WHS_DATE
					, MATRL_CD
					, LOT_NO
					, INSPECT_QTY
					, LOCATION_CD
					, INSPCT_DATE
					, BARCODE_NO
				FROM TB_IN_OUT_WHS_ADM
				WHERE 1=1
				<if test="matrlCd != null and matrlCd != ''">		
					AND MATRL_CD = #{matrlCd}
				</if>
					AND IN_WHS_DATE LIKE #{inWhsDate}+'%' 
					AND APPROVAL_CD IN ('001')
					<!-- AND STATUS_CD != 'O' 가투입자재 제외하고싶으면-->)
				
				EXCEPT
				
				(SELECT
					PRE_IN_WHS_DATE
					, IN_WHS_DATE
					, MATRL_CD
					, LOT_NO
					, INSPECT_QTY
					, LOCATION_CD
					, INSPCT_DATE
					, BARCODE_NO
				FROM TB_IN_OUT_WHS_ADM
				WHERE 1=1
			<if test="matrlCd != null and matrlCd != ''">		
				AND MATRL_CD = #{matrlCd}
			</if>
				AND APPROVAL_CD IN ('001')
				AND PRE_OUT_WHS_DATE LIKE #{inWhsDate}+'%'
				<!-- AND STATUS_CD != 'O' 가투입자재 제외하고싶으면-->)
			) C
			, TB_MATRL_CODE_ADM D
		WHERE C.MATRL_CD = D.MATRL_CD
		ORDER BY C.PRE_IN_WHS_DATE, D.MATRL_NM
	</select>

		<!-- 재고관리 재고현황관리(자재상세)-->
	<select id="matrlInventorylList" resultMap="MatrlInOutWhsAdmVo">
		<![CDATA[
			SELECT
				B.MATRL_NM
				, B.SURFACE_TRTMT_CD
				, B.LIFE_CYCLE
				, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE C WHERE C.BASE_GROUP_CD='021' AND C.BASE_CD = B.SURFACE_TRTMT_CD) SURFACE_TRTMT_NM
				, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE C WHERE C.BASE_GROUP_CD='026' AND C.BASE_CD = A.APPROVAL_CD) APPROVAL_NM
				, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE C WHERE C.BASE_GROUP_CD='047' AND C.BASE_CD = A.STATUS_CD) STATUS_NM
				, A.*
			FROM TB_IN_OUT_WHS_ADM A, TB_MATRL_CODE_ADM B
			WHERE 1=1
			AND	APPROVAL_CD = '001'
			AND STATUS_CD IN ('A','O')
			AND IN_WHS_DATE <= #{inWhsDate} + '31'
			AND A.MATRL_CD = B.MATRL_CD
			ORDER BY A.IN_WHS_DATE, A.MATRL_CD
		]]>
	</select>


	<!-- 재고관리 제품(일재고현황) -->
	<select id="tmByGoodsInventoryList" resultMap="MatrlInOutWhsAdmVo">
		<![CDATA[
                  SELECT 
                    CC.GOODS_CD
					,D.GOODS_NM
					,D.DEAL_CORP_CD
					,D.MODEL
					,(SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM B WHERE B.DEAL_CORP_CD = D.DEAL_CORP_CD) DEAL_CORP_NM
					,E.QUTY_CD
					,(SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='007' AND B.BASE_CD = E.QUTY_CD) QUTY_NM
                    ,CC.ORD_GUBUN STATUS_CD
					,(SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='018' AND B.BASE_CD = CC.ORD_GUBUN) STATUS_NM
                    ,(CC.PRE_IN_WHS_QTY-DD.PRE_OUT_WHS_QTY) PRE_IN_WHS_QTY
                    ,CC.IN_WHS_QTY
                    ,DD.PRE_OUT_WHS_QTY PRE_OUT_QTY
                    ,DD.OUT_WHS_QTY OUT_QTY
					,(CC.PRE_IN_WHS_QTY + CC.IN_WHS_QTY - DD.PRE_OUT_WHS_QTY - DD.OUT_WHS_QTY) DIFF_QTY
					,SUM(CC.PRE_IN_WHS_QTY + CC.IN_WHS_QTY - DD.PRE_OUT_WHS_QTY - DD.OUT_WHS_QTY) OVER (PARTITION BY  CC.GOODS_CD) GOODS_REMAIN_SUM
                FROM (
                        SELECT
                        AA.GOODS_CD,
                        AA.ORD_GUBUN,
                        (AA.PRE_IN_WHS_QTY+BB.PRE_IN_WHS_QTY)  PRE_IN_WHS_QTY,
                        (AA.IN_WHS_QTY+BB.IN_WHS_QTY)  IN_WHS_QTY
                        FROM (
	                            SELECT A.GOODS_CD, 
	                            A.ORD_GUBUN,
	                            ISNULL(PRE_IN_WHS_QTY, 0) PRE_IN_WHS_QTY,
	                            ISNULL(IN_WHS_QTY, 0) IN_WHS_QTY
	                            FROM (
	                                SELECT GOODS_CD, BASE_CD ORD_GUBUN
	                                FROM TB_GOODS_CODE_ADM A, 
										 TB_SYSTEM_COMMON_CODE B
									WHERE B.BASE_GROUP_CD = '018'
									AND A.USE_YN_CD = '001' ) A  LEFT OUTER JOIN 
									( 
										SELECT 
											GOODS_CD, 
											ORD_GUBUN,									
											SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
											SUM(IN_WHS_QTY) IN_WHS_QTY
											FROM (
												SELECT 
												GOODS_CD, 
												ORD_GUBUN,
												ISNULL(CASE WHEN  GOODS_IN_DATE < #{packDate} THEN SUM(PACK_CNT) END,0) PRE_IN_WHS_QTY,
												ISNULL(CASE WHEN  GOODS_IN_DATE = #{packDate} THEN SUM(PACK_CNT) END,0) IN_WHS_QTY
											 FROM TB_GOODS_PRODUCT_INFO_ADM
											 WHERE DISUSE_YN = 'N'
												AND GOODS_STATUS = '002'
												AND GOODS_IN_DATE <= #{packDate}
												GROUP BY GOODS_CD, ORD_GUBUN, GOODS_IN_DATE) KK
											GROUP BY GOODS_CD, ORD_GUBUN	
									) B
	                            ON A.GOODS_CD = B.GOODS_CD
								AND A.ORD_GUBUN = B.ORD_GUBUN ) AA,
                            (
                                SELECT 
								A.GOODS_CD, 
                                A.ORD_GUBUN,
	                            ISNULL(PRE_IN_WHS_QTY, 0) PRE_IN_WHS_QTY,
	                            ISNULL(IN_WHS_QTY, 0) IN_WHS_QTY
                                FROM (
	                                SELECT GOODS_CD, BASE_CD ORD_GUBUN
	                                FROM TB_GOODS_CODE_ADM A, 
										 TB_SYSTEM_COMMON_CODE B
									WHERE B.BASE_GROUP_CD = '018'
									AND A.USE_YN_CD = '001' ) A  LEFT OUTER JOIN 
									( 
										SELECT 
											GOODS_CD, 
											ORD_GUBUN,									
											SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
											SUM(IN_WHS_QTY) IN_WHS_QTY										
										FROM (
											SELECT 
												GOODS_CD, 
												ORDER_GUBUN_CD ORD_GUBUN,
												ISNULL(CASE WHEN  CONVERT(CHAR(8), REG_DATE, 112) < #{packDate} THEN SUM(PACK_CNT) END,0) PRE_IN_WHS_QTY,
												ISNULL(CASE WHEN  CONVERT(CHAR(8), REG_DATE, 112) = #{packDate} THEN SUM(PACK_CNT) END,0) IN_WHS_QTY
											 FROM TB_PRE_GOODS_INVENTORY_DTL
											 WHERE GOODS_STATUS = '002'
												AND CONVERT(CHAR(8), REG_DATE, 112) <= #{packDate}
												GROUP BY GOODS_CD, ORDER_GUBUN_CD,REG_DATE) KK
										GROUP BY GOODS_CD, ORD_GUBUN		
									) B
                                ON A.GOODS_CD = B.GOODS_CD
                                AND A.ORD_GUBUN = B.ORD_GUBUN) BB
                           WHERE AA.GOODS_CD = BB.GOODS_CD
                                AND AA.ORD_GUBUN = BB.ORD_GUBUN) CC ,
                
                        (
								SELECT A.GOODS_CD, 
								A.ORD_GUBUN,
								ISNULL(PRE_OUT_WHS_QTY,0)  PRE_OUT_WHS_QTY,
								ISNULL(OUT_WHS_QTY,0)  OUT_WHS_QTY
								FROM (
	                                SELECT GOODS_CD, BASE_CD ORD_GUBUN
	                                FROM TB_GOODS_CODE_ADM A, 
										 TB_SYSTEM_COMMON_CODE B
									WHERE B.BASE_GROUP_CD = '018'
									AND A.USE_YN_CD = '001' ) A  LEFT OUTER JOIN 
									(
									  	SELECT 
									  		GOODS_CD,
											ORD_GUBUN,
											SUM(PRE_OUT_WHS_QTY) PRE_OUT_WHS_QTY,
											SUM(OUT_WHS_QTY) OUT_WHS_QTY
										FROM (									
									
											SELECT 
												B.GOODS_CD, 
												C.ORD_GUBUN ORD_GUBUN,
												ISNULL(CASE WHEN B.PO_DATE < #{packDate} THEN SUM(OUTPUT_CNT) END,0)  PRE_OUT_WHS_QTY,
												ISNULL(CASE WHEN B.PO_DATE = #{packDate} THEN SUM(OUTPUT_CNT) END,0)  OUT_WHS_QTY
												FROM TB_PURCHASE_ORDER_ADM A, TB_PURCHASE_ORDER_DTL B, TB_GOODS_PRODUCT_INFO_ADM C
												WHERE A.PO_SEQ = B.PO_SEQ
												AND B.PO_DATE <= #{packDate}
												AND B.BOX_NO = C.BOX_NO
												GROUP BY B.GOODS_CD,  C.ORD_GUBUN, B.PO_DATE
											UNION		
											SELECT 
												B.GOODS_CD, 
												C.ORDER_GUBUN_CD ORD_GUBUN,
												ISNULL(CASE WHEN B.PO_DATE < #{packDate} THEN SUM(OUTPUT_CNT) END,0)  PRE_OUT_WHS_QTY,
												ISNULL(CASE WHEN B.PO_DATE = #{packDate} THEN SUM(OUTPUT_CNT) END,0)  OUT_WHS_QTY
												FROM TB_PURCHASE_ORDER_ADM A, TB_PURCHASE_ORDER_DTL B, TB_PRE_GOODS_INVENTORY_DTL C
												WHERE A.PO_SEQ = B.PO_SEQ
												AND B.PO_DATE <= #{packDate}
												AND B.BOX_NO = C.BOX_NO
												GROUP BY B.GOODS_CD,  C.ORDER_GUBUN_CD, B.PO_DATE
												) AA
										GROUP BY GOODS_CD, ORD_GUBUN
									) B
								ON A.GOODS_CD = B.GOODS_CD
								AND A.ORD_GUBUN = B.ORD_GUBUN) DD,
							TB_GOODS_CODE_ADM D,
							TB_MATRL_CODE_ADM E
                WHERE CC.GOODS_CD = DD.GOODS_CD
                   AND CC.ORD_GUBUN = DD.ORD_GUBUN
				   AND CC.GOODS_CD = D.GOODS_CD
				   AND D.ALNICU_MATRL_CD = E.MATRL_CD
				 ORDER BY GOODS_CD, STATUS_CD  
		]]>
	</select>
	
	<!-- 재고관리 제품(일재고현황) 상세-->
	<select id="tmByGoodsInventoryDtlList" resultMap="MatrlInOutWhsAdmVo">
		SELECT
		    AA.GOODS_CD
		    , D.GOODS_NM
		    , AA.BOX_NO
		    , AA.PACK_CNT
		    , AA.REMAIN_CNT
		    , ISNULL((SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='004' AND B.BASE_CD = AA.LOCATION_CD), '-') LOCATION_NM
		    , AA.GOODS_IN_DATE
		    , (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='021' AND B.BASE_CD = E.SURFACE_TRTMT_CD) SURFACE_TRTMT_NM
		FROM (
				SELECT
					BOX_NO
					, GOODS_CD
					, PACK_CNT
					, LOCATION_CD
					, GOODS_IN_DATE
					, REMAIN_CNT
				FROM TB_GOODS_PRODUCT_INFO_ADM
				WHERE 1=1
				<if test="goodsCd != null and goodsCd != ''">
				AND GOODS_CD = '${goodsCd}'
				</if>
				<![CDATA[
				AND GOODS_IN_DATE <= #{packDate}
				]]>
				AND DISUSE_YN = 'N'
				AND DIVISION_YN != 'D' AND DIVISION_YN != 'M'
				AND FAULTY_STATUS = '001'
				AND GOODS_STATUS = '002'
				
	            UNION
				
				SELECT
					BOX_NO
					, GOODS_CD
					, PACK_CNT
					, '' LOCATION_CD
					, GOODS_IN_DATE
					, REMAIN_CNT
				FROM TB_PRE_GOODS_INVENTORY_DTL
				WHERE 1=1
				<![CDATA[
				AND GOODS_IN_DATE <= #{packDate}
				]]>
				<if test="goodsCd != null and goodsCd != ''">
				AND GOODS_CD = '${goodsCd}'
				</if>
				AND FAULTY_STATUS = '001'
				AND GOODS_STATUS = '002'
					) AA,
			TB_GOODS_CODE_ADM D,
			TB_MATRL_CODE_ADM E
			WHERE AA.GOODS_CD = D.GOODS_CD
		 	AND D.ALNICU_MATRL_CD = E.MATRL_CD
			ORDER BY BOX_NO
	</select>	
	
	<!-- 재고관리 제품(월재고현황)-->
	<select id="tmByGoodsMonthInventoryList" resultMap="MatrlInOutWhsAdmVo">
		<!-- <![CDATA[
                SELECT 
                    CC.GOODS_CD
					,D.GOODS_NM
					,D.DEAL_CORP_CD
					,D.MODEL
					,(SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM B WHERE B.DEAL_CORP_CD = D.DEAL_CORP_CD) DEAL_CORP_NM
					,E.QUTY_CD
					,(SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='007' AND B.BASE_CD = E.QUTY_CD) QUTY_NM
                    ,CC.ORD_GUBUN STATUS_CD
					,(SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='018' AND B.BASE_CD = CC.ORD_GUBUN) STATUS_NM
                    ,(CC.PRE_IN_WHS_QTY-DD.PRE_OUT_WHS_QTY) PRE_IN_WHS_QTY
                    ,CC.IN_WHS_QTY
                    ,DD.PRE_OUT_WHS_QTY PRE_OUT_QTY
                    ,DD.OUT_WHS_QTY OUT_QTY
					,(CC.PRE_IN_WHS_QTY + CC.IN_WHS_QTY - DD.PRE_OUT_WHS_QTY - DD.OUT_WHS_QTY) DIFF_QTY
					,SUM(CC.PRE_IN_WHS_QTY + CC.IN_WHS_QTY - DD.PRE_OUT_WHS_QTY - DD.OUT_WHS_QTY) OVER (PARTITION BY CC.GOODS_CD) GOODS_REMAIN_SUM 
                FROM (
                        SELECT
                        AA.GOODS_CD,
                        AA.ORD_GUBUN,
                        (AA.PRE_IN_WHS_QTY+BB.PRE_IN_WHS_QTY)  PRE_IN_WHS_QTY,
                        (AA.IN_WHS_QTY+BB.IN_WHS_QTY)  IN_WHS_QTY
                        FROM (
	                            SELECT A.GOODS_CD, 
	                            A.ORD_GUBUN,
	                            ISNULL(PRE_IN_WHS_QTY, 0) PRE_IN_WHS_QTY,
	                            ISNULL(IN_WHS_QTY, 0) IN_WHS_QTY
	                            FROM (
	                                SELECT GOODS_CD, BASE_CD ORD_GUBUN
	                                FROM TB_GOODS_CODE_ADM A, 
										 TB_SYSTEM_COMMON_CODE B
									WHERE B.BASE_GROUP_CD = '018'
									AND A.USE_YN_CD = '001' ) A  LEFT OUTER JOIN 
									( 
										SELECT 
											GOODS_CD, 
											ORD_GUBUN,									
											SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
											SUM(IN_WHS_QTY) IN_WHS_QTY
                                        FROM (
                                            SELECT 
                                                GOODS_CD, 
                                                ORD_GUBUN,
                                                ISNULL(CASE WHEN  GOODS_IN_DATE < #{packDate} + '01' THEN SUM(PACK_CNT) END,0)  PRE_IN_WHS_QTY,
                                                ISNULL(CASE WHEN  SUBSTRING(GOODS_IN_DATE,1,6) = #{packDate} THEN SUM(PACK_CNT) END,0) IN_WHS_QTY
                                             FROM TB_GOODS_PRODUCT_INFO_ADM
                                             WHERE DISUSE_YN = 'N'
                                                AND GOODS_STATUS != '001'
                                                AND SUBSTRING(GOODS_IN_DATE,1,6) <= #{packDate}
                                                GROUP BY GOODS_CD, ORD_GUBUN, GOODS_IN_DATE) KK
                                            GROUP BY GOODS_CD, ORD_GUBUN
                                    ) B
	                            ON A.GOODS_CD = B.GOODS_CD
								AND A.ORD_GUBUN = B.ORD_GUBUN ) AA,
                            (
                                SELECT 
								A.GOODS_CD, 
                                A.ORD_GUBUN,
	                            ISNULL(PRE_IN_WHS_QTY, 0) PRE_IN_WHS_QTY,
	                            ISNULL(IN_WHS_QTY, 0) IN_WHS_QTY
                                FROM (
	                                SELECT GOODS_CD, BASE_CD ORD_GUBUN
	                                FROM TB_GOODS_CODE_ADM A, 
										 TB_SYSTEM_COMMON_CODE B
									WHERE B.BASE_GROUP_CD = '018'
									AND A.USE_YN_CD = '001' ) A  LEFT OUTER JOIN 
									( 
                                        SELECT
											GOODS_CD, 
											ORD_GUBUN,									
											SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
											SUM(IN_WHS_QTY) IN_WHS_QTY                                        
                                        FROM (
                                            SELECT 
                                                GOODS_CD, 
                                                ORDER_GUBUN_CD ORD_GUBUN,
                                                ISNULL(CASE WHEN  CONVERT(CHAR(8), REG_DATE, 112) < #{packDate} + '01' THEN SUM(PACK_CNT) END,0)  PRE_IN_WHS_QTY,
                                                ISNULL(CASE WHEN  SUBSTRING(CONVERT(CHAR(8), REG_DATE, 112),1,6) = #{packDate} THEN SUM(PACK_CNT) END,0) IN_WHS_QTY
                                             FROM TB_PRE_GOODS_INVENTORY_DTL
                                             WHERE GOODS_STATUS != '001'
                                                AND SUBSTRING(CONVERT(CHAR(8), REG_DATE, 112),1,6) <= #{packDate}
                                                GROUP BY GOODS_CD, ORDER_GUBUN_CD, REG_DATE ) KK
                                        GROUP BY GOODS_CD, ORD_GUBUN
                                     ) B
                                ON A.GOODS_CD = B.GOODS_CD
                                AND A.ORD_GUBUN = B.ORD_GUBUN) BB
                           WHERE AA.GOODS_CD = BB.GOODS_CD
                                AND AA.ORD_GUBUN = BB.ORD_GUBUN) CC ,
                
                        (
								SELECT A.GOODS_CD, 
								A.ORD_GUBUN,
								ISNULL(PRE_OUT_WHS_QTY,0)  PRE_OUT_WHS_QTY,
								ISNULL(OUT_WHS_QTY,0)  OUT_WHS_QTY
								FROM (
	                                SELECT GOODS_CD, BASE_CD ORD_GUBUN
	                                FROM TB_GOODS_CODE_ADM A, 
										 TB_SYSTEM_COMMON_CODE B
									WHERE B.BASE_GROUP_CD = '018'
									AND A.USE_YN_CD = '001' ) A  LEFT OUTER JOIN 
									(
									  	SELECT 
									  		GOODS_CD,
											ORD_GUBUN,
											SUM(PRE_OUT_WHS_QTY) PRE_OUT_WHS_QTY,
											SUM(OUT_WHS_QTY) OUT_WHS_QTY
										FROM (									
									
											SELECT 
												B.GOODS_CD, 
												C.ORD_GUBUN ORD_GUBUN,
												ISNULL(CASE WHEN B.PO_DATE < #{packDate} + '01' THEN SUM(OUTPUT_CNT) END,0)  PRE_OUT_WHS_QTY,
												ISNULL(CASE WHEN SUBSTRING(B.PO_DATE, 1,6) = #{packDate} THEN SUM(OUTPUT_CNT) END,0)  OUT_WHS_QTY
												FROM TB_PURCHASE_ORDER_ADM A, TB_PURCHASE_ORDER_DTL B, TB_GOODS_PRODUCT_INFO_ADM C
												WHERE A.PO_SEQ = B.PO_SEQ
												AND SUBSTRING(B.PO_DATE, 1,6) <= #{packDate}
												AND B.BOX_NO = C.BOX_NO
												GROUP BY B.GOODS_CD,  C.ORD_GUBUN, B.PO_DATE
											UNION		
											SELECT 
												B.GOODS_CD, 
												C.ORDER_GUBUN_CD ORD_GUBUN,
												ISNULL(CASE WHEN B.PO_DATE < #{packDate} + '01' THEN SUM(OUTPUT_CNT) END,0)  PRE_OUT_WHS_QTY,
												ISNULL(CASE WHEN SUBSTRING(B.PO_DATE, 1,6) = #{packDate} THEN SUM(OUTPUT_CNT) END,0)  OUT_WHS_QTY
												FROM TB_PURCHASE_ORDER_ADM A, TB_PURCHASE_ORDER_DTL B, TB_PRE_GOODS_INVENTORY_DTL C
												WHERE A.PO_SEQ = B.PO_SEQ
												AND SUBSTRING(B.PO_DATE, 1,6) <= #{packDate}
												AND B.BOX_NO = C.BOX_NO
												GROUP BY B.GOODS_CD,  C.ORDER_GUBUN_CD, B.PO_DATE	) AA
										GROUP BY GOODS_CD, ORD_GUBUN
									) B
								ON A.GOODS_CD = B.GOODS_CD
								AND A.ORD_GUBUN = B.ORD_GUBUN) DD,
							TB_GOODS_CODE_ADM D,
							TB_MATRL_CODE_ADM E
                WHERE CC.GOODS_CD = DD.GOODS_CD
                   AND CC.ORD_GUBUN = DD.ORD_GUBUN
				   AND CC.GOODS_CD = D.GOODS_CD
				   AND D.ALNICU_MATRL_CD = E.MATRL_CD
				 ORDER BY GOODS_CD, STATUS_CD
		]]> -->
		<!-- <![CDATA[
				SELECT
                    CC.GOODS_CD
					,D.GOODS_NM
					,D.DEAL_CORP_CD
					,D.MODEL
					,(SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM B WHERE B.DEAL_CORP_CD = D.DEAL_CORP_CD) DEAL_CORP_NM
					,E.QUTY_CD
					,(SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='007' AND B.BASE_CD = E.QUTY_CD) QUTY_NM                  
                    ,(CC.PRE_IN_WHS_QTY) PRE_IN_WHS_QTY
                    ,CC.IN_WHS_QTY
                    ,DD.PRE_OUT_WHS_QTY PRE_OUT_QTY
                    ,DD.OUT_WHS_QTY OUT_QTY
					,(CC.PRE_IN_WHS_QTY + CC.IN_WHS_QTY) DIFF_QTY
					,SUM(CC.PRE_IN_WHS_QTY + CC.IN_WHS_QTY) OVER (PARTITION BY CC.GOODS_CD) GOODS_REMAIN_SUM 
                FROM (
                        SELECT
                        AA.GOODS_CD,                       
                        (AA.PRE_IN_WHS_QTY+BB.PRE_IN_WHS_QTY)  PRE_IN_WHS_QTY,
                        (AA.IN_WHS_QTY+BB.IN_WHS_QTY)  IN_WHS_QTY
                        FROM (
	                            SELECT A.GOODS_CD, 	                         
	                            ISNULL(PRE_IN_WHS_QTY, 0) PRE_IN_WHS_QTY,
	                            ISNULL(IN_WHS_QTY, 0) IN_WHS_QTY
	                            FROM (
	                                SELECT GOODS_CD
	                                FROM TB_GOODS_CODE_ADM A										
									WHERE A.USE_YN_CD = '001' ) A  LEFT OUTER JOIN 
									( 
										SELECT 
											GOODS_CD, 																				
											SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
											SUM(IN_WHS_QTY) IN_WHS_QTY
                                        FROM (
                                            SELECT 
                                                GOODS_CD,                                                 
                                                ISNULL(CASE WHEN  GOODS_IN_DATE < '${packDate}' + '01' THEN SUM(REMAIN_CNT) END,0)  PRE_IN_WHS_QTY,
                                                
                                                ISNULL(CASE WHEN GOODS_IN_DATE >= '${packDate}' + '01' AND GOODS_IN_DATE <= '${inWhsDays}' THEN SUM(REMAIN_CNT) END,0) IN_WHS_QTY
                                                
                                                
                                             FROM TB_GOODS_PRODUCT_INFO_ADM
                                             WHERE DISUSE_YN = 'N'
                                             	AND DIVISION_YN != 'D' AND DIVISION_YN != 'M'
                                             	AND FAULTY_STATUS = '001'
                                                AND GOODS_STATUS != '001'
                                               
                                                AND GOODS_IN_DATE <= '${inWhsDays}'
                                                
                                                GROUP BY GOODS_CD, GOODS_IN_DATE) KK
                                            GROUP BY GOODS_CD
                                    ) B
	                            ON A.GOODS_CD = B.GOODS_CD
								 ) AA,
                            (
                                SELECT 
								A.GOODS_CD, 
	                            ISNULL(PRE_IN_WHS_QTY, 0) PRE_IN_WHS_QTY,
	                            ISNULL(IN_WHS_QTY, 0) IN_WHS_QTY
                                FROM (
	                                SELECT GOODS_CD
	                                FROM TB_GOODS_CODE_ADM A										
									WHERE  A.USE_YN_CD = '001' ) A  LEFT OUTER JOIN 
									( 
                                        SELECT
											GOODS_CD, 																
											SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
											SUM(IN_WHS_QTY) IN_WHS_QTY                                        
                                        FROM (
                                            SELECT 
                                                GOODS_CD,                                                
                                                ISNULL(CASE WHEN  CONVERT(CHAR(8), REG_DATE, 112) < '${packDate}' + '01' THEN SUM(REMAIN_CNT) END,0)  PRE_IN_WHS_QTY,
                                                ISNULL(CASE WHEN  SUBSTRING(CONVERT(CHAR(8), REG_DATE, 112),1,6) = '${packDate}' THEN SUM(REMAIN_CNT) END,0) IN_WHS_QTY
                                             FROM TB_PRE_GOODS_INVENTORY_DTL
                                             WHERE GOODS_STATUS != '001'
                                            	 AND FAULTY_STATUS = '001'
                                                AND SUBSTRING(CONVERT(CHAR(8), REG_DATE, 112),1,6) <= '${packDate}'
                                                GROUP BY GOODS_CD, REG_DATE ) KK
                                        GROUP BY GOODS_CD
                                     ) B
                                ON A.GOODS_CD = B.GOODS_CD
                               ) BB
                           WHERE AA.GOODS_CD = BB.GOODS_CD    
						   ) CC ,
                
                        (
								SELECT A.GOODS_CD, 							
								ISNULL(PRE_OUT_WHS_QTY,0)  PRE_OUT_WHS_QTY,
								ISNULL(OUT_WHS_QTY,0)  OUT_WHS_QTY
								FROM (
	                                SELECT GOODS_CD
	                                FROM TB_GOODS_CODE_ADM A										 
									WHERE A.USE_YN_CD = '001' ) A  LEFT OUTER JOIN 
									(
									  	SELECT 
									  		GOODS_CD,											
											SUM(PRE_OUT_WHS_QTY) PRE_OUT_WHS_QTY,
											SUM(OUT_WHS_QTY) OUT_WHS_QTY
										FROM (
											SELECT 
												B.GOODS_CD, 												
												ISNULL(CASE WHEN B.PO_DATE < '${packDate}' + '01' THEN SUM(OUTPUT_CNT) END,0)  PRE_OUT_WHS_QTY,
												ISNULL(CASE WHEN SUBSTRING(B.PO_DATE, 1,6) = '${packDate}' THEN SUM(OUTPUT_CNT) END,0)  OUT_WHS_QTY
												FROM TB_PURCHASE_ORDER_ADM A, TB_PURCHASE_ORDER_DTL B, TB_GOODS_PRODUCT_INFO_ADM C
												WHERE A.PO_SEQ = B.PO_SEQ
												AND C.DISUSE_YN = 'N'
												AND C.DIVISION_YN != 'D' AND C.DIVISION_YN != 'M'
												AND C.FAULTY_STATUS = '001'
												AND SUBSTRING(B.PO_DATE, 1,6) <= '${packDate}'
												AND B.BOX_NO = C.BOX_NO
												GROUP BY B.GOODS_CD, B.PO_DATE
											UNION ALL
											SELECT 
												B.GOODS_CD, 											
												ISNULL(CASE WHEN B.PO_DATE < '${packDate}' + '01' THEN SUM(OUTPUT_CNT) END,0)  PRE_OUT_WHS_QTY,
												ISNULL(CASE WHEN SUBSTRING(B.PO_DATE, 1,6) = '${packDate}' THEN SUM(OUTPUT_CNT) END,0)  OUT_WHS_QTY
												FROM TB_PURCHASE_ORDER_ADM A, TB_PURCHASE_ORDER_DTL B, TB_PRE_GOODS_INVENTORY_DTL C
												WHERE A.PO_SEQ = B.PO_SEQ
												AND C.FAULTY_STATUS = '001'
												AND SUBSTRING(B.PO_DATE, 1,6) <= '${packDate}'
												AND B.BOX_NO = C.BOX_NO
												GROUP BY B.GOODS_CD, B.PO_DATE	) AA
										GROUP BY GOODS_CD
									) B
								ON A.GOODS_CD = B.GOODS_CD
								) DD,
							TB_GOODS_CODE_ADM D,
							TB_MATRL_CODE_ADM E
                WHERE CC.GOODS_CD = DD.GOODS_CD             
				   AND CC.GOODS_CD = D.GOODS_CD
				   AND D.ALNICU_MATRL_CD = E.MATRL_CD			
				 ORDER BY GOODS_CD
				 ]]>
				  -->
				 
		<!-- 		 
			<![CDATA[
				 SELECT 
					A.SP_CD
					, B.GOODS_NM
					, B.MODEL
					, B.DEAL_CORP_CD
					, (SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD = B.DEAL_CORP_CD) DEAL_CORP_NM
					, C.QUTY_CD
					, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE X WHERE X.BASE_GROUP_CD='007' AND X.BASE_CD = C.QUTY_CD ) QUTY_NM
					, ISNULL(D.IN_COUNT, 0) AS IN_COUNT
					, ISNULL(D.OUT_COUNT, 0) AS OUT_COUNT
					, ISNULL(D.CARRY_OVER_COUNT, 0) AS CARRY_OVER_COUNT
					, ( ISNULL(D.CARRY_OVER_COUNT, 0) + ISNULL(D.IN_COUNT, 0)  ) - ISNULL(D.OUT_COUNT, 0) AS DIFF_QTY
				
				FROM TB_GOODS_CODE_ADM B, TB_MATRL_CODE_ADM C, TB_STOCK_PAYMENT_ADM A
				
				
					FULL OUTER JOIN (
						SELECT 	
							ISNULL(ISNULL (A.SP_CD , B.SP_CD), C.SP_CD) AS SP_CD
							, A.IN_COUNT
							, B.OUT_COUNT
							, C.CARRY_OVER_COUNT
						FROM (
								(
									SELECT
										SP_CD
										, SUM(SP_COUNT) AS IN_COUNT
									FROM TB_STOCK_PAYMENT_ADM
									WHERE 1=1
									AND LOCATION_CD ='007'
									AND SP_GUBUN = 'I'
									AND SP_TYPE = '002'
									AND SP_DATE >= '${packDate}' + '01'
									AND SP_DATE <= '${inWhsDays}'
									GROUP BY 
										SP_CD
								) A
								FULL OUTER JOIN
								( 
									SELECT
										SP_CD
										, SUM(SP_COUNT) AS OUT_COUNT
									FROM TB_STOCK_PAYMENT_ADM
									WHERE 1=1
									AND LOCATION_CD ='008'
									AND SP_GUBUN = 'O'
									AND SP_TYPE = '002'
									AND SP_DATE >= '${packDate}' + '01'
									AND SP_DATE <= '${inWhsDays}'
									GROUP BY 
										SP_CD
								) B
								ON 1=1
								AND A.SP_CD = B.SP_CD
				
								FULL OUTER JOIN 
								(
									SELECT
										A.SP_CD
										, B.ALL_IN_COUNT
										, C.ALL_OUT_COUNT
										, ( B.ALL_IN_COUNT - C.ALL_OUT_COUNT ) AS CARRY_OVER_COUNT
				
									FROM TB_STOCK_PAYMENT_ADM A
				
									, ( SELECT
												SP_CD
												, SUM(SP_COUNT) AS ALL_IN_COUNT
											FROM TB_STOCK_PAYMENT_ADM
											WHERE 1=1
											AND LOCATION_CD ='007'
											AND SP_GUBUN = 'I'
											AND SP_TYPE = '002'
											AND SP_DATE < '${packDate}' + '01'
											GROUP BY SP_CD
									) B
								  
									, ( SELECT
											SP_CD
											, SUM(SP_COUNT) AS ALL_OUT_COUNT
										FROM TB_STOCK_PAYMENT_ADM
										WHERE 1=1
										AND LOCATION_CD ='008'
										AND SP_GUBUN = 'O'
										AND SP_TYPE = '002'
										AND SP_DATE < '${packDate}' + '01'
										GROUP BY SP_CD
									) C
				
									WHERE 1=1
									AND A.SP_CD = B.SP_CD
									AND B.SP_CD = C.SP_CD
									AND SP_TYPE = '002'
									
									AND SP_DATE < '${packDate}' + '01'
									GROUP BY 
										A.SP_CD
										, B.ALL_IN_COUNT
										, C.ALL_OUT_COUNT
								) C
								ON 1=1
								AND A.SP_CD = C.SP_CD
							)
						) D
						ON 1=1
						AND A.SP_CD = D.SP_CD
				
				WHERE 1=1
				AND A.SP_CD = B.GOODS_CD
				AND B.ALNICU_MATRL_CD = C.MATRL_CD
				AND SP_TYPE = '002'
				AND SUBSTRING( CONVERT(CHAR(8), SP_DATE), 1,6) = '${packDate}'
				
				GROUP BY 
					A.SP_CD
					, B.GOODS_NM
					, B.MODEL
					, C.QUTY_CD
					, B.DEAL_CORP_CD
					, D.IN_COUNT
					, D.OUT_COUNT
					, D.CARRY_OVER_COUNT
					
				ORDER BY GOODS_NM
			]]>
	 -->
	<![CDATA[
				SELECT
                    CC.GOODS_CD
					,D.GOODS_NM
					,D.DEAL_CORP_CD
					,D.MODEL
					,(SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM B WHERE B.DEAL_CORP_CD = D.DEAL_CORP_CD) DEAL_CORP_NM
					,E.QUTY_CD
					,(SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='007' AND B.BASE_CD = E.QUTY_CD) QUTY_NM                  
                    ,(CC.PRE_IN_WHS_QTY) PRE_IN_WHS_QTY
                    ,CC.IN_WHS_QTY
                    ,DD.PRE_OUT_WHS_QTY PRE_OUT_QTY
                    ,DD.OUT_WHS_QTY OUT_QTY
					,(CC.PRE_IN_WHS_QTY + CC.IN_WHS_QTY) DIFF_QTY
					,SUM(CC.PRE_IN_WHS_QTY + CC.IN_WHS_QTY) OVER (PARTITION BY CC.GOODS_CD) GOODS_REMAIN_SUM 
                FROM (
                        SELECT
                        AA.GOODS_CD,                       
                        (AA.PRE_IN_WHS_QTY+BB.PRE_IN_WHS_QTY)  PRE_IN_WHS_QTY,
                        (AA.IN_WHS_QTY+BB.IN_WHS_QTY)  IN_WHS_QTY
                        FROM (
	                            SELECT A.GOODS_CD, 	                         
	                            ISNULL(PRE_IN_WHS_QTY, 0) PRE_IN_WHS_QTY,
	                            ISNULL(IN_WHS_QTY, 0) IN_WHS_QTY
	                            FROM (
	                                SELECT GOODS_CD
	                                FROM TB_GOODS_CODE_ADM A										
									WHERE A.USE_YN_CD = '001' ) A  LEFT OUTER JOIN 
									( 
										SELECT 
											GOODS_CD, 																				
											SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
											SUM(IN_WHS_QTY) IN_WHS_QTY
                                        FROM (
                                            SELECT 
                                                GOODS_CD,                                                 
                                                ISNULL(CASE WHEN  GOODS_IN_DATE < '${packDate}' + '01' THEN SUM(REMAIN_CNT) END,0)  PRE_IN_WHS_QTY,
                                                ISNULL(CASE WHEN  SUBSTRING(GOODS_IN_DATE,1,6) = '${packDate}' THEN SUM(REMAIN_CNT) END,0) IN_WHS_QTY
                                             FROM TB_GOODS_PRODUCT_INFO_ADM
                                             WHERE DISUSE_YN = 'N'
                                             	AND DIVISION_YN != 'D' AND DIVISION_YN != 'M'
                                             	AND FAULTY_STATUS = '001'
                                                AND GOODS_STATUS != '001'
                                                AND SUBSTRING(GOODS_IN_DATE,1,6) <= '${packDate}'
                                                GROUP BY GOODS_CD, GOODS_IN_DATE) KK
                                            GROUP BY GOODS_CD
                                    ) B
	                            ON A.GOODS_CD = B.GOODS_CD
								 ) AA,
                            (
                                SELECT 
								A.GOODS_CD, 
	                            ISNULL(PRE_IN_WHS_QTY, 0) PRE_IN_WHS_QTY,
	                            ISNULL(IN_WHS_QTY, 0) IN_WHS_QTY
                                FROM (
	                                SELECT GOODS_CD
	                                FROM TB_GOODS_CODE_ADM A										
									WHERE  A.USE_YN_CD = '001' ) A  LEFT OUTER JOIN 
									( 
                                        SELECT
											GOODS_CD, 																
											SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
											SUM(IN_WHS_QTY) IN_WHS_QTY                                        
                                        FROM (
                                            SELECT 
                                                GOODS_CD,                                                
                                                ISNULL(CASE WHEN  CONVERT(CHAR(8), REG_DATE, 112) < '${packDate}' + '01' THEN SUM(REMAIN_CNT) END,0)  PRE_IN_WHS_QTY,
                                                ISNULL(CASE WHEN  SUBSTRING(CONVERT(CHAR(8), REG_DATE, 112),1,6) = '${packDate}' THEN SUM(REMAIN_CNT) END,0) IN_WHS_QTY
                                             FROM TB_PRE_GOODS_INVENTORY_DTL
                                             WHERE GOODS_STATUS != '001'
                                            	 AND FAULTY_STATUS = '001'
                                                AND SUBSTRING(CONVERT(CHAR(8), REG_DATE, 112),1,6) <= '${packDate}'
                                                GROUP BY GOODS_CD, REG_DATE ) KK
                                        GROUP BY GOODS_CD
                                     ) B
                                ON A.GOODS_CD = B.GOODS_CD
                               ) BB
                           WHERE AA.GOODS_CD = BB.GOODS_CD    
						   ) CC ,
                
                        (
								SELECT A.GOODS_CD, 							
								ISNULL(PRE_OUT_WHS_QTY,0)  PRE_OUT_WHS_QTY,
								ISNULL(OUT_WHS_QTY,0)  OUT_WHS_QTY
								FROM (
	                                SELECT GOODS_CD
	                                FROM TB_GOODS_CODE_ADM A										 
									WHERE A.USE_YN_CD = '001' ) A  LEFT OUTER JOIN 
									(
									  	SELECT 
									  		GOODS_CD,											
											SUM(PRE_OUT_WHS_QTY) PRE_OUT_WHS_QTY,
											SUM(OUT_WHS_QTY) OUT_WHS_QTY
										FROM (
											SELECT 
												B.GOODS_CD, 												
												ISNULL(CASE WHEN B.PO_DATE < '${packDate}' + '01' THEN SUM(OUTPUT_CNT) END,0)  PRE_OUT_WHS_QTY,
												ISNULL(CASE WHEN SUBSTRING(B.PO_DATE, 1,6) = '${packDate}' THEN SUM(OUTPUT_CNT) END,0)  OUT_WHS_QTY
												FROM TB_PURCHASE_ORDER_ADM A, TB_PURCHASE_ORDER_DTL B, TB_GOODS_PRODUCT_INFO_ADM C
												WHERE A.PO_SEQ = B.PO_SEQ
												AND C.DISUSE_YN = 'N'
												AND C.DIVISION_YN != 'D' AND C.DIVISION_YN != 'M'
												AND C.FAULTY_STATUS = '001'
												AND SUBSTRING(B.PO_DATE, 1,6) <= '${packDate}'
												AND B.BOX_NO = C.BOX_NO
												GROUP BY B.GOODS_CD, B.PO_DATE
											UNION ALL
											SELECT 
												B.GOODS_CD, 											
												ISNULL(CASE WHEN B.PO_DATE < '${packDate}' + '01' THEN SUM(OUTPUT_CNT) END,0)  PRE_OUT_WHS_QTY,
												ISNULL(CASE WHEN SUBSTRING(B.PO_DATE, 1,6) = '${packDate}' THEN SUM(OUTPUT_CNT) END,0)  OUT_WHS_QTY
												FROM TB_PURCHASE_ORDER_ADM A, TB_PURCHASE_ORDER_DTL B, TB_PRE_GOODS_INVENTORY_DTL C
												WHERE A.PO_SEQ = B.PO_SEQ
												AND C.FAULTY_STATUS = '001'
												AND SUBSTRING(B.PO_DATE, 1,6) <= '${packDate}'
												AND B.BOX_NO = C.BOX_NO
												GROUP BY B.GOODS_CD, B.PO_DATE	) AA
										GROUP BY GOODS_CD
									) B
								ON A.GOODS_CD = B.GOODS_CD
								) DD,
							TB_GOODS_CODE_ADM D,
							TB_MATRL_CODE_ADM E
                WHERE CC.GOODS_CD = DD.GOODS_CD             
				   AND CC.GOODS_CD = D.GOODS_CD
				   AND D.ALNICU_MATRL_CD = E.MATRL_CD			
				 ORDER BY GOODS_CD
				 ]]>
	
	</select>
	
	<!-- 재고관리 제품(월재고현황) 상세 -->
	<select id="tmByGoodsMonthInventoryDtlList" resultMap="MatrlInOutWhsAdmVo">
		SELECT 
		    AA.GOODS_CD,
		    D.GOODS_NM,		  
		    AA.BOX_NO,
		    AA.PACK_CNT,
		    ISNULL(AA.REMAIN_CNT, PACK_CNT) REMAIN_CNT,
		    AA.LOCATION_CD,
		    ISNULL((SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='004' AND B.BASE_CD = AA.LOCATION_CD), '-') LOCATION_NM,
		    AA.GOODS_IN_DATE,
		    (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='021' AND B.BASE_CD = E.SURFACE_TRTMT_CD) SURFACE_TRTMT_NM
		FROM (
		        SELECT
		            C.GOODS_CD,		        
		            C.BOX_NO,
	               C.PACK_CNT,
				   C.REMAIN_CNT,
		            C.LOCATION_CD,
		            C.GOODS_IN_DATE
		        FROM (
		            SELECT 
		                BOX_NO,
		                GOODS_CD,		             
		                PACK_CNT,
		                REMAIN_CNT,
		                LOCATION_CD,
		                GOODS_IN_DATE
		            FROM TB_GOODS_PRODUCT_INFO_ADM 
		            WHERE 1=1
		            <if test="goodsCd != null and goodsCd != ''">
	            	AND GOODS_CD = '${goodsCd}'
		            </if>
	         	    AND FAULTY_STATUS = '001'
					<![CDATA[
	                AND SUBSTRING(GOODS_IN_DATE,1,6) <= '${packDate}'
	                ]]>
	                AND DIVISION_YN != 'D' AND DIVISION_YN != 'M'
	                AND DISUSE_YN = 'N'
	                AND GOODS_STATUS = '002'
		
		            UNION
		
		            SELECT 
		                BOX_NO,
		                GOODS_CD,		           
		                PACK_CNT,
		                REMAIN_CNT,
		                '' LOCATION_CD,
		                CONVERT(CHAR(8), REG_DATE, 112)  GOODS_IN_DATE
		            FROM TB_PRE_GOODS_INVENTORY_DTL
		            WHERE 1=1
		            <if test="goodsCd != null and goodsCd != ''">
	            	AND GOODS_CD = '${goodsCd}'
	            	</if>
					<![CDATA[
	                AND SUBSTRING(GOODS_IN_DATE, 1, 6) <= '${packDate}'
	                ]]>
	           		AND FAULTY_STATUS = '001'
	                AND GOODS_STATUS = '002' ) C
		                LEFT OUTER JOIN
		            (
				            SELECT
				                A.GOODS_CD,
				                A.BOX_NO,						                
				                SUM(A.OUTPUT_CNT) OUTPUT_CNT,
				                MAX(A.PO_DATE) PO_DATE,
				                '' REMAIN_CNT
				            FROM TB_PURCHASE_ORDER_DTL A, TB_PURCHASE_ORDER_ADM B, TB_GOODS_PRODUCT_INFO_ADM C
				            WHERE A.PO_SEQ = B.PO_SEQ
							<if test="goodsCd != null and goodsCd != ''">
			            	AND A.GOODS_CD = '${goodsCd}'
				            </if>
				            <![CDATA[
				            AND SUBSTRING(A.PO_DATE,1,6) <= '${packDate}'
				            ]]>
				            AND A.BOX_NO = C.BOX_NO
				            AND C.DIVISION_YN != 'D' AND C.DIVISION_YN != 'M'
				            AND C.FAULTY_STATUS = '001'  				          
				            GROUP BY A.GOODS_CD, A.BOX_NO
				            
				            UNION ALL
				            
							SELECT
				                A.GOODS_CD,
				                A.BOX_NO,						             
				                SUM(A.OUTPUT_CNT) OUTPUT_CNT,
				                MAX(A.PO_DATE) PO_DATE,
				                '' REMAIN_CNT
				            FROM TB_PURCHASE_ORDER_DTL A, TB_PURCHASE_ORDER_ADM B, TB_PRE_GOODS_INVENTORY_DTL C
				            WHERE A.PO_SEQ = B.PO_SEQ
							<if test="goodsCd != null and goodsCd != ''">
			            	AND A.GOODS_CD = '${goodsCd}'
				            </if>
				            <![CDATA[
				            AND SUBSTRING(A.PO_DATE,1,6) <= '${packDate}'
				            ]]>
				            AND A.BOX_NO = C.BOX_NO			
				            AND C.FAULTY_STATUS = '001' 			     
				            GROUP BY A.GOODS_CD, A.BOX_NO 
		            	) D
		                ON C.BOX_NO = D.BOX_NO
		                AND C.GOODS_CD = D.GOODS_CD
		                ) AA,
			TB_GOODS_CODE_ADM D,
			TB_MATRL_CODE_ADM E
			WHERE AA.GOODS_CD = D.GOODS_CD
			AND D.ALNICU_MATRL_CD = E.MATRL_CD
			ORDER BY BOX_NO
	</select>
	
	<!-- 재고관리 제품(일재고현황) 체크-->
	<select id="tmByGoodsInventoryListChecked" resultMap="MatrlInOutWhsAdmVo">
		<![CDATA[
				SELECT 
                    CC.GOODS_CD
					,D.GOODS_NM
					,D.DEAL_CORP_CD
					,D.MODEL
					,(SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM B WHERE B.DEAL_CORP_CD = D.DEAL_CORP_CD) DEAL_CORP_NM
					,E.QUTY_CD
					,(SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='007' AND B.BASE_CD = E.QUTY_CD) QUTY_NM
                    ,'' STATUS_CD					
                    ,(CC.PRE_IN_WHS_QTY) PRE_IN_WHS_QTY
                    ,CC.IN_WHS_QTY
                    ,DD.PRE_OUT_WHS_QTY PRE_OUT_QTY
                    ,DD.OUT_WHS_QTY OUT_QTY
					,(CC.PRE_IN_WHS_QTY + CC.IN_WHS_QTY) DIFF_QTY
					,SUM(CC.PRE_IN_WHS_QTY + CC.IN_WHS_QTY) OVER (PARTITION BY  CC.GOODS_CD) GOODS_REMAIN_SUM
                FROM (
                        SELECT
                        AA.GOODS_CD,                
                        (AA.PRE_IN_WHS_QTY+BB.PRE_IN_WHS_QTY)  PRE_IN_WHS_QTY,
                        (AA.IN_WHS_QTY+BB.IN_WHS_QTY)  IN_WHS_QTY
                        FROM (
	                            SELECT A.GOODS_CD, 	         
	                            ISNULL(PRE_IN_WHS_QTY, 0) PRE_IN_WHS_QTY,
	                            ISNULL(IN_WHS_QTY, 0) IN_WHS_QTY
	                            FROM (
	                                SELECT GOODS_CD
	                                FROM TB_GOODS_CODE_ADM A									
									WHERE A.USE_YN_CD = '001' ) A  LEFT OUTER JOIN 
									( 
										SELECT 
											GOODS_CD, 									
											SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
											SUM(IN_WHS_QTY) IN_WHS_QTY
											FROM (
												SELECT 
												GOODS_CD, 											
												ISNULL(CASE WHEN  GOODS_IN_DATE < '${packDate}' THEN SUM(REMAIN_CNT) END,0) PRE_IN_WHS_QTY,
												ISNULL(CASE WHEN  GOODS_IN_DATE = '${packDate}' THEN SUM(REMAIN_CNT) END,0) IN_WHS_QTY
											 FROM TB_GOODS_PRODUCT_INFO_ADM
											 WHERE DISUSE_YN = 'N'
											 	AND DIVISION_YN != 'D' AND DIVISION_YN != 'M'
												AND GOODS_STATUS != '001'
												AND FAULTY_STATUS = '001'
												AND GOODS_IN_DATE <= '${packDate}'
												GROUP BY GOODS_CD, GOODS_IN_DATE) KK
											GROUP BY GOODS_CD	
											
									) B
	                            ON A.GOODS_CD = B.GOODS_CD
								) AA,
                            (
                                SELECT 
								A.GOODS_CD,                             
	                            ISNULL(PRE_IN_WHS_QTY, 0) PRE_IN_WHS_QTY,
	                            ISNULL(IN_WHS_QTY, 0) IN_WHS_QTY
                                FROM (
	                                SELECT GOODS_CD
	                                FROM TB_GOODS_CODE_ADM A										
									WHERE A.USE_YN_CD = '001' ) A  LEFT OUTER JOIN 
									( 
										SELECT 
											GOODS_CD, 																				
											SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
											SUM(IN_WHS_QTY) IN_WHS_QTY										
										FROM (
											SELECT 
												GOODS_CD, 											
												ISNULL(CASE WHEN  CONVERT(CHAR(8), REG_DATE, 112) < '${packDate}' THEN SUM(REMAIN_CNT) END,0) PRE_IN_WHS_QTY,
												ISNULL(CASE WHEN  CONVERT(CHAR(8), REG_DATE, 112) = '${packDate}' THEN SUM(REMAIN_CNT) END,0) IN_WHS_QTY
											 FROM TB_PRE_GOODS_INVENTORY_DTL
											 WHERE GOODS_STATUS != '001'
												AND GOODS_IN_DATE <= '${packDate}'
												AND FAULTY_STATUS = '001'
												GROUP BY GOODS_CD,REG_DATE) KK
										GROUP BY GOODS_CD
									) B
                                ON A.GOODS_CD = B.GOODS_CD
                                ) BB
                           WHERE AA.GOODS_CD = BB.GOODS_CD
                                ) CC ,
                
                        (
								SELECT A.GOODS_CD, 								
								ISNULL(PRE_OUT_WHS_QTY,0)  PRE_OUT_WHS_QTY,
								ISNULL(OUT_WHS_QTY,0)  OUT_WHS_QTY
								FROM (
	                                SELECT GOODS_CD
	                                FROM TB_GOODS_CODE_ADM A										 
									WHERE A.USE_YN_CD = '001' ) A  FULL OUTER JOIN 
									(
									  	SELECT 
									  		GOODS_CD,											
											SUM(PRE_OUT_WHS_QTY) PRE_OUT_WHS_QTY,
											SUM(OUT_WHS_QTY) OUT_WHS_QTY
										FROM (
										
											--일재고현황은 해당일자에 작업한 수량으로 변경
											SELECT
												B.GOODS_CD, 												
												ISNULL(CASE WHEN CONVERT(CHAR(8), B.REG_DATE, 112) < '${packDate}' THEN SUM(OUTPUT_CNT) END,0)  PRE_OUT_WHS_QTY,
												ISNULL(CASE WHEN CONVERT(CHAR(8), B.REG_DATE, 112) = '${packDate}' THEN SUM(OUTPUT_CNT) END,0)  OUT_WHS_QTY
												FROM TB_PURCHASE_ORDER_ADM A, TB_PURCHASE_ORDER_DTL B, TB_GOODS_PRODUCT_INFO_ADM C
												WHERE A.PO_SEQ = B.PO_SEQ
												AND C.DISUSE_YN = 'N'
												AND C.DIVISION_YN != 'D' AND C.DIVISION_YN != 'M'
												--AND B.PO_DATE <= '${packDate}'
												AND CONVERT(CHAR(8), B.REG_DATE, 112) <= '${packDate}'
												AND B.BOX_NO = C.BOX_NO
												AND C.FAULTY_STATUS = '001'
												GROUP BY B.GOODS_CD, CONVERT(CHAR(8), B.REG_DATE, 112) --B.PO_DATE
				
											UNION ALL
				
											SELECT
												B.GOODS_CD,												
												ISNULL(CASE WHEN CONVERT(CHAR(8), B.REG_DATE, 112) < '${packDate}' THEN SUM(OUTPUT_CNT) END,0)  PRE_OUT_WHS_QTY,
												ISNULL(CASE WHEN CONVERT(CHAR(8), B.REG_DATE, 112) = '${packDate}' THEN SUM(OUTPUT_CNT) END,0)  OUT_WHS_QTY
												FROM TB_PURCHASE_ORDER_ADM A, TB_PURCHASE_ORDER_DTL B, TB_PRE_GOODS_INVENTORY_DTL C
												WHERE A.PO_SEQ = B.PO_SEQ
												--AND B.PO_DATE <= '${packDate}'
												AND CONVERT(CHAR(8), B.REG_DATE, 112) <= ${packDate}
												AND B.BOX_NO = C.BOX_NO
												AND C.FAULTY_STATUS = '001'
												GROUP BY B.GOODS_CD, CONVERT(CHAR(8), B.REG_DATE, 112) --B.PO_DATE
												) AA
										GROUP BY GOODS_CD
									) B
								ON A.GOODS_CD = B.GOODS_CD
								) DD,
							TB_GOODS_CODE_ADM D,
							TB_MATRL_CODE_ADM E
                WHERE CC.GOODS_CD = DD.GOODS_CD                  
				   AND CC.GOODS_CD = D.GOODS_CD
				   AND D.ALNICU_MATRL_CD = E.MATRL_CD				 
				ORDER BY GOODS_CD
		]]>

	</select>					
	
	<!-- 재고관리 제품(일재고현황) 상세 체크-->
	<select id="tmByGoodsInventoryDtlListChecked" resultMap="MatrlInOutWhsAdmVo">
		SELECT
		    AA.GOODS_CD,
		    D.GOODS_NM,
		    AA.BOX_NO,
		    AA.PACK_CNT,
		    ISNULL(AA.REMAIN_CNT, PACK_CNT) REMAIN_CNT,
		    ISNULL((SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='004' AND B.BASE_CD = AA.LOCATION_CD), '-') LOCATION_NM,
		    AA.GOODS_IN_DATE,
		    (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE B.BASE_GROUP_CD='021' AND B.BASE_CD = E.SURFACE_TRTMT_CD) SURFACE_TRTMT_NM
		FROM (
		        SELECT
		            C.GOODS_CD,		           
		            C.BOX_NO,
		            (C.PACK_CNT-ISNULL(D.OUTPUT_CNT, 0)) PACK_CNT,
		            C.REMAIN_CNT,
		            C.LOCATION_CD,
		            C.GOODS_IN_DATE
		        FROM (
		            SELECT 
		                BOX_NO,
		                GOODS_CD,
		                PACK_CNT,
		                LOCATION_CD,
		                GOODS_IN_DATE,
		                REMAIN_CNT
		            FROM TB_GOODS_PRODUCT_INFO_ADM 
		            WHERE 1=1
						<if test="goodsCd != null and goodsCd != ''">
						AND GOODS_CD = '${goodsCd}'
						</if>
		            	<![CDATA[
		                AND GOODS_IN_DATE <= '${packDate}'
		                ]]>
		                AND DISUSE_YN = 'N'
		                AND DIVISION_YN != 'D' AND DIVISION_YN != 'M'
		                AND FAULTY_STATUS = '001'
		                AND GOODS_STATUS = '002'
		
		            UNION
		
		            SELECT 
		                BOX_NO,
		                GOODS_CD,		              
		                PACK_CNT,
		                '' LOCATION_CD,
		                GOODS_IN_DATE,
		                REMAIN_CNT
		            FROM TB_PRE_GOODS_INVENTORY_DTL
		            WHERE 1=1
		            	<if test="goodsCd != null and goodsCd != ''">
						AND GOODS_CD = '${goodsCd}'
						</if>
     					<![CDATA[
						AND GOODS_IN_DATE <= '${packDate}'
						]]>
						AND FAULTY_STATUS = '001'
		                AND GOODS_STATUS = '002' ) C
		                LEFT OUTER JOIN 
		            (
							SELECT
								A.GOODS_CD,
								A.BOX_NO,
								SUM(A.OUTPUT_CNT) OUTPUT_CNT,
								MAX(A.PO_DATE) PO_DATE,
								'' REMAIN_CNT
							FROM TB_PURCHASE_ORDER_DTL A, TB_PURCHASE_ORDER_ADM B, TB_GOODS_PRODUCT_INFO_ADM C
							WHERE A.PO_SEQ = B.PO_SEQ
							<if test="goodsCd != null and goodsCd != ''">
							AND A.GOODS_CD = '${goodsCd}'
							</if>
							<![CDATA[
							AND A.PO_DATE <= '${packDate}'
							]]>
							AND C.FAULTY_STATUS = '001'
							AND C.DIVISION_YN != 'D' AND C.DIVISION_YN != 'M'
							AND A.BOX_NO = C.BOX_NO						      
							GROUP BY A.GOODS_CD, A.BOX_NO
				            
				            UNION ALL
				            
				            SELECT
								A.GOODS_CD,
								A.BOX_NO,						              
								SUM(A.OUTPUT_CNT) OUTPUT_CNT,
								MAX(A.PO_DATE) PO_DATE,
								'' REMAIN_CNT
							FROM TB_PURCHASE_ORDER_DTL A, TB_PURCHASE_ORDER_ADM B, TB_PRE_GOODS_INVENTORY_DTL C
							WHERE A.PO_SEQ = B.PO_SEQ
							<if test="goodsCd != null and goodsCd != ''">
							AND A.GOODS_CD = '${goodsCd}'
							</if>
							<![CDATA[
							AND A.PO_DATE <= '${packDate}'
							]]>
							AND C.FAULTY_STATUS = '001'
							AND A.BOX_NO = C.BOX_NO						          
							GROUP BY A.GOODS_CD, A.BOX_NO
					) D
						ON C.BOX_NO = D.BOX_NO
						AND C.GOODS_CD = D.GOODS_CD
					) AA,
			TB_GOODS_CODE_ADM D,
			TB_MATRL_CODE_ADM E
			WHERE AA.GOODS_CD = D.GOODS_CD
			AND D.ALNICU_MATRL_CD = E.MATRL_CD
			ORDER BY GOODS_NM, BOX_NO
	</select>
</mapper>


