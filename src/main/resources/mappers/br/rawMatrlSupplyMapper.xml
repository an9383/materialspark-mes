<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  	
<mapper namespace="mes.mappers.br.rawMatrlSupplyMapper">
	
	<resultMap id="RawMatrlSupplyVo" type="mes.domain.br.RawMatrlSupplyVo">
	
		<result property="menuAuth"       column="MENU_AUTH"		 />
		<result property="matrlCd"        column="MATRL_CD" 		 />
		<result property="matrlNm"        column="MATRL_NM" 		 />
		<result property="qutyCd"         column="QUTY_CD" 		     />
		<result property="qutyNm"         column="QUTY_NM" 		     />
		<result property="planDate"       column="PLAN_DATE" 	     />
		<result property="gubunCd"	      column="GUBUN_CD" 	     />
		<result property="insertTypeCd"   column="INSERT_TYPE_CD"    />
		<result property="insertTypeNm"   column="INSERT_TYPE_NM"    />
		<result property="countSum"       column="COUNT_SUM" 	     />
		<result property="cnt"      	  column="CNT"			     />		
		<result property="regId"          column="REG_ID" 		     />
		<result property="regDate"        column="REG_DATE" 		 />
		<result property="updId"          column="UPD_ID" 		     />
		<result property="updDate"        column="UPD_DATE" 		 />
		
		<result property="gyul"           column="GYUL" 		     />
		<result property="ibgo"           column="IBGO" 		     />
		<result property="bigo"           column="BIGO" 		     />
		<result property="number"         column="NUMBER" 		     />
		<result property="inWhsQty"       column="IN_WHS_QTY" 	     />
		<result property="preInWhsQty"    column="PRE_IN_WHS_QTY"    />
		<result property="diffQty"        column="DIFF_QTY" 	     />
		<result property="poQty"          column="PO_QTY"            />
		<result property="countSum2"      column="COUNT_SUM2"        />
		<result property="inspaetWaitQty" column="INSPAET_WAIT_QTY"  />
		<result property="gubunja"    	  column="GUBUNJA"       	 />
		<result property="gubunja2" 	  column="GUBUNJA2" 		 />
		<result property="sumQty"    	  column="SUM_QTY"       	 />
		<result property="remainQty" 	  column="REMAIN_QTY" 		 />
		<result property="rollRemain"     column="ROLL_REMAIN"     	 />
		<result property="rollSum" 	 	  column="ROLL_SUM" 		 />
		<result property="sumRemain" 	  column="SUM_REMAIN" 		 />
				
		<result property="sumQtyTotal"    		 column="SUM_QTY_TOTAL"  		 />
		<result property="remainQtyTotal"    	 column="REMAIN_QTY_TOTAL"       />
		<result property="price"    			 column="PRICE" 				 />
		<result property="preInWhsQtyTotal"      column="PRE_IN_WHS_QTY_TOTAL"   />
		<result property="preOutWhsQty"   		 column="PRE_OUT_WHS_QTY" 		 />
		<result property="preOutWhsQtyTotal"     column="PRE_OUT_WHS_QTY_TOTAL"  />
		<result property="resultQty"     		 column="RESULT_QTY" 		 	 />
		<result property="resultQtyTotal"        column="RESULT_QTY_TOTAL" 		 />
		<result property="thickness"      		 column="THICKNESS" 			 />
		
		<result property="faultyQty"     		 column="FAULTY_QTY" 		 	 />
		<result property="paidGubun"     		 column="PAID_GUBUN" 		 	 />
		
		<result property="totalQty"     		 column="TOTAL_QTY" 		 	 />
		<result property="goodsCd"				 column="GOODS_CD" 		 	 />
		<result property="goodsNm"				 column="GOODS_NM" 		 	 />
		<result property="stockDate"			 column="STOCK_DATE"			 />
		<result property="gubun"			 column="GUBUN"			 />
		<result property="gubunNm"			 column="GUBUN_NM"			 />
		
		<result property="count1"                column="COUNT1"			 />
		<result property="count2"                column="COUNT2"			 />
		<result property="count3"                column="COUNT3"			 />
		<result property="count4"                column="COUNT4"			 />
		<result property="count5"                column="COUNT5"			 />
		<result property="count6"                column="COUNT6"			 />
		<result property="count7"                column="COUNT7"			 />
		<result property="count8"                column="COUNT8"			 />
		<result property="count9"                column="COUNT9"			 />
		<result property="count10"               column="COUNT10"			 />
		<result property="count11"               column="COUNT11"			 />
		<result property="count12"               column="COUNT12"			 />

		

		
	</resultMap>

	<!-- 선택 제조조건 조회 -->
	<select id="listAll" resultType="HashMap" parameterType="mes.domain.br.RawMatrlSupplyVo">
		<![CDATA[
			SELECT
				*
			FROM ( SELECT
					B.MATRL_CD
					, B.MATRL_NM
					, A.PLAN_DATE
					, A.GUBUN_CD
					, B.QUTY_CD
					, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE C WHERE C.BASE_GROUP_CD='007' AND C.BASE_CD = B.QUTY_CD) QUTY_NM
					, ISNULL(A.CNT,0) CNT
					, ISNULL(A.REMAIN_QTY,(SELECT ISNULL( MAX(SUM_QTY),0) SUM_QTY
											FROM TB_RAW_MATRL_SUPPLY X
											WHERE MATRL_CD = B.MATRL_CD 
											AND GUBUN_CD = '001'
											AND LEFT(PLAN_DATE,6) = (select CONVERT(VARCHAR(6), DATEADD(M, -1, #{planDate} + '01'), 112)))) REMAIN_QTY
					, ISNULL(A.SUM_QTY,0) SUM_QTY
					, ISNULL(A.ROLL_REMAIN,(SELECT  ISNULL(MAX(ROLL_SUM),0) ROLL_SUM
											FROM TB_RAW_MATRL_SUPPLY X
											WHERE MATRL_CD = B.MATRL_CD 											
											AND LEFT(PLAN_DATE,6) = (select CONVERT(VARCHAR(6), DATEADD(M, -1, #{planDate} + '01'), 112)))) ROLL_REMAIN
					, ISNULL(A.ROLL_SUM,0) ROLL_SUM
					FROM TB_RAW_MATRL_SUPPLY A RIGHT OUTER JOIN TB_MATRL_CODE_ADM B ON A.MATRL_CD = B.MATRL_CD AND LEFT(PLAN_DATE,6) = #{planDate}
					WHERE 1=1
					AND B.QUTY_CD = #{qutyCd}
					AND B.USE_YN_CD = '001'
				) AS RESULT
			PIVOT  (SUM(CNT) FOR PLAN_DATE IN (${planDateList})) AS PIVOT_RESULT
			ORDER BY MATRL_CD, GUBUN_CD
		]]>
	</select>
	
	<!-- 구매량 조회 -->
	<select id="listAll2" resultType="HashMap">
		<![CDATA[	
					SELECT 
						* 
					FROM(
						SELECT
							 B.MATRL_CD
							,B.MATRL_NM
							,PLAN_DATE
							,CNT				 
				 			
						FROM  TB_MATRL_CODE_ADM B LEFT OUTER JOIN TB_RAW_MATRL_BUY A
						ON A.MATRL_CD = B.MATRL_CD
						WHERE 1=1	
						AND B.USE_YN_CD = '001'
		]]>
						<if test="qutyCd != null and qutyCd != ''"> 
							AND B.QUTY_CD = #{qutyCd}
						</if>	
		<![CDATA[						
					) AS AA
					PIVOT(SUM(CNT) FOR PLAN_DATE IN (${planDateList})) AS RESULT
		
		]]>
	</select>
	
	<!-- 구매량 상세 조회 -->
	<select id="read" resultMap="RawMatrlSupplyVo">
		<![CDATA[
	
			SELECT
				   B.MATRL_CD
				  ,B.MATRL_NM
			      ,PLAN_DATE
			      ,CNT				 
 			
			 FROM  TB_MATRL_CODE_ADM B LEFT OUTER JOIN TB_RAW_MATRL_BUY A
			 ON A.MATRL_CD = B.MATRL_CD
			  WHERE 1=1			
			 AND (LEFT(B.MATRL_CD,1) ='A' or LEFT(B.MATRL_CD,1) ='N')
			 AND A.MATRL_CD = #{matrlCd}
			 ANd A.PLAN_DATE = #{planDate}
		
		]]>
	</select>

	<!--  생성 -->
	<insert id="create">
		INSERT INTO TB_RAW_MATRL_SUPPLY (
			MATRL_CD
           , PLAN_DATE
           , GUBUN_CD	           
           , CNT
           , REMAIN_QTY
           , SUM_QTY
           , ROLL_REMAIN
           , ROLL_SUM
           , REG_ID
           , REG_DATE
		) VALUES (
			#{matrlCd}
			, #{planDate}
			, #{gubunCd}							
			, #{cnt}
			, #{remainQty}
			, #{sumQty}
			, #{rollRemain}
			, #{rollSum}
			, #{regId}
			, getDate()				
		)
	</insert>

	<!-- 수정 -->
	<update id="update">
		<![CDATA[
			UPDATE	TB_RAW_MATRL_SUPPLY		 
			SET
				CNT = #{cnt}				
				, UPD_ID = #{updId}
				, UPD_DATE = getDate()
			
			WHERE
				MATRL_CD = #{matrlCd}
			AND
				PLAN_DATE = #{planDate}
		
		]]>
	</update>
	
	<!-- 삭제 -->
	<delete id="delete">
		<![CDATA[
			DELETE FROM TB_RAW_MATRL_SUPPLY 
			WHERE LEFT(PLAN_DATE,6) = #{planDate}
			AND MATRL_CD = #{matrlCd}
			AND GUBUN_CD = #{gubunCd}
		]]>
	</delete>
	
	<!-- 구매량 생성 -->
	<insert id="create2">
		
			INSERT INTO TB_RAW_MATRL_BUY (
				MATRL_CD
	           ,PLAN_DATE	          
	           ,CNT
	           ,REG_ID
	           ,REG_DATE
				) 
			VALUES(
			 
				#{matrlCd}
				, #{planDate}				
				, #{cnt}
				, #{regId}
				, getDate()				
			 
			)
		 
	</insert>

	<!-- 구매량 수정 -->
	<update id="update2">
		<![CDATA[
			UPDATE	TB_RAW_MATRL_BUY
			SET
				CNT = #{cnt}				
				, UPD_ID = #{updId}
				, UPD_DATE = getDate()
			
			WHERE
				MATRL_CD = #{matrlCd}
			AND
				PLAN_DATE = #{planDate}			
		]]>
	</update>
	
	<!-- 구매량 삭제 -->
	<delete id="delete2">
		<![CDATA[
		DELETE FROM TB_RAW_MATRL_BUY
				WHERE LEFT(PLAN_DATE,4) = #{planDate}
				AND MATRL_CD = #{matrlCd}
				
	
		]]>
	</delete>
	
	<!-- 수율 조회 -->
	<select id="listAllYield" resultType="HashMap">
		<![CDATA[	
					SELECT 
						* 
					FROM(
						SELECT
							 B.MATRL_CD
							,B.MATRL_NM
							,PLAN_DATE
							,CNT				 
				 			
						FROM  TB_MATRL_CODE_ADM B LEFT OUTER JOIN TB_RAW_MATRL_YIELD A
						ON A.MATRL_CD = B.MATRL_CD
						WHERE 1=1	
						AND B.USE_YN_CD = '001'
		]]>
						<if test="qutyCd != null and qutyCd != ''"> 
							AND B.QUTY_CD = #{qutyCd}
						</if>	
		<![CDATA[						
					) AS AA
					PIVOT(SUM(CNT) FOR PLAN_DATE IN (${planDateList})) AS RESULT
		
		]]>
	</select>
	
	<!-- 수율 상세 조회 -->
	<select id="readYield" resultMap="RawMatrlSupplyVo">
		<![CDATA[
	
			SELECT
				   B.MATRL_CD
				  ,B.MATRL_NM
			      ,PLAN_DATE
			      ,CNT				 
 			
			 FROM  TB_MATRL_CODE_ADM B LEFT OUTER JOIN TB_RAW_MATRL_YIELD A
			 ON A.MATRL_CD = B.MATRL_CD
			  WHERE 1=1			
			 AND (LEFT(B.MATRL_CD,1) ='A' or LEFT(B.MATRL_CD,1) ='N')
			 AND A.MATRL_CD = #{matrlCd}
			 ANd A.PLAN_DATE = #{planDate}
		
		]]>
	</select>
	
	
	<!--  수율 생성 -->
	<insert id="createYield">
		
			INSERT INTO TB_RAW_MATRL_YIELD (
				MATRL_CD
	           ,PLAN_DATE	          
	           ,CNT
	           ,REG_ID
	           ,REG_DATE
				) 
			VALUES(
			 
				#{matrlCd}
				, #{planDate}				
				, #{cnt}
				, #{regId}
				, getDate()				
			 
			)
		 
	</insert>

	<!-- 수율 수정 -->
	<update id="updateYield">
		<![CDATA[
			UPDATE	TB_RAW_MATRL_YIELD
			SET
				CNT = #{cnt}				
				, UPD_ID = #{updId}
				, UPD_DATE = getDate()
			
			WHERE
				MATRL_CD = #{matrlCd}
			AND
				PLAN_DATE = #{planDate}			
		]]>
	</update>
	
	<!-- 수율 삭제 -->
	<delete id="deleteYield">
		<![CDATA[
		DELETE FROM TB_RAW_MATRL_YIELD
				WHERE LEFT(PLAN_DATE,4) = #{planDate}
				AND MATRL_CD = #{matrlCd}	
		]]>
	</delete>
	
	<!-- 첫번째 탭 조회 -->
	<select id="listTab1"  resultMap="RawMatrlSupplyVo">
							
			
	
			
 	<!-- 	SET ANSI_WARNINGS OFF
		SET ARITHIGNORE ON
		SET ARITHABORT OFF								
				
		SELECT 
			X.MATRL_CD
			,X.MATRL_NM
			,X.CNT
			,X.PRE_IN_WHS_QTY
			,ISNULL(Y.PRE_IN_WHS_QTY, 0) AS 'FAULTY_QTY'
			,X.DIFF_QTY
			,X.IBGO
				,(Y.PRE_IN_WHS_QTY / (X.PRE_IN_WHS_QTY + Y.PRE_IN_WHS_QTY) ) * 100 GYUL
			,X.BIGO
			,'1' NUMBER
		FROM						
			(SELECT
				A.MATRL_CD			
				,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
				, CNT
				,PRE_IN_WHS_QTY
				,PRE_IN_WHS_QTY - CNT DIFF_QTY
				,PRE_IN_WHS_QTY / CNT * 100  IBGO				 
				,'' BIGO			 			
			FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
			WHERE PLAN_DATE >= #{startDate}
				AND PLAN_DATE <= #{endDate}
				GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A ,  
				(SELECT MATRL_CD
				,SUM(CONVERT(FLOAT,X.PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
				,LEFT(X.PRE_IN_WHS_DATE,6) PRE_IN_WHS_DATE  
				FROM TB_IN_OUT_WHS_ADM X 
				WHERE PRE_IN_WHS_DATE >= #{startDate}
					AND PRE_IN_WHS_DATE <= #{endDate}
				AND (APPROVAL_CD = '001' OR APPROVAL_CD = '002')
				GROUP BY X.MATRL_CD,LEFT(X.PRE_IN_WHS_DATE,6)) C				
			WHERE 1=1														
			AND A.MATRL_CD = C.MATRL_CD	
			AND LEFT(A.PLAN_DATE,6) = LEFT(C.PRE_IN_WHS_DATE,6)	) X LEFT OUTER JOIN

		(	SELECT
			A.MATRL_CD				     		     	
			,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
			,'' CNT
			,PRE_IN_WHS_QTY
			,PRE_IN_WHS_QTY - 0 DIFF_QTY
			,''  IBGO				 
			,'결함자재' BIGO
			 			
			FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
			WHERE  PLAN_DATE >= #{startDate}
					AND PLAN_DATE <= #{endDate}
				GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A ,  
				(SELECT MATRL_CD
				,SUM(CONVERT(FLOAT,X.PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
				,LEFT(X.PRE_IN_WHS_DATE,6) PRE_IN_WHS_DATE  
				FROM TB_IN_OUT_WHS_ADM X 
				WHERE PRE_IN_WHS_DATE >= #{startDate}
				AND PRE_IN_WHS_DATE <= #{endDate}
				AND APPROVAL_CD != '001' 
				AND APPROVAL_CD != '002'
				GROUP BY X.MATRL_CD,LEFT(X.PRE_IN_WHS_DATE,6)) C				
			WHERE 1=1														
			AND A.MATRL_CD = C.MATRL_CD	
			AND LEFT(A.PLAN_DATE,6) = LEFT(C.PRE_IN_WHS_DATE,6)	
			) Y
		ON X.MATRL_CD = Y.MATRL_CD

		UNION ALL

		SELECT 
				CASE WHEN LEFT(X.MATRL_CD,1) = 'A' THEN 'AL 합계' ELSE 'NICU 합계' END AS MATRL_CD
				, CASE WHEN LEFT(X.MATRL_CD,1) = 'A' THEN 'AL 합계' ELSE 'NICU 합계' END AS MATRL_NM
				,SUM(X.CNT) CNT
				,SUM(X.PRE_IN_WHS_QTY) PRE_IN_WHS_QTY
				,SUM(ISNULL(Y.PRE_IN_WHS_QTY, 0)) AS 'FAULTY_QTY'
				,SUM(X.DIFF_QTY) DIFF_QTY
				,SUM(ISNULL(X.PRE_IN_WHS_QTY, 0)) / SUM(X.CNT) * 100  IBGO	
				,(SUM(Y.PRE_IN_WHS_QTY) / SUM((X.PRE_IN_WHS_QTY + Y.PRE_IN_WHS_QTY)) ) * 100 GYUL
				,'' BIGO
				,'2' NUMBER
		FROM						
			(SELECT
				A.MATRL_CD			
				,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
				, CNT
				,PRE_IN_WHS_QTY
				,PRE_IN_WHS_QTY - CNT DIFF_QTY
				,PRE_IN_WHS_QTY / CNT * 100  IBGO				 
				,'' BIGO			 			
				FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
				WHERE PLAN_DATE >= #{startDate}
					AND PLAN_DATE <= #{endDate}
					GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A ,  
					(SELECT MATRL_CD
					,SUM(CONVERT(FLOAT,X.PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
					,LEFT(X.PRE_IN_WHS_DATE,6) PRE_IN_WHS_DATE  
					FROM TB_IN_OUT_WHS_ADM X 
					WHERE PRE_IN_WHS_DATE >= #{startDate}
					AND PRE_IN_WHS_DATE <= #{endDate}
					AND (APPROVAL_CD = '001' OR APPROVAL_CD = '002')
					GROUP BY X.MATRL_CD,LEFT(X.PRE_IN_WHS_DATE,6)) C				
				WHERE 1=1														
				AND A.MATRL_CD = C.MATRL_CD	
				AND LEFT(A.PLAN_DATE,6) = LEFT(C.PRE_IN_WHS_DATE,6)	) X LEFT OUTER JOIN

			(	SELECT
				A.MATRL_CD				     		     	
				,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
				,'' CNT
				,PRE_IN_WHS_QTY
				,PRE_IN_WHS_QTY - 0 DIFF_QTY
				,''  IBGO				 
				,'결함자재' BIGO
			 			
				FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
				WHERE PLAN_DATE >= #{startDate}
					AND PLAN_DATE <= #{endDate}
					GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A ,  
					(SELECT MATRL_CD
					,SUM(CONVERT(FLOAT,X.PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
					,LEFT(X.PRE_IN_WHS_DATE,6) PRE_IN_WHS_DATE  
					FROM TB_IN_OUT_WHS_ADM X 
					WHERE PRE_IN_WHS_DATE >= #{startDate}
					AND PRE_IN_WHS_DATE <= #{endDate}
					AND APPROVAL_CD != '001' 
					AND APPROVAL_CD != '002'
					GROUP BY X.MATRL_CD,LEFT(X.PRE_IN_WHS_DATE,6)) C				
				WHERE 1=1														
				AND A.MATRL_CD = C.MATRL_CD	
				AND LEFT(A.PLAN_DATE,6) = LEFT(C.PRE_IN_WHS_DATE,6)	
				) Y
				ON X.MATRL_CD = Y.MATRL_CD
			GROUP BY LEFT(X.MATRL_CD,1)

		ORDER BY MATRL_CD, NUMBER -->
		
		 <![CDATA[
		
		
			SET ANSI_WARNINGS OFF
		SET ARITHIGNORE ON
		SET ARITHABORT OFF								
				
		SELECT 
			X.MATRL_CD
			,X.MATRL_NM
			,X.CNT
			,X.PRE_IN_WHS_QTY
			,ISNULL(Y.PRE_IN_WHS_QTY, 0) AS 'FAULTY_QTY'
			,X.DIFF_QTY
			,X.IBGO
				,(Y.PRE_IN_WHS_QTY / (X.PRE_IN_WHS_QTY + Y.PRE_IN_WHS_QTY) ) * 100 GYUL
			,X.BIGO
			,'1' NUMBER
		FROM						
			(SELECT
				A.MATRL_CD			
				,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
				, CNT
				,PRE_IN_WHS_QTY
				,PRE_IN_WHS_QTY - CNT DIFF_QTY
				,PRE_IN_WHS_QTY / CNT * 100  IBGO				 
				,'' BIGO			 			
			FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
			WHERE PLAN_DATE >= #{startDate}
				AND PLAN_DATE <= #{endDate}
				AND GUBUN_CD = '001'
				GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A ,  
				(SELECT MATRL_CD
				,SUM(CONVERT(FLOAT,X.PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
				,LEFT(X.PRE_IN_WHS_DATE,6) PRE_IN_WHS_DATE  
				FROM TB_IN_OUT_WHS_ADM X 
				WHERE PRE_IN_WHS_DATE >= #{startDate}
					AND PRE_IN_WHS_DATE <= #{endDate}
				AND APPROVAL_CD != '006'
				GROUP BY X.MATRL_CD,LEFT(X.PRE_IN_WHS_DATE,6)) C,
				TB_MATRL_CODE_ADM X
			WHERE 1=1														
			AND A.MATRL_CD = C.MATRL_CD	
			AND X.MATRL_CD = A.MATRL_CD 
			AND X.DEFECT_CD = '001'
			AND X.MATRL_CD = A.MATRL_CD 
			AND (LEFT(X.MATRL_CD,1) = 'A' OR LEFT(X.MATRL_CD,1) = 'N')
			AND LEFT(A.PLAN_DATE,6) = LEFT(C.PRE_IN_WHS_DATE,6)	) X LEFT OUTER JOIN

		(	SELECT
			A.MATRL_CD				     		     	
			,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
			,'' CNT
			,PRE_IN_WHS_QTY
			,PRE_IN_WHS_QTY - 0 DIFF_QTY
			,''  IBGO				 
			,'결함자재' BIGO
			 			
			FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
			WHERE  PLAN_DATE >= #{startDate}
					AND PLAN_DATE <= #{endDate}
					AND GUBUN_CD = '001'
				GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A ,  
				(SELECT MATRL_CD
				,SUM(CONVERT(FLOAT,X.PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
				,LEFT(X.PRE_IN_WHS_DATE,6) PRE_IN_WHS_DATE  
				FROM TB_IN_OUT_WHS_ADM X 
				WHERE PRE_IN_WHS_DATE >= #{startDate}
				AND PRE_IN_WHS_DATE <= #{endDate}		
				AND APPROVAL_CD = '006'				
				GROUP BY X.MATRL_CD,LEFT(X.PRE_IN_WHS_DATE,6)) C,
				TB_MATRL_CODE_ADM X				
			WHERE 1=1														
			AND A.MATRL_CD = C.MATRL_CD	
			AND X.MATRL_CD = A.MATRL_CD 
			AND X.DEFECT_CD = '001'
			AND (LEFT(X.MATRL_CD,1) = 'A' OR LEFT(X.MATRL_CD,1) = 'N')
			AND LEFT(A.PLAN_DATE,6) = LEFT(C.PRE_IN_WHS_DATE,6)	
			) Y
		ON X.MATRL_CD = Y.MATRL_CD

		UNION ALL

		SELECT 
				CASE WHEN LEFT(X.MATRL_CD,1) = 'A' THEN 'AL 합계' 
					WHEN LEFT(X.MATRL_CD,1) = 'N' THEN 'NICU 합계' 			
					END AS MATRL_CD
				, CASE WHEN LEFT(X.MATRL_CD,1) = 'A' THEN 'AL 합계' 
					WHEN LEFT(X.MATRL_CD,1) = 'N' THEN 'NICU 합계' 								
					END AS MATRL_NM
				,SUM(X.CNT) CNT
				,SUM(X.PRE_IN_WHS_QTY) PRE_IN_WHS_QTY
				,SUM(ISNULL(Y.PRE_IN_WHS_QTY, 0)) AS 'FAULTY_QTY'
				,SUM(X.DIFF_QTY) DIFF_QTY
				,SUM(ISNULL(X.PRE_IN_WHS_QTY, 0)) / SUM(X.CNT) * 100  IBGO	
				,(SUM(Y.PRE_IN_WHS_QTY) / SUM((X.PRE_IN_WHS_QTY + Y.PRE_IN_WHS_QTY)) ) * 100 GYUL
				,'' BIGO
				,'2' NUMBER
		FROM						
			(SELECT
				A.MATRL_CD			
				,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
				, CNT
				,PRE_IN_WHS_QTY
				,PRE_IN_WHS_QTY - CNT DIFF_QTY
				,PRE_IN_WHS_QTY / CNT * 100  IBGO				 
				,'' BIGO			 			
				FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
				WHERE PLAN_DATE >= #{startDate}
					AND PLAN_DATE <= #{endDate}
					AND GUBUN_CD = '001'
					GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A ,  
					(SELECT MATRL_CD
					,SUM(CONVERT(FLOAT,X.PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
					,LEFT(X.PRE_IN_WHS_DATE,6) PRE_IN_WHS_DATE  
					FROM TB_IN_OUT_WHS_ADM X 
					WHERE PRE_IN_WHS_DATE >= #{startDate}
					AND PRE_IN_WHS_DATE <= #{endDate}
					AND APPROVAL_CD != '006'
					GROUP BY X.MATRL_CD,LEFT(X.PRE_IN_WHS_DATE,6)) C,
				TB_MATRL_CODE_ADM X					
				WHERE 1=1														
				AND A.MATRL_CD = C.MATRL_CD	
				AND X.MATRL_CD = A.MATRL_CD 
				AND X.DEFECT_CD = '001'
				AND (LEFT(X.MATRL_CD,1) = 'A' OR LEFT(X.MATRL_CD,1) = 'N')
				AND LEFT(A.PLAN_DATE,6) = LEFT(C.PRE_IN_WHS_DATE,6)	) X LEFT OUTER JOIN

			(	SELECT
				A.MATRL_CD				     		     	
				,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
				,'' CNT
				,PRE_IN_WHS_QTY
				,PRE_IN_WHS_QTY - 0 DIFF_QTY
				,''  IBGO				 
				,'결함자재' BIGO
			 			
				FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
				WHERE PLAN_DATE >= #{startDate}
					AND PLAN_DATE <= #{endDate}
					AND GUBUN_CD = '001'
					GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A ,  
					(SELECT MATRL_CD
					,SUM(CONVERT(FLOAT,X.PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
					,LEFT(X.PRE_IN_WHS_DATE,6) PRE_IN_WHS_DATE  
					FROM TB_IN_OUT_WHS_ADM X 
					WHERE PRE_IN_WHS_DATE >= #{startDate}
					AND PRE_IN_WHS_DATE <= #{endDate}			
					AND APPROVAL_CD = '006'				
					GROUP BY X.MATRL_CD,LEFT(X.PRE_IN_WHS_DATE,6)) C,
					TB_MATRL_CODE_ADM X					
				WHERE 1=1														
				AND A.MATRL_CD = C.MATRL_CD	
				AND X.MATRL_CD = A.MATRL_CD 
				AND X.DEFECT_CD = '001'
				AND (LEFT(X.MATRL_CD,1) = 'A' OR LEFT(X.MATRL_CD,1) = 'N')
				AND LEFT(A.PLAN_DATE,6) = LEFT(C.PRE_IN_WHS_DATE,6)	
				) Y
				ON X.MATRL_CD = Y.MATRL_CD
			WHERE (LEFT(X.MATRL_CD,1) = 'A' OR LEFT(X.MATRL_CD,1) = 'N')
			GROUP BY LEFT(X.MATRL_CD,1)
		

		ORDER BY MATRL_CD, NUMBER
		]]>
	</select>
	
	<select id="listTab2" resultMap="RawMatrlSupplyVo">
	
		
			<!-- SET ANSI_WARNINGS OFF
			SET ARITHIGNORE ON
			SET ARITHABORT OFF
			
			select TT.ALNICU_MATRL_CD MATRL_CD
				,MATRL_NM
				,SUM(C.cnt) COUNT_SUM
     			,SUM(C.cnt) * 3.7498 / 0.8465 / 1000 COUNT_SUM2
				,PO_QTY
				,C.PLAN_DATE 
				,Y.CNT
				,E.SUM_REMAIN
				FROM 
				
				  ( SELECT * FROM(
				  SELECT  F.equip_cd,     
				       A.alnicu_matrl_cd,	
					   B.MATRL_NM,
				       ROW_NUMBER() OVER (PARTITION BY F.equip_cd,
				       F.equip_nm	   
				  ORDER BY E.cond_reg_date DESC) AS RankNo
				FROM   tb_goods_code_adm A,
				       tb_matrl_code_adm B,
				       tb_matrl_code_adm C,
				       tb_equip_cond_common_adm E,
				       tb_equip_code_adm F
				WHERE  A.goods_cd = E.goods_cd
				       AND A.alnicu_matrl_cd = B.matrl_cd
				       AND A.film_matrl_cd = C.matrl_cd
				       AND E.equip_cd = F.equip_cd
				       AND A.use_yn_cd = '001'
				
					   GROUP BY  F.equip_cd
				       ,A.alnicu_matrl_cd
					   ,B.MATRL_NM
					   ,  F.equip_nm	
					   , E.cond_reg_date
					   ) T
					   WHERE RankNo = 1 ) TT
					   
			   , (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X WHERE LEFT(X.PLAN_DATE,6)= #{planDate}
						GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) B
						LEFT OUTER JOIN TB_RAW_MATRL_BUY Y
				ON B.MATRL_CD = Y.MATRL_CD AND Y.PLAN_DATE = LEFT(B.PLAN_DATE,6),
				
			    ( SELECT EQUIP_CD, LEFT(PLAN_DATE,6) PLAN_DATE, SUM(CNT) CNT
					 FROM TB_PRODUCTION_PLAN_NEW A
					 WHERE COUNT_TYPE_CD = '001'
					 GROUP BY EQUIP_CD,LEFT(PLAN_DATE,6)
				)  C,
				
				(SELECT B.ALNICU_MATRL_CD	
				      ,LEFT(A.[PO_DATE],6) [PO_DATE]
				      ,SUM([PO_QTY]) [PO_QTY]  
				
				  FROM [TB_PURCHASE_ORDER_ADM] A
				  , [TB_GOODS_CODE_ADM] B				 
				  WHERE A.GOODS_CD = B.GOODS_CD 
				  GROUP BY ALNICU_MATRL_CD,LEFT(A.[PO_DATE],6)) D,
				  
				(SELECT 
					'9'GUBUNJA
					,'MP재고량'GUBUNJA2
				  ,AA.MATRL_CD					
				 ,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0) - ISNULL(BB.[31], 0) + ISNULL(AA.[31] ,0),0) + DD.SUM_QTY AS SUM_REMAIN

			   FROM 	(
			   
			   SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
			   
			   select * from  (SELECT * FROM(
						SELECT
								'3' GUBUNJA
								,'롤수(가입고량)' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_IN_WHS_QTY) PRE_IN_WHS_QTY
							   ,A.MATRL_CD
							  ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_IN_WHS_DATE
						 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X WHERE LEFT(X.PLAN_DATE,6)=#{planDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD
						  WHERE 1=1							
							AND A.MATRL_CD = C.MATRL_CD
							AND LEFT(A.PLAN_DATE,6)  = #{planDate}
							AND LEFT(C.PRE_IN_WHS_DATE,6) = #{planDate}
							AND (C.APPROVAL_CD = '001' OR C.APPROVAL_CD = '002' )
					
							
					) AS RESULT
					PIVOT  (SUM( PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
			 ) AA,
			   
			 	
				(		 	
				 SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
				
				
				select * from  (SELECT * FROM(
						SELECT
								'6' GUBUNJA
								,'MP 생산 불출량' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_OUT_QTY) PRE_OUT_QTY
							   ,A.MATRL_CD
							 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_OUT_WHS_DATE	
								 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X WHERE LEFT(X.PLAN_DATE,6)=#{planDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD
						  WHERE 1=1						
							AND A.MATRL_CD = C.MATRL_CD
							AND LEFT(A.PLAN_DATE,6)  = #{planDate}
							AND LEFT(C.PRE_OUT_WHS_DATE,6) = #{planDate}
							AND (C.APPROVAL_CD = '001' OR C.APPROVAL_CD = '002' )
						
							
					) AS RESULT
					PIVOT  (SUM( PRE_OUT_QTY)  FOR PRE_OUT_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B) BB,


									   (SELECT MATRL_CD,REMAIN_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X WHERE LEFT(X.PLAN_DATE,6)=#{planDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),REMAIN_QTY) CC,

							(SELECT MATRL_CD,SUM_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X WHERE LEFT(X.PLAN_DATE,6)=#{planDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),SUM_QTY) DD

				WHERE AA.MATRL_CD = BB.MATRL_CD
				AND AA.MATRL_CD = CC.MATRL_CD
				AND AA.MATRL_CD = DD.MATRL_CD
			) E
					
				WHERE TT.ALNICU_MATRL_CD = B.MATRL_CD
				AND TT.EQUIP_CD = C.EQUIP_CD
				AND LEFT(B.PLAN_DATE,6) = C.PLAN_DATE				
				AND LEFT(D.PO_DATE,6) = C.PLAN_DATE
				AND LEFT(D.PO_DATE,6) = C.PLAN_DATE
				AND C.PLAN_DATE =#{planDate}
				AND D.ALNICU_MATRL_CD = TT.ALNICU_MATRL_CD
				AND E.MATRL_CD = B.MATRL_CD
				
				GROUP BY TT.ALNICU_MATRL_CD,MATRL_NM,PO_QTY,C.PLAN_DATE,Y.CNT,E.SUM_REMAIN -->
						
		<!-- 	SET ANSI_WARNINGS OFF
			SET ARITHIGNORE ON
			SET ARITHABORT OFF
			
			select TT.ALNICU_MATRL_CD MATRL_CD
				,MATRL_NM
				,SUM(C.cnt) COUNT_SUM
     			,CONVERT(FLOAT,(SUM(C.cnt) * 3.7498 / 0.8465 / 1000)) COUNT_SUM2
				,PO_QTY
				,Y.CNT
				,E.SUM_REMAIN
				FROM 
				
				  ( SELECT * FROM(
				  SELECT  F.equip_cd,     
				       A.alnicu_matrl_cd,	
					   B.MATRL_NM,
				       ROW_NUMBER() OVER (PARTITION BY F.equip_cd,
				       F.equip_nm	   
				  ORDER BY E.cond_reg_date DESC) AS RankNo
				FROM   tb_goods_code_adm A,
				       tb_matrl_code_adm B,
				       tb_matrl_code_adm C,
				       tb_equip_cond_common_adm E,
				       tb_equip_code_adm F
				WHERE  A.goods_cd = E.goods_cd
				       AND A.alnicu_matrl_cd = B.matrl_cd
				       AND A.film_matrl_cd = C.matrl_cd
				       AND E.equip_cd = F.equip_cd
				       AND A.use_yn_cd = '001'
					   AND b.USE_YN_CD = '001'
					   AND C.USE_YN_CD = '001'
					   AND F.ETC1 = ''
				
					   GROUP BY  F.equip_cd
				       ,A.alnicu_matrl_cd
					   ,B.MATRL_NM
					   ,  F.equip_nm	
					   , E.cond_reg_date
					   ) T
					   WHERE RankNo = 1 ) TT
				LEFT OUTER JOIN	   

			    (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
					WHERE PLAN_DATE >=#{startDate}
						AND PLAN_DATE <=#{endDate}
						GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)
				) B
				ON B.MATRL_CD = TT.ALNICU_MATRL_CD				

				LEFT OUTER JOIN TB_RAW_MATRL_BUY Y
				ON B.MATRL_CD = Y.MATRL_CD 
				AND Y.PLAN_DATE = LEFT(B.PLAN_DATE,6)		
				
				LEFT OUTER JOIN 
			    ( SELECT EQUIP_CD, LEFT(PLAN_DATE,6) PLAN_DATE, SUM(CNT) CNT
					 FROM TB_PRODUCTION_PLAN_NEW A
					 WHERE COUNT_TYPE_CD = '001'
					 AND PLAN_DATE >=#{startDate}
						AND PLAN_DATE <=#{endDate}
					 GROUP BY EQUIP_CD,LEFT(PLAN_DATE,6)
				)  C
				ON TT.EQUIP_CD = C.EQUIP_CD
				AND LEFT(B.PLAN_DATE,6) = C.PLAN_DATE

				LEFT OUTER JOIN
				(SELECT B.ALNICU_MATRL_CD	
				      ,LEFT(A.[DELIVERY_DATE],6) PO_DATE
				      ,SUM([PO_QTY]) PO_QTY 
				
				  FROM [TB_PURCHASE_ORDER_ADM] A
				  , [TB_GOODS_CODE_ADM] B				 
				  WHERE A.GOODS_CD = B.GOODS_CD 
				  GROUP BY ALNICU_MATRL_CD,LEFT(A.[DELIVERY_DATE],6)) D
				  ON  LEFT(D.PO_DATE,6) = C.PLAN_DATE
				  
				  AND D.ALNICU_MATRL_CD = TT.ALNICU_MATRL_CD
				  LEFT OUTER JOIN
				(SELECT 
					'9'GUBUNJA
					,'MP재고량'GUBUNJA2
				  ,AA.MATRL_CD					
				 ,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0) - ISNULL(BB.[31], 0) + ISNULL(AA.[31] ,0),0) + DD.SUM_QTY AS SUM_REMAIN

			   FROM 	(
			   
			   SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
			   
			   select * from  (SELECT * FROM(
						SELECT
								'3' GUBUNJA
								,'롤수(가입고량)' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_IN_WHS_QTY) PRE_IN_WHS_QTY
							   ,A.MATRL_CD
							  ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_IN_WHS_DATE
						 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X
						 WHERE PLAN_DATE >=#{startDate}
						AND PLAN_DATE <=#{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD						 						
						AND LEFT(PRE_IN_WHS_DATE,6) = LEFT(PLAN_DATE,6)		
						AND (C.APPROVAL_CD = '001' OR C.APPROVAL_CD = '002' )
					
							
					) AS RESULT
					PIVOT  (SUM( PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
			 ) AA			  ,
			 	
				(		 	
				 SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
				
				
				select * from  (SELECT * FROM(
						SELECT
								'6' GUBUNJA
								,'MP 생산 불출량' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_OUT_QTY) PRE_OUT_QTY
							   ,A.MATRL_CD
							 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_OUT_WHS_DATE	
								 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								 WHERE PLAN_DATE >=#{startDate}
						AND PLAN_DATE <=#{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD											
							AND A.MATRL_CD = C.MATRL_CD
							AND LEFT(PRE_OUT_WHS_DATE,6) = LEFT(PLAN_DATE,6)										
							AND (C.APPROVAL_CD = '001' OR C.APPROVAL_CD = '002' )
						
							
					) AS RESULT
					PIVOT  (SUM( PRE_OUT_QTY)  FOR PRE_OUT_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
					) BB,
					
							(SELECT MATRL_CD,REMAIN_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
							WHERE PLAN_DATE >=#{startDate}
						AND PLAN_DATE <=#{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),REMAIN_QTY) CC
							,
							(SELECT MATRL_CD,SUM_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
							WHERE PLAN_DATE >=#{startDate}
						AND PLAN_DATE <=#{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),SUM_QTY) DD

				WHERE AA.MATRL_CD = BB.MATRL_CD
				AND AA.MATRL_CD = CC.MATRL_CD
				AND AA.MATRL_CD = DD.MATRL_CD
			) E ON  E.MATRL_CD = B.MATRL_CD
				

				

				GROUP BY TT.ALNICU_MATRL_CD,MATRL_NM,PO_QTY,Y.CNT,E.SUM_REMAIN -->
			
<!-- 			SET ANSI_WARNINGS OFF
			SET ARITHIGNORE ON
			SET ARITHABORT OFF
			
			SELECT TT.ALNICU_MATRL_CD MATRL_CD
				,MATRL_NM
				,SUM(C.cnt) COUNT_SUM			
     			,CASE 
				WHEN LEFT(TT.ALNICU_MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,(SUM(C.cnt) * replace(TT.THICKNESS,'m','') * replace(TT.DEPTH,'m','') * replace(TT.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(TT.ALNICU_MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,(SUM(C.cnt) * replace(TT.THICKNESS,'m','') * replace(TT.DEPTH,'m','') * replace(TT.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0))) 
				ELSE 0
				END COUNT_SUM2
				,PO_QTY
				,Y.CNT
				,ISNULL(B.REMAIN_QTY,0) + ISNULL(Y.CNT,0) - CASE 
				WHEN LEFT(TT.ALNICU_MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,(SUM(C.cnt) * replace(TT.THICKNESS,'m','') * replace(TT.DEPTH,'m','') * replace(TT.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(TT.ALNICU_MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,(SUM(C.cnt) * replace(TT.THICKNESS,'m','') * replace(TT.DEPTH,'m','') * replace(TT.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0))) 
				ELSE 0
				END SUM_REMAIN
				FROM 
				( SELECT * FROM(
				  SELECT  F.equip_cd,     
				       A.alnicu_matrl_cd,	
					   B.MATRL_NM,
				       ROW_NUMBER() OVER (PARTITION BY F.equip_cd,
				       F.equip_nm
				  ORDER BY E.cond_reg_date DESC) AS RankNo,
				    B.thickness
					 ,B.DEPTH
					   ,B.PITCH
				FROM   tb_goods_code_adm A,
				       tb_matrl_code_adm B,
				       tb_matrl_code_adm C,
				       tb_equip_cond_common_adm E,
				       tb_equip_code_adm F
				WHERE  A.goods_cd = E.goods_cd
				       AND A.alnicu_matrl_cd = B.matrl_cd
				       AND A.film_matrl_cd = C.matrl_cd
				       AND E.equip_cd = F.equip_cd
				       AND A.use_yn_cd = '001'
					   AND b.USE_YN_CD = '001'
					   AND C.USE_YN_CD = '001'
					   AND F.ETC1 = ''
				
					   GROUP BY  F.equip_cd
				       ,A.alnicu_matrl_cd
					   ,B.MATRL_NM
					   ,  F.equip_nm	
					   , E.cond_reg_date
					   ,B.THICKNESS
					   ,B.DEPTH
					   ,B.PITCH
					   ) T
					   WHERE RankNo = 1 ) TT
				LEFT OUTER JOIN	   
				(SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE, REMAIN_QTY   FROM TB_RAW_MATRL_SUPPLY X 
					WHERE PLAN_DATE >= #{startDate}
						AND PLAN_DATE <= #{endDate}
						GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),REMAIN_QTY
				) B
				ON B.MATRL_CD = TT.ALNICU_MATRL_CD				

				LEFT OUTER JOIN TB_RAW_MATRL_BUY Y
				ON B.MATRL_CD = Y.MATRL_CD 
				AND Y.PLAN_DATE = LEFT(B.PLAN_DATE,6)		
				
				LEFT OUTER JOIN 
			    ( SELECT EQUIP_CD, LEFT(PLAN_DATE,6) PLAN_DATE, SUM(CNT) CNT
					 FROM TB_PRODUCTION_PLAN_NEW A
					 WHERE COUNT_TYPE_CD = '001'
					 AND PLAN_DATE >= #{startDate}
						AND PLAN_DATE <= #{endDate}
					 GROUP BY EQUIP_CD,LEFT(PLAN_DATE,6)
				)  C
				ON TT.EQUIP_CD = C.EQUIP_CD
				AND LEFT(B.PLAN_DATE,6) = C.PLAN_DATE

				LEFT OUTER JOIN
				(SELECT B.ALNICU_MATRL_CD	
				      ,LEFT(A.[DELIVERY_DATE],6) PO_DATE
				      ,SUM([PO_QTY]) PO_QTY 
				
				  FROM [TB_PURCHASE_ORDER_ADM] A
				  , [TB_GOODS_CODE_ADM] B				 
				  WHERE A.GOODS_CD = B.GOODS_CD 
				  GROUP BY ALNICU_MATRL_CD,LEFT(A.[DELIVERY_DATE],6)) D
				  ON  LEFT(D.PO_DATE,6) = C.PLAN_DATE
				  
				  AND D.ALNICU_MATRL_CD = TT.ALNICU_MATRL_CD
				 LEFT OUTER JOIN TB_RAW_MATRL_YIELD F
				ON B.MATRL_CD = F.MATRL_CD 
				AND F.PLAN_DATE = LEFT(B.PLAN_DATE,6)
				GROUP BY TT.ALNICU_MATRL_CD,MATRL_NM,PO_QTY,Y.CNT,B.REMAIN_QTY,F.CNT,TT.THICKNESS , TT.DEPTH , TT.PITCH 
				
				-->
				
				
		<![CDATA[
			SET ANSI_WARNINGS OFF
			SET ARITHIGNORE ON
			SET ARITHABORT OFF;

			WITH MAIN AS (
			
				SELECT E.GOODS_CD
				,E.GOODS_NM
				,B.MATRL_CD
				,B.MATRL_NM
				,ISNULL(A.PLAN_CNT,0) COUNT_SUM
				,ISNULL(F.OUTPUT_QTY,0) PO_QTY
				,ISNULL(D.CNT,0) COUNT_SUM2
				,ISNULL((CASE 
				WHEN LEFT(B.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((A.PLAN_CNT) * replace(B.THICKNESS,'m','') * replace(B.DEPTH,'m','') * replace(ISNULL(E.GOODS_PITCH,0),'m','') / 1000000 * 2.7 * (G.CNT/100) ) )
				WHEN LEFT(B.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((A.PLAN_CNT) * replace(B.THICKNESS,'m','') * replace(B.DEPTH,'m','') * replace(ISNULL(E.GOODS_PITCH,0),'m','') / 1000000 * 8.96 * (G.CNT/100) ) )
				ELSE 0 
				END),0) CNT
				,ISNULL(D.CNT,0) + ISNULL(H.REMAIN_QTY,0) - ISNULL((CASE 
				WHEN LEFT(B.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((A.PLAN_CNT) * replace(B.THICKNESS,'m','') * replace(B.DEPTH,'m','') * replace(ISNULL(E.GOODS_PITCH,0),'m','') / 1000000 * 2.7 * (G.CNT/100) ) )
				WHEN LEFT(B.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((A.PLAN_CNT) * replace(B.THICKNESS,'m','') * replace(B.DEPTH,'m','') * replace(ISNULL(E.GOODS_PITCH,0),'m','') / 1000000 * 8.96 * (G.CNT/100) ) )
				ELSE 0 
				END),0) SUM_REMAIN
				, ISNULL(H.REMAIN_QTY,0) REMAIN_QTY
				,DAY(EOMONTH(#{planDate}+'01')) STOCK_DATE
				FROM 
				
				
				TB_GOODS_CODE_ADM E
				LEFT OUTER JOIN
				(
				SELECT GOODS_CD,SUM(PLAN_CNT) PLAN_CNT 
				FROM TB_MONTH_PRODUCTION_PLAN_DTL 
				WHERE LEFT(FP_DATE,6) = #{planDate}
				AND CPL_GUBUN = '002'
				GROUP BY GOODS_CD
				) A
				ON 1=1
				AND A.GOODS_CD = E.GOODS_CD
				
				LEFT OUTER JOIN
				TB_MATRL_CODE_ADM B
				ON 1=1
				AND E.ALNICU_MATRL_CD = B.MATRL_CD
				
				LEFT OUTER JOIN
				TB_RAW_MATRL_YIELD C
				ON 1=1
				AND C.MATRL_CD = B.MATRL_CD
				AND C.PLAN_DATE = #{planDate}
				
				LEFT OUTER JOIN
				(
				SELECT MATRL_CD,SUM(CNT) CNT FROM TB_RAW_MATRL_SUPPLY WHERE LEFT(PLAN_DATE,6) = #{planDate} AND GUBUN_CD = '001'
				GROUP BY MATRL_CD
				) D
				ON 1=1
				AND D.MATRL_CD = B.MATRL_CD 
				
				LEFT OUTER JOIN
				(
				SELECT GOODS_CD,SUM(OUTPUT_QTY) OUTPUT_QTY FROM TB_PURCHASE_ORDER_ADM F
				WHERE LEFT(F.DEAD_LINE,6) = #{planDate}
				GROUP BY GOODS_CD
				) F
				ON 1=1
				AND F.GOODS_CD = A.GOODS_CD
				
				LEFT OUTER JOIN
				TB_RAW_MATRL_YIELD G
				ON 1=1
				AND B.MATRL_CD = G.MATRL_CD
				AND G.PLAN_DATE = #{planDate}
				
				LEFT OUTER JOIN
				(
				SELECT MATRL_CD,REMAIN_QTY FROM TB_RAW_MATRL_SUPPLY WHERE LEFT(PLAN_DATE,6) = #{planDate} AND GUBUN_CD = '001'
				GROUP BY MATRL_CD,REMAIN_QTY
				) H
				ON 1=1
				AND H.MATRL_CD = B.MATRL_CD
				
				WHERE 1=1
				AND B.USE_YN_CD = '001'
				AND E.USE_YN_CD = '001'
				AND E.GOODS_CD = A.GOODS_CD
			) 
			
			SELECT  GOODS_CD				
				, GOODS_NM
				,MATRL_CD
				, MATRL_NM
				,SUM(COUNT_SUM) COUNT_SUM
				,SUM(PO_QTY) PO_QTY
				,SUM(CNT) CNT
				,COUNT_SUM2
				, (SELECT (COUNT_SUM2 + REMAIN_QTY - SUM(CNT)) SUM_REMAIN
					FROM MAIN
					WHERE MATRL_CD = X.MATRL_CD
					GROUP BY
					MATRL_CD,MATRL_NM,COUNT_SUM2,REMAIN_QTY,STOCK_DATE) SUM_REMAIN
				,(SELECT (COUNT_SUM2 + REMAIN_QTY - SUM(CNT)) / (SUM(CNT)/STOCK_DATE)
					FROM MAIN
					WHERE MATRL_CD = X.MATRL_CD
					GROUP BY
					MATRL_CD,MATRL_NM,COUNT_SUM2,REMAIN_QTY,STOCK_DATE) STOCK_DATE
			
			FROM MAIN X
			
			GROUP BY GOODS_CD,GOODS_NM,MATRL_CD,MATRL_NM,COUNT_SUM2,REMAIN_QTY,STOCK_DATE
			
			UNION ALL
			
			SELECT 
				'' GOODS_CD
				,(CASE 
				WHEN LEFT(MATRL_CD,1) = 'A' THEN 'AL 합계'
				WHEN LEFT(MATRL_CD,1) = 'N' THEN 'NICU 합계'
				ELSE '' 
				END) GOODS_NM
				,LEFT(MATRL_CD,1) + '99999'
				,'' MATRL_NM
				,SUM(COUNT_SUM) COUNT_SUM
				,SUM(PO_QTY) PO_QTY
				,0 CNT
				,null COUNT_SUM2
				,null SUM_REMAIN
				,null STOCK_DATE
			FROM MAIN 
			
			GROUP BY LEFT(MATRL_CD,1)
			
			ORDER BY MATRL_CD
		
		]]>
		
	</select>
	
	<select id="selectMatrlCd" resultMap="RawMatrlSupplyVo">
		
<!-- 			SELECT D.MATRL_CD FROM

				  ( SELECT * FROM(
				  SELECT F.equip_cd,
				       F.equip_nm,
					   E.cond_reg_date,      
				       A.goods_cd,
				       A.goods_nm,
				       A.alnicu_matrl_cd,
					   B.MATRL_NM,
				       ROW_NUMBER() OVER (PARTITION BY F.equip_cd,
				       F.equip_nm	   
				  ORDER BY E.cond_reg_date DESC) AS RankNo
				FROM   tb_goods_code_adm A,
				       tb_matrl_code_adm B,
				       tb_matrl_code_adm C,
				       tb_equip_cond_common_adm E,
				       tb_equip_code_adm F
				WHERE  A.goods_cd = E.goods_cd
				       AND A.alnicu_matrl_cd = B.matrl_cd
				       AND A.film_matrl_cd = C.matrl_cd
				       AND E.equip_cd = F.equip_cd
				       AND A.use_yn_cd = '001'
				
					   ) T
					   WHERE RankNo = 1 ) A,
				
				 (
				 SELECT EQUIP_CD, LEFT(PLAN_DATE,6) PLAN_DATE, SUM(CNT) CNT
				 FROM TB_PRODUCTION_PLAN_NEW A
				 WHERE LEFT(PLAN_DATE,6) = #{planDate} AND COUNT_TYPE_CD = '001'
				 GROUP BY EQUIP_CD,LEFT(PLAN_DATE,6)
				 ) B, 
				 (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X WHERE LEFT(X.PLAN_DATE,6)=#{planDate} 
								GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6) ) C,
				
							(SELECT
								   A.MATRL_CD
								 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM			     
								 ,LEFT(PRE_IN_WHS_DATE,6) PRE_IN_WHS_DATE
									 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X WHERE LEFT(X.PLAN_DATE,6)=#{planDate}
								GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
							 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
							  ON A.MATRL_CD = C.MATRL_CD
							  WHERE 1=1						
								AND A.MATRL_CD = C.MATRL_CD
								AND LEFT(A.PLAN_DATE,6)  = #{planDate}
								AND LEFT(C.PRE_IN_WHS_DATE,6) = #{planDate}
								AND (C.APPROVAL_CD = '001' OR C.APPROVAL_CD = '002' )			
								GROUP BY A.MATRL_CD,LEFT(PRE_IN_WHS_DATE,6)
								) D
				WHERE A.EQUIP_CD = B.EQUIP_CD
				AND A.ALNICU_MATRL_CD = C.MATRL_CD
				AND A.ALNICU_MATRL_CD = D.MATRL_CD
			
				GROUP BY D.MATRL_CD -->

			SELECT
				X.MATRL_CD
				, SUM(X.CNT) CNT
				, LEFT(X.PLAN_DATE,6) PLAN_DATE
			FROM TB_RAW_MATRL_SUPPLY X, TB_MATRL_CODE_ADM A
			WHERE X.MATRL_CD = A.MATRL_CD
			AND A.USE_YN_CD = '001'
			AND A.MATRL_CD IN (${matrlCd})
			AND LEFT(X.PLAN_DATE, 6) = #{planDate}
			GROUP BY X.MATRL_CD, LEFT(X.PLAN_DATE, 6)
	</select>
	
	<select id="listTab3" resultType="HashMap" parameterType="mes.domain.br.RawMatrlSupplyVo">
	<!-- 			SELECT 
				'8'GUBUNJA
				,'MP 사용일수'GUBUNJA2
				  ,AA.MATRL_CD
				  ,BB.MATRL_NM				 
				   ,0 SUM_REMAIN
				 ,0 SUM_QTY
				 ,0 TOTAL_QTY
				,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '01'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) ,0) / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '02'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '03'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '04'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '05'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '06'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '07'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '08'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '09'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '10'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '11'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '12'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '13'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '14'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '15'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '16'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '17'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '18'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '19'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '20'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '21'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '22'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '23'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '24'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '25'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '26'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '27'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '28'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '29'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '30'

,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0) - ISNULL(BB.[31], 0) + ISNULL(AA.[31] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '31'
			   FROM 	(
			   
			   SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
			   
			   select * from  (SELECT * FROM(
						SELECT
								'3' GUBUNJA
								,'롤수(가입고량)' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_IN_WHS_QTY) PRE_IN_WHS_QTY
							   ,A.MATRL_CD
							  ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_IN_WHS_DATE
						 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
						 WHERE PLAN_DATE >= #{startDate}
							AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD
						  	AND LEFT(PRE_IN_WHS_DATE,6) = LEFT(PLAN_DATE,6)														
							AND (C.APPROVAL_CD = '001' OR C.APPROVAL_CD = '002' )
							 and A.MATRL_CD in (${codeList})	
							
					) AS RESULT
					PIVOT  (SUM( PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
			 ) AA,
			   
			 	
				(		 	
				 SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
				
				
				select * from  (SELECT * FROM(
						SELECT
								'6' GUBUNJA
								,'MP 생산 불출량' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_OUT_QTY) PRE_OUT_QTY
							   ,A.MATRL_CD
							 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_OUT_WHS_DATE	
								 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD
						  AND LEFT(PRE_OUT_WHS_DATE,6) = LEFT(PLAN_DATE,6)		
							AND (C.APPROVAL_CD = '001' OR C.APPROVAL_CD = '002' )
						  WHERE 1=1						
							
							 and A.MATRL_CD in (${codeList})	
							
					) AS RESULT
					PIVOT  (SUM( PRE_OUT_QTY)  FOR PRE_OUT_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B) BB,


									   (SELECT MATRL_CD,REMAIN_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
									   WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),REMAIN_QTY) CC,

							 (SELECT MATRL_CD,SUM_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
							 WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),SUM_QTY) DD


				WHERE AA.MATRL_CD = BB.MATRL_CD
				AND AA.MATRL_CD = CC.MATRL_CD
				AND AA.MATRL_CD = DD.MATRL_CD -->
		<![CDATA[	
			SET ANSI_WARNINGS OFF
			SET ARITHIGNORE ON 
			SET ARITHABORT OFF
			
			SELECT * FROM  (SELECT * FROM(
						SELECT			
							'1' GUBUNJA
							,'입고계획' GUBUNJA2
							,A.MATRL_CD
							,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
							,0.0 SUM_REMAIN
							,0.0 SUM_QTY
							,0.0 REMAIN_QTY
							,0.0 TOTAL_QTY
							,0.0 FAULTY_QTY
							,0.0 RESULT_QTY
							,A.PLAN_DATE				
							,CNT				  
						FROM TB_RAW_MATRL_SUPPLY A 
						  WHERE 1=1	
						  ANd PLAN_DATE >= #{startDate}
						  ANd PLAN_DATE <= #{endDate}
						  AND A.MATRL_CD in (${codeList})
						  AND GUBUN_CD = '001'
					) AS RESULT
					PIVOT  (SUM(CNT) FOR PLAN_DATE IN (${planDateList})) AS PIVOT_RESULT) B
			
					UNION ALL
			

						select * from  (SELECT * FROM(
						SELECT
							 '2' GUBUNJA
							 ,'가입고량' GUBUNJA2
							,ISNULL(CONVERT(FLOAT,C.PRE_IN_WHS_QTY),0) PRE_IN_WHS_QTY
						      ,A.MATRL_CD
							 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
							 ,0 SUM_REMAIN
							 ,0 SUM_QTY
							 ,0 REMAIN_QTY
							 ,0 TOTAL_QTY
							 ,ISNULL(EE.PRE_IN_WHS_QTY,0) FAULTY_QTY
							 ,0.0 RESULT_QTY
						     ,C.PRE_IN_WHS_DATE	
								 
						FROM (
								SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  
								FROM TB_RAW_MATRL_SUPPLY X 
							 	WHERE  PLAN_DATE >= #{startDate}
							    AND PLAN_DATE <= #{endDate}
								GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6) 
						) A 
						LEFT OUTER JOIN
						(
					
						 
							SELECT A.MATRL_CD, ISNULL(SUM(CAST(B.PRE_IN_WHS_QTY AS FLOAT)),0)  PRE_IN_WHS_QTY, PRE_IN_WHS_DATE
							FROM TB_MATRL_CODE_ADM A  LEFT OUTER JOIN TB_IN_OUT_WHS_ADM B
							ON A.MATRL_CD = B.MATRL_CD
							AND A.USE_YN_CD = '001'
							AND B.APPROVAL_CD != '006'
							AND LEFT(B.PRE_IN_WHS_DATE,6) = LEFT(#{startDate},6)
							GROUP BY A.MATRL_CD,PRE_IN_WHS_DATE 
							
						
						)C
						ON 1=1
						AND A.MATRL_CD = C.MATRL_CD
						,		
						(SELECT
								'92' GUBUNJA
								,'불량(실반품)' GUBUNJA2
								,SUM(CONVERT(FLOAT,C.PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
							   ,A.MATRL_CD
							 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
							 ,0 SUM_REMAIN
							 ,0.0 SUM_QTY
							 ,0 REMAIN_QTY
							 ,0 TOTAL_QTY					
								 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								 WHERE  PLAN_DATE >= #{startDate}
						    AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						 ON A.MATRL_CD = C.MATRL_CD
							AND LEFT(PRE_IN_WHS_DATE,6) = LEFT(PLAN_DATE,6)	
							AND C.APPROVAL_CD = '006'
							GROUP BY A.MATRL_CD
						) EE
	
						WHERE A.MATRL_CD = EE.MATRL_CD

					) AS RESULT
					PIVOT  (SUM( PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
					WHERE MATRL_CD in (${codeList})

					UNION ALL

					SELECT * FROM  (SELECT * FROM(
						SELECT
								'3' GUBUNJA
								,'롤수(가입고량)' GUBUNJA2
								,ISNULL(CONVERT(FLOAT,C.PRE_IN_WHS_QTY),0) PRE_IN_WHS_QTY
							   ,A.MATRL_CD
							  ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
							  ,0 SUM_REMAIN
							  ,0 SUM_QTY
							  ,0 REMAIN_QTY
						      ,0 TOTAL_QTY
						      ,ISNULL(EE.PRE_IN_WHS_QTY,0) FAULTY_QTY
						      ,0.0 RESULT_QTY
						      ,C.PRE_IN_WHS_DATE
						 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
						 WHERE PLAN_DATE >= #{startDate}
						    AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
									
						LEFT OUTER JOIN
						
						 (
						SELECT A.MATRL_CD, ISNULL(COUNT(CAST(B.PRE_IN_WHS_QTY AS FLOAT)),0)  PRE_IN_WHS_QTY, PRE_IN_WHS_DATE
						FROM TB_MATRL_CODE_ADM A  LEFT OUTER JOIN TB_IN_OUT_WHS_ADM B
						ON A.MATRL_CD = B.MATRL_CD
						AND A.USE_YN_CD = '001'
						AND B.APPROVAL_CD != '006'
						AND LEFT(B.PRE_IN_WHS_DATE,6) = LEFT(#{startDate},6)
						GROUP BY A.MATRL_CD,PRE_IN_WHS_DATE
						
						
						)C
						ON 1=1
						AND A.MATRL_CD = C.MATRL_CD
						,		
						(SELECT
								'92' GUBUNJA
								,'불량(실반품)' GUBUNJA2
								,COUNT(CONVERT(FLOAT,C.PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
							   ,A.MATRL_CD
							 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
							 ,0 SUM_REMAIN
							 ,0.0 SUM_QTY
							 ,0 REMAIN_QTY
							 ,0 TOTAL_QTY					
								 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								 WHERE  PLAN_DATE >= #{startDate}
						    AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						 ON A.MATRL_CD = C.MATRL_CD
							AND LEFT(PRE_IN_WHS_DATE,6) = LEFT(PLAN_DATE,6)	
							AND C.APPROVAL_CD = '006'
							GROUP BY A.MATRL_CD
						) EE
	
						WHERE A.MATRL_CD = EE.MATRL_CD
						
							
					) AS RESULT
					PIVOT  (SUM(PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
					WHERE MATRL_CD in (${codeList})

			UNION ALL
			
			SELECT * FROM 
				(SELECT * FROM (
					SELECT
						'4' GUBUNJA
						,'입고량(불량)' GUBUNJA2
						,CONVERT(FLOAT,C.PRE_IN_WHS_QTY) PRE_IN_WHS_QTY
						,A.MATRL_CD
						,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						,0 SUM_REMAIN
						,0 SUM_QTY
						,0 REMAIN_QTY
						,0 TOTAL_QTY
						,0.0 FAULTY_QTY
						,0.0 RESULT_QTY
						,C.PRE_IN_WHS_DATE
						 			
					FROM (SELECT A.MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  
						FROM TB_MATRL_CODE_ADM A LEFT OUTER JOIN TB_RAW_MATRL_SUPPLY X ON A.MATRL_CD = X.MATRL_CD 
						WHERE PLAN_DATE >= #{startDate}
						    AND PLAN_DATE <= #{endDate}
						AND A.MATRL_CD IN (${codeList}) 
						GROUP BY A.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
					LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
					ON A.MATRL_CD = C.MATRL_CD
					AND LEFT(PRE_IN_WHS_DATE,6) = LEFT(PLAN_DATE,6)	
					AND C.APPROVAL_CD != '001'
					AND C.APPROVAL_CD != '002'
					AND C.APPROVAL_CD != '009'
					AND C.APPROVAL_CD != '006'
					AND (C.FAULTY_BY_PRODUCTION_TEAM = 'N' OR C.FAULTY_BY_PRODUCTION_TEAM IS NULL)
					AND C.MATRL_CD IN (${codeList})
			) AS RESULT
			PIVOT  (SUM(PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
		
					
					
			
			UNION ALL
			
			
			SELECT * FROM 
				(SELECT * FROM (
					SELECT
						'5' GUBUNJA
						,'롤수(불량)' GUBUNJA2
						,CONVERT(FLOAT,C.PRE_IN_WHS_QTY) PRE_IN_WHS_QTY
						,A.MATRL_CD
						,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						,0 SUM_REMAIN
						,0 SUM_QTY
						,0 REMAIN_QTY
						,0 TOTAL_QTY
						,0.0 FAULTY_QTY
						,0.0 RESULT_QTY
						,C.PRE_IN_WHS_DATE
					FROM (SELECT A.MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  
						FROM TB_MATRL_CODE_ADM A LEFT OUTER JOIN TB_RAW_MATRL_SUPPLY X ON A.MATRL_CD = X.MATRL_CD 
						WHERE PLAN_DATE >= #{startDate}
						AND PLAN_DATE <= #{endDate}
						AND A.MATRL_CD IN (${codeList})
						GROUP BY A.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
					LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
					ON A.MATRL_CD = C.MATRL_CD
					AND LEFT(PRE_IN_WHS_DATE,6) = LEFT(PLAN_DATE,6)	
					AND C.APPROVAL_CD != '001'
					AND C.APPROVAL_CD != '002'
					AND C.APPROVAL_CD != '009'
					AND C.APPROVAL_CD != '006'
					AND (C.FAULTY_BY_PRODUCTION_TEAM = 'N' OR C.FAULTY_BY_PRODUCTION_TEAM IS NULL)
					AND C.MATRL_CD IN (${codeList})
			) AS RESULT
			PIVOT  (COUNT(PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
						
			
			
			

				UNION ALL
			  
			
				select * from  
							
							(							
							SELECT * FROM (

								SELECT
									'6' GUBUNJA
									,'MP 생산 불출량' GUBUNJA2
									,ISNULL(CONVERT(FLOAT,C.PRE_OUT_QTY),0) PRE_OUT_QTY
								   ,A.MATRL_CD
								 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
								 ,ISNULL(BB.SUM_QTY,0) SUM_REMAIN
								 ,0 SUM_QTY
								 ,0 REMAIN_QTY
								 ,0 TOTAL_QTY
								 ,0.0 FAULTY_QTY
								 ,ISNULL(CC.SUM_QTY,0) RESULT_QTY
								  ,C.PRE_OUT_WHS_DATE	
									 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
									 WHERE PLAN_DATE >= #{startDate}
									AND PLAN_DATE <= #{endDate}
								GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A
							 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
							 ON A.MATRL_CD = C.MATRL_CD
								AND LEFT(PRE_OUT_WHS_DATE,6) = LEFT(PLAN_DATE,6)	
								AND C.APPROVAL_CD != '006'							

							  ,	 (SELECT MATRL_CD,SUM_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
							  WHERE PLAN_DATE = (SELECT CONVERT(VARCHAR(6), DATEADD(M, -1, #{startDate}), 112) + '01')
							
								GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),SUM_QTY) BB
								
								,
								(SELECT MATRL_CD, SUM_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
								GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6), SUM_QTY) CC

				
							  WHERE 1=1						
								AND A.MATRL_CD = BB.MATRL_CD
								AND A.MATRL_CD = CC.MATRL_CD

							
					) AS RESULT
					PIVOT  (SUM( PRE_OUT_QTY)  FOR PRE_OUT_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
					WHERE MATRL_CD in (${codeList})


						  UNION ALL
						
						 	select * from  (SELECT * FROM(
						SELECT
								'7' GUBUNJA
								,'롤수(불출량)' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_OUT_QTY) PRE_OUT_QTY
							   ,A.MATRL_CD
							 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
							 ,ISNULL(BB.ROLL_SUM,0) SUM_REMAIN
								 ,0 SUM_QTY
								 ,0 REMAIN_QTY
								 ,0 TOTAL_QTY
								 ,0.0 FAULTY_QTY
								 ,ISNULL(CC.ROLL_SUM,0) RESULT_QTY
						      ,C.PRE_OUT_WHS_DATE	
								 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								 WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD						 
							AND LEFT(PRE_OUT_WHS_DATE,6) = LEFT(PLAN_DATE,6)	
							AND C.APPROVAL_CD != '006'
							
							
						  , (SELECT MATRL_CD,ROLL_SUM,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
						  WHERE PLAN_DATE = (SELECT CONVERT(VARCHAR(6), DATEADD(M, -1, #{startDate}), 112) + '01')
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),ROLL_SUM) BB
							
							,
								(SELECT MATRL_CD, ROLL_SUM,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
								GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6), ROLL_SUM) CC
								
						  WHERE 1=1						
							
							AND A.MATRL_CD = BB.MATRL_CD
							AND A.MATRL_CD = CC.MATRL_CD
							
							
					) AS RESULT
					PIVOT  (COUNT( PRE_OUT_QTY)  FOR PRE_OUT_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
					WHERE MATRL_CD in (${codeList})


			UNION ALL
			
	
			]]>
				
			
			<!--  	SELECT 
				'8'GUBUNJA
				,'MP 사용일수'GUBUNJA2
				  ,AA.MATRL_CD
				  ,BB.MATRL_NM				 
				   ,0 SUM_REMAIN
				 ,0 SUM_QTY
				 ,0 REMAIN_QTY
				 ,0 TOTAL_QTY
				 ,0.0 FAULTY_QTY
				 ,0.0 RESULT_QTY
	,(((		CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/( CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0)) AS '01'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) ,0) ) )AS '02'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0),0)))  AS '03'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0),0)))   AS '04'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0),0)))   AS '05'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) ,0) ))  AS '06'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) ,0)))   AS '07'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0) ,0)))   AS '08'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) ,0)))   AS '09'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) ,0)))   AS '10'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0) ,0)))   AS '11'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) ,0)))   AS '12'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) ,0)))   AS '13'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0) ,0)))   AS '14'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) ,0)))   AS '15'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) ,0)))   AS '16'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0) ,0)))   AS '17'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) ,0) ))  AS '18'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) ,0) ))  AS '19'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0),0) ))  AS '20'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0),0)))   AS '21'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0),0)))   AS '22'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0),0)))   AS '23'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0),0)))   AS '24'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0),0) ))  AS '25'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0),0)))   AS '26'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0),0)))   AS '27'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0),0)))   AS '28'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0),0) ))  AS '29'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0),0)))   AS '30'
,((( (CASE 
				WHEN LEFT(AA.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 2.7  * ISNULL((F.CNT / 100),0))) 
				WHEN LEFT(AA.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((DD.CNT) * replace(DD.THICKNESS,'m','') * replace(DD.DEPTH,'m','') * replace(DD.PITCH,'m','') / 1000000 * 8.96  * ISNULL((F.CNT / 100),0)))
				ELSE 0 
				END ) )/30 )/(ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0) - ISNULL(BB.[31], 0) + ISNULL(AA.[31] ,0),0) )) AS '31'
			   FROM 	(
			   
			   SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
			   
			   select * from  (SELECT * FROM(
						SELECT
								'3' GUBUNJA
								,'롤수(가입고량)' GUBUNJA2
								,SUM(CONVERT(FLOAT,C.PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
							   ,A.MATRL_CD
							  ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.IN_WHS_DATE
						 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
						 WHERE PLAN_DATE >= #{startDate}
							AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD
						  	AND LEFT(IN_WHS_DATE,6) = LEFT(PLAN_DATE,6)
							 AND C.APPROVAL_CD != '006'
							 and A.MATRL_CD in (${codeList})	
						GROUP BY A.MATRL_CD,C.IN_WHS_DATE					
							
					) AS RESULT
					PIVOT  (SUM( PRE_IN_WHS_QTY)  FOR IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
			 ) AA,	   
			 	
				(		 	
				 SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
				
				
				select * from  (SELECT * FROM(
						SELECT
								'6' GUBUNJA
								,'MP 생산 불출량' GUBUNJA2
								,SUM(CONVERT(FLOAT,C.PRE_OUT_QTY)) PRE_OUT_QTY
							   ,A.MATRL_CD
							 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_OUT_WHS_DATE	
								 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD
						  AND LEFT(PRE_OUT_WHS_DATE,6) = LEFT(PLAN_DATE,6)		
							AND C.APPROVAL_CD != '006'
						  WHERE 1=1													
							 and A.MATRL_CD in (${codeList})	
							GROUP BY A.MATRL_CD,C.PRE_OUT_WHS_DATE						
							
					) AS RESULT
					PIVOT  (SUM( PRE_OUT_QTY)  FOR PRE_OUT_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
					) BB,

				(SELECT MATRL_CD,REMAIN_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
				WHERE PLAN_DATE >= #{startDate}
					AND PLAN_DATE <= #{endDate}
					AND GUBUN_CD = '001'
				GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),REMAIN_QTY) CC,

				
	(			SELECT 
							'6' GUBUNJA
							,'생산계획대비' GUBUNJA2
							,SUM(CONVERT(FLOAT,CNT)) CNT
							 ,TT.ALNICU_MATRL_CD
							 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE TT.ALNICU_MATRL_CD = MATRL_CD) MATRL_NM
							 ,TT.DEPTH
							 ,TT.THICKNESS
							 ,TT.PITCH						
						     
			FROM
			( SELECT * FROM(
				  SELECT  F.equip_cd,     
				       A.alnicu_matrl_cd,	
					   B.MATRL_NM,
				       ROW_NUMBER() OVER (PARTITION BY F.equip_cd,
				       F.equip_nm
				  ORDER BY E.cond_reg_date DESC) AS RankNo,
				    B.thickness
					 ,B.DEPTH
					   ,B.PITCH
				FROM   tb_goods_code_adm A,
				       tb_matrl_code_adm B,
				       tb_matrl_code_adm C,
				       tb_equip_cond_common_adm E,
				       tb_equip_code_adm F
				WHERE  A.goods_cd = E.goods_cd
				       AND A.alnicu_matrl_cd = B.matrl_cd
				       AND A.film_matrl_cd = C.matrl_cd
				       AND E.equip_cd = F.equip_cd
				       AND A.use_yn_cd = '001'
					   AND b.USE_YN_CD = '001'
					   AND C.USE_YN_CD = '001'
					   AND F.ETC1 = ''
				
					   GROUP BY  F.equip_cd
				       ,A.alnicu_matrl_cd
					   ,B.MATRL_NM
					   ,  F.equip_nm	
					   , E.cond_reg_date
					   ,B.THICKNESS
					   ,B.DEPTH
					   ,B.PITCH
					   ) T
					   WHERE RankNo = 1 ) TT
				LEFT OUTER JOIN 

			    ( SELECT EQUIP_CD, PLAN_DATE, CNT
					 FROM TB_PRODUCTION_PLAN_NEW A
					 WHERE COUNT_TYPE_CD = '001'
					 AND PLAN_DATE >= #{startDate}
						AND PLAN_DATE <= #{endDate}	
				)  C
				ON TT.EQUIP_CD = C.EQUIP_CD	

				GROUP BY TT.ALNICU_MATRL_CD,TT.DEPTH,TT.THICKNESS,TT.PITCH
				) DD,
				TB_RAW_MATRL_YIELD F


				WHERE AA.MATRL_CD = BB.MATRL_CD
				AND AA.MATRL_CD = DD.ALNICU_MATRL_CD
				AND AA.MATRL_CD = CC.MATRL_CD
				AND AA.MATRL_CD = F.MATRL_CD
				AND LEFT(CC.PLAN_DATE,6) = F.PLAN_DATE -->
				
				<![CDATA[
				
				
		

				SELECT 
					'8'GUBUNJA
					,'MP 사용일수'GUBUNJA2
				  ,AA.MATRL_CD
				  ,BB.MATRL_NM					
				  ,0 AS SUM_REMAIN			 
				  ,0 AS SUM_QTY
				  , 0 AS REMAIN_QTY								 
					,0 TOTAL_QTY
					,0.0 FAULTY_QTY
					,0.0 RESULT_QTY
					,(ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0),0)) / ISNULL(YY.CNT,0) AS '01'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) ,0) / ISNULL(YY.CNT,0) AS '02'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0),0) / ISNULL(YY.CNT,0)  AS '03'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0),0) / ISNULL(YY.CNT,0) AS '04'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0),0) / ISNULL(YY.CNT,0) AS '05'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) ,0) / ISNULL(YY.CNT,0) AS '06'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) ,0) / ISNULL(YY.CNT,0) AS '07'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0) ,0) / ISNULL(YY.CNT,0) AS '08'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) ,0) / ISNULL(YY.CNT,0) AS '09'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) ,0) / ISNULL(YY.CNT,0) AS '10'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0) ,0) / ISNULL(YY.CNT,0)  AS '11'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) ,0) / ISNULL(YY.CNT,0) AS '12'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) ,0) / ISNULL(YY.CNT,0) AS '13'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0) ,0) / ISNULL(YY.CNT,0) AS '14'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) ,0) / ISNULL(YY.CNT,0) AS '15'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) ,0) / ISNULL(YY.CNT,0) AS '16'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0) ,0) / ISNULL(YY.CNT,0) AS '17'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) ,0) / ISNULL(YY.CNT,0) AS '18'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) ,0) / ISNULL(YY.CNT,0) AS '19'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0),0) / ISNULL(YY.CNT,0) AS '20'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0),0) / ISNULL(YY.CNT,0) AS '21'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0),0) / ISNULL(YY.CNT,0) AS '22'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0),0) / ISNULL(YY.CNT,0) AS '23'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
					- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0),0) / ISNULL(YY.CNT,0) AS '24'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
					- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0),0) / ISNULL(YY.CNT,0) AS '25'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
					- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0),0) / ISNULL(YY.CNT,0) AS '26'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
					- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
					- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0),0) / ISNULL(YY.CNT,0) AS '27'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
					- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
					- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0),0) / ISNULL(YY.CNT,0) AS '28'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
					- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
					- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0),0) / ISNULL(YY.CNT,0) AS '29'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
					- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
					- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
					- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0),0) / ISNULL(YY.CNT,0) AS '30'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
					- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
					- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
					- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0) - ISNULL(BB.[31], 0) + ISNULL(AA.[31] ,0),0) / ISNULL(YY.CNT,0) AS '31'
			   FROM 	(
			   
			   SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
			   
			   select * from  (SELECT * FROM(
						SELECT
								'3' GUBUNJA
								,'롤수(가입고량)' GUBUNJA2
								,ISNULL(CONVERT(FLOAT,C.PRE_IN_WHS_QTY),0) PRE_IN_WHS_QTY
							   ,A.MATRL_CD
							  ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_IN_WHS_DATE
						      
						 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
						 WHERE PLAN_DATE >= #{startDate}
							AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						LEFT OUTER JOIN
						(
						
						SELECT A.MATRL_CD, ISNULL(SUM(CAST(B.PRE_IN_WHS_QTY AS FLOAT)),0)  PRE_IN_WHS_QTY, PRE_IN_WHS_DATE
						FROM TB_MATRL_CODE_ADM A  LEFT OUTER JOIN TB_IN_OUT_WHS_ADM B
						ON A.MATRL_CD = B.MATRL_CD
						AND A.USE_YN_CD = '001'
						AND B.APPROVAL_CD != '006'
						AND LEFT(B.PRE_IN_WHS_DATE,6) = LEFT(#{startDate},6)
						GROUP BY A.MATRL_CD,PRE_IN_WHS_DATE
						
						)C
	
						ON 1=1
						AND A.MATRL_CD = C.MATRL_CD
							
					) AS RESULT
					PIVOT  (SUM( PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
			 ) AA,
			   
			 	
				(		 	
				 SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
				
				
				select * from  (SELECT * FROM(
						SELECT
								'6' GUBUNJA
								,'MP 생산 불출량' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_OUT_QTY) PRE_OUT_QTY
							   ,A.MATRL_CD
							 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_OUT_WHS_DATE	
								 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								 WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD
							AND LEFT(PRE_OUT_WHS_DATE,6) = LEFT(PLAN_DATE,6)		
							AND C.APPROVAL_CD != '006'
														
							
					) AS RESULT
					PIVOT  (SUM( PRE_OUT_QTY)  FOR PRE_OUT_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B) BB,


							(SELECT MATRL_CD,ISNULL(REMAIN_QTY,0) REMAIN_QTY,ISNULL(SUM_QTY,0) SUM_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
								GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),REMAIN_QTY,SUM_QTY) CC,
							
							(SELECT MATRL_CD,ISNULL(SUM_QTY,0) SUM_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
							WHERE PLAN_DATE = (SELECT CONVERT(VARCHAR(6), DATEADD(M, -1, #{startDate}), 112) + '01')

							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),SUM_QTY) DD
						,		
				(SELECT
						'92' GUBUNJA
						,'불량(실반품)' GUBUNJA2
						,SUM(CONVERT(FLOAT,C.PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
					   ,A.MATRL_CD
					 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
					 ,0 SUM_REMAIN
					 ,0.0 SUM_QTY
					 ,0 REMAIN_QTY
					 ,0 TOTAL_QTY					
						 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
						 WHERE  PLAN_DATE >= #{startDate}
				    AND PLAN_DATE <= #{endDate}
					GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A
				 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
				 ON A.MATRL_CD = C.MATRL_CD
					AND LEFT(PRE_IN_WHS_DATE,6) = LEFT(PLAN_DATE,6)	
					AND C.APPROVAL_CD = '006'
					GROUP BY A.MATRL_CD
				) EE,
				
				(
					SELECT MATRL_CD, MATRL_NM, SUM(CNT) CNT
					FROM (
						SELECT
						B.MATRL_CD
						,B.MATRL_NM						
						,(ISNULL((CASE 
						WHEN LEFT(B.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((SUM(A.PLAN_CNT)) * replace(B.THICKNESS,'m','') * replace(B.DEPTH,'m','') * replace(E.GOODS_PITCH,'m','') / 1000000 * 2.7 * (G.CNT/100) ) )
						WHEN LEFT(B.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((SUM(A.PLAN_CNT)) * replace(B.THICKNESS,'m','') * replace(B.DEPTH,'m','') * replace(E.GOODS_PITCH,'m','') / 1000000 * 8.96 * (G.CNT/100) ) )
						ELSE 0 
						END),0) / DAY(EOMONTH(#{startDate}))) CNT
	
						FROM 
						TB_GOODS_CODE_ADM E
						LEFT OUTER JOIN
						(
						SELECT GOODS_CD,SUM(PLAN_CNT) PLAN_CNT,FP_DATE 
						FROM TB_MONTH_PRODUCTION_PLAN_DTL 
						WHERE LEFT(FP_DATE,6) = LEFT(#{startDate},6)
						AND CPL_GUBUN = '002'
						GROUP BY GOODS_CD,FP_DATE
						) A
						ON 1=1
						AND A.GOODS_CD = E.GOODS_CD
	
						LEFT OUTER JOIN
						TB_MATRL_CODE_ADM B
						ON 1=1
						AND E.ALNICU_MATRL_CD = B.MATRL_CD
	
						LEFT OUTER JOIN
						TB_RAW_MATRL_YIELD G
						ON 1=1
						AND B.MATRL_CD = G.MATRL_CD
						AND G.PLAN_DATE = LEFT(#{startDate},6)
	
	
						WHERE 1=1
						AND B.USE_YN_CD = '001'
						AND E.USE_YN_CD = '001'
						
						
						GROUP BY B.MATRL_CD	,B.MATRL_NM,B.THICKNESS,DEPTH,GOODS_PITCH,G.CNT
					) AA
					GROUP BY MATRL_CD,MATRL_NM
					
				) YY


				WHERE AA.MATRL_CD = BB.MATRL_CD
				AND AA.MATRL_CD = CC.MATRL_CD
				AND AA.MATRL_CD = DD.MATRL_CD
				AND AA.MATRL_CD = EE.MATRL_CD
				AND AA.MATRL_CD = YY.MATRL_CD
				AND AA.MATRL_CD in (${codeList})
	
			UNION ALL

			SELECT 
					'8'GUBUNJA
					,'MP 사용일수'GUBUNJA2
				  ,AA.MATRL_CD
				  ,BB.MATRL_NM					
				  ,0 AS SUM_REMAIN			 
				  ,0 AS SUM_QTY
				  , 0 AS REMAIN_QTY								 
					,0 TOTAL_QTY
					,0.0 FAULTY_QTY
					,0.0 RESULT_QTY
					,(ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0),0)) / ISNULL(YY.CNT,0) AS '01'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) ,0) / ISNULL(YY.CNT,0) AS '02'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0),0) / ISNULL(YY.CNT,0)  AS '03'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0),0) / ISNULL(YY.CNT,0) AS '04'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0),0) / ISNULL(YY.CNT,0) AS '05'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) ,0) / ISNULL(YY.CNT,0) AS '06'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) ,0) / ISNULL(YY.CNT,0) AS '07'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0) ,0) / ISNULL(YY.CNT,0) AS '08'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) ,0) / ISNULL(YY.CNT,0) AS '09'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) ,0) / ISNULL(YY.CNT,0) AS '10'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0) ,0) / ISNULL(YY.CNT,0)  AS '11'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) ,0) / ISNULL(YY.CNT,0) AS '12'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) ,0) / ISNULL(YY.CNT,0) AS '13'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0) ,0) / ISNULL(YY.CNT,0) AS '14'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) ,0) / ISNULL(YY.CNT,0) AS '15'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) ,0) / ISNULL(YY.CNT,0) AS '16'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0) ,0) / ISNULL(YY.CNT,0) AS '17'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) ,0) / ISNULL(YY.CNT,0) AS '18'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) ,0) / ISNULL(YY.CNT,0) AS '19'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0),0) / ISNULL(YY.CNT,0) AS '20'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0),0) / ISNULL(YY.CNT,0) AS '21'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0),0) / ISNULL(YY.CNT,0) AS '22'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0),0) / ISNULL(YY.CNT,0) AS '23'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
					- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0),0) / ISNULL(YY.CNT,0) AS '24'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
					- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0),0) / ISNULL(YY.CNT,0) AS '25'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
					- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0),0) / ISNULL(YY.CNT,0) AS '26'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
					- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
					- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0),0) / ISNULL(YY.CNT,0) AS '27'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
					- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
					- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0),0) / ISNULL(YY.CNT,0) AS '28'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
					- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
					- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0),0) / ISNULL(YY.CNT,0) AS '29'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
					- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
					- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
					- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0),0) / ISNULL(YY.CNT,0) AS '30'
					,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
					- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
					- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
					- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
					- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
					- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
					- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
					- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
					- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
					- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
					- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0) - ISNULL(BB.[31], 0) + ISNULL(AA.[31] ,0),0) / ISNULL(YY.CNT,0) AS '31'
			   FROM 	(
			   
			   SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
			   
			   select * from  (SELECT * FROM(
						SELECT
								'3' GUBUNJA
								,'롤수(가입고량)' GUBUNJA2
								,ISNULL(CONVERT(FLOAT,C.PRE_IN_WHS_QTY),0) PRE_IN_WHS_QTY
							   ,A.MATRL_CD
							  ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_IN_WHS_DATE
						      
						 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
						 WHERE PLAN_DATE >= #{startDate}
							AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						LEFT OUTER JOIN
						(
						
						SELECT A.MATRL_CD, ISNULL(SUM(CAST(B.PRE_IN_WHS_QTY AS FLOAT)),0)  PRE_IN_WHS_QTY, PRE_IN_WHS_DATE
						FROM TB_MATRL_CODE_ADM A  LEFT OUTER JOIN TB_IN_OUT_WHS_ADM B
						ON A.MATRL_CD = B.MATRL_CD
						AND A.USE_YN_CD = '001'
						AND B.APPROVAL_CD != '006'
						AND LEFT(B.PRE_IN_WHS_DATE,6) = LEFT(#{startDate},6)
						GROUP BY A.MATRL_CD,PRE_IN_WHS_DATE
						
						)C
	
						ON 1=1
						AND A.MATRL_CD = C.MATRL_CD
							
					) AS RESULT
					PIVOT  (SUM( PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
			 ) AA,
			   
			 	
				(		 	
				 SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
				
				
				select * from  (SELECT * FROM(
						SELECT
								'6' GUBUNJA
								,'MP 생산 불출량' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_OUT_QTY) PRE_OUT_QTY
							   ,A.MATRL_CD
							 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_OUT_WHS_DATE	
								 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								 WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD
							AND LEFT(PRE_OUT_WHS_DATE,6) = LEFT(PLAN_DATE,6)		
							AND C.APPROVAL_CD != '006'
														
							
					) AS RESULT
					PIVOT  (SUM( PRE_OUT_QTY)  FOR PRE_OUT_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B) BB,


							(SELECT MATRL_CD,ISNULL(REMAIN_QTY,0) REMAIN_QTY,ISNULL(SUM_QTY,0) SUM_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
								GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),REMAIN_QTY,SUM_QTY) CC,
							
							(SELECT MATRL_CD,ISNULL(SUM_QTY,0) SUM_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
							WHERE PLAN_DATE = (SELECT CONVERT(VARCHAR(6), DATEADD(M, -1, #{startDate}), 112) + '01')

							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),SUM_QTY) DD
						,		
				(SELECT
						'92' GUBUNJA
						,'불량(실반품)' GUBUNJA2
						,SUM(CONVERT(FLOAT,C.PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
					   ,A.MATRL_CD
					 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
					 ,0 SUM_REMAIN
					 ,0.0 SUM_QTY
					 ,0 REMAIN_QTY
					 ,0 TOTAL_QTY					
						 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
						 WHERE  PLAN_DATE >= #{startDate}
				    AND PLAN_DATE <= #{endDate}
					GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A
				 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
				 ON A.MATRL_CD = C.MATRL_CD
					AND LEFT(PRE_IN_WHS_DATE,6) = LEFT(PLAN_DATE,6)	
					AND C.APPROVAL_CD = '006'
					GROUP BY A.MATRL_CD
				) EE,
				
				(
					SELECT MATRL_CD, MATRL_NM, SUM(CNT) CNT
					FROM (
						SELECT
						B.MATRL_CD
						,B.MATRL_NM				
						,ISNULL((CONVERT(FLOAT,(SUM(A.PLAN_CNT))) * CONVERT(FLOAT,FILM_WEIGHT)) / DAY(EOMONTH(#{startDate})),0)  CNT
						FROM 
						TB_GOODS_CODE_ADM E
						LEFT OUTER JOIN
						(
						SELECT GOODS_CD,SUM(PLAN_CNT) PLAN_CNT 
						FROM TB_MONTH_PRODUCTION_PLAN_DTL 
						WHERE LEFT(FP_DATE,6) = LEFT(#{startDate},6)
						AND CPL_GUBUN = '002'
						GROUP BY GOODS_CD
						) A
						ON 1=1
						AND A.GOODS_CD = E.GOODS_CD
	
						LEFT OUTER JOIN
						TB_MATRL_CODE_ADM B
						ON 1=1
						AND E.FILM_MATRL_CD = B.MATRL_CD
	
						WHERE 1=1
						AND B.USE_YN_CD = '001'
						AND E.USE_YN_CD = '001'				
						GROUP BY B.MATRL_CD	,B.MATRL_NM,E.FILM_WEIGHT
					) AA
					GROUP BY MATRL_CD,MATRL_NM
				) YY


				WHERE AA.MATRL_CD = BB.MATRL_CD
				AND AA.MATRL_CD = CC.MATRL_CD
				AND AA.MATRL_CD = DD.MATRL_CD
				AND AA.MATRL_CD = EE.MATRL_CD
				AND AA.MATRL_CD = YY.MATRL_CD
				AND AA.MATRL_CD in (${codeList})
				
			   UNION ALL
			
			   
				SELECT 
					'9'GUBUNJA
					,'MP재고량'GUBUNJA2
				  ,AA.MATRL_CD
				  ,BB.MATRL_NM					
				  ,CONVERT(VARCHAR,(ISNULL(CC.REMAIN_QTY,0)- ISNULL(DD.SUM_QTY,0))) AS SUM_REMAIN			 
				  ,ISNULL(CC.SUM_QTY, 0) AS SUM_QTY
				  ,ISNULL(CC.REMAIN_QTY,0)   AS REMAIN_QTY
								 
				,ISNULL(ISNULL(CC.REMAIN_QTY,0)- ISNULL(DD.SUM_QTY,0) + ISNULL(CC.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
				- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
				- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
				- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
				- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
				- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
				- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
				- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
				- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
				- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
				- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0) - ISNULL(BB.[31], 0) + ISNULL(AA.[31] ,0),0)  AS TOTAL_QTY
				,0.0 FAULTY_QTY
				,0.0 RESULT_QTY
				,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0),0)  AS '01'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) ,0)  AS '02'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0),0)  AS '03'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0),0)  AS '04'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0),0)  AS '05'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) ,0)  AS '06'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) ,0)  AS '07'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0) ,0)  AS '08'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) ,0)  AS '09'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) ,0)  AS '10'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0) ,0)  AS '11'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) ,0)  AS '12'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) ,0)  AS '13'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0) ,0)  AS '14'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) ,0)  AS '15'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) ,0)  AS '16'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0) ,0)  AS '17'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) ,0)  AS '18'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) ,0)  AS '19'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0),0)  AS '20'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0),0)  AS '21'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0),0)  AS '22'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0),0)  AS '23'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0),0)  AS '24'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0),0)  AS '25'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0),0)  AS '26'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0),0)  AS '27'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0),0)  AS '28'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0),0)  AS '29'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0),0)  AS '30'
,ISNULL(CC.REMAIN_QTY - ISNULL(DD.SUM_QTY, 0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0) - ISNULL(BB.[31], 0) + ISNULL(AA.[31] ,0),0)  AS '31'
			   FROM 	(
			   
			   SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
			   
			   select * from  (SELECT * FROM(
						SELECT
								'3' GUBUNJA
								,'롤수(가입고량)' GUBUNJA2
								,ISNULL(CONVERT(FLOAT,C.PRE_IN_WHS_QTY),0) PRE_IN_WHS_QTY
							   ,A.MATRL_CD
							  ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_IN_WHS_DATE
						      
						 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
						 WHERE PLAN_DATE >= #{startDate}
							AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						LEFT OUTER JOIN
						(
						
						SELECT A.MATRL_CD, ISNULL(SUM(CAST(B.PRE_IN_WHS_QTY AS FLOAT)),0)  PRE_IN_WHS_QTY, PRE_IN_WHS_DATE
						FROM TB_MATRL_CODE_ADM A  LEFT OUTER JOIN TB_IN_OUT_WHS_ADM B
						ON A.MATRL_CD = B.MATRL_CD
						AND A.USE_YN_CD = '001'
						AND B.APPROVAL_CD != '006'
						AND LEFT(B.PRE_IN_WHS_DATE,6) = LEFT(#{startDate},6)
						GROUP BY A.MATRL_CD,PRE_IN_WHS_DATE
						
						)C
	
						ON 1=1
						AND A.MATRL_CD = C.MATRL_CD
							
					) AS RESULT
					PIVOT  (SUM( PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
			 ) AA,
			   
			 	
				(		 	
				 SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
				
				
				select * from  (SELECT * FROM(
						SELECT
								'6' GUBUNJA
								,'MP 생산 불출량' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_OUT_QTY) PRE_OUT_QTY
							   ,A.MATRL_CD
							 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_OUT_WHS_DATE	
								 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								 WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD
							AND LEFT(PRE_OUT_WHS_DATE,6) = LEFT(PLAN_DATE,6)		
							AND C.APPROVAL_CD != '006'
														
							
					) AS RESULT
					PIVOT  (SUM( PRE_OUT_QTY)  FOR PRE_OUT_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B) BB,


							(SELECT MATRL_CD,ISNULL(REMAIN_QTY,0) REMAIN_QTY,ISNULL(SUM_QTY,0) SUM_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
								GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),REMAIN_QTY,SUM_QTY) CC,
							
							(SELECT MATRL_CD,ISNULL(SUM_QTY,0) SUM_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
							WHERE PLAN_DATE = (SELECT CONVERT(VARCHAR(6), DATEADD(M, -1, #{startDate}), 112) + '01')

							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),SUM_QTY) DD
						,		
				(SELECT
						'92' GUBUNJA
						,'불량(실반품)' GUBUNJA2
						,SUM(CONVERT(FLOAT,C.PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
					   ,A.MATRL_CD
					 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
					 ,0 SUM_REMAIN
					 ,0.0 SUM_QTY
					 ,0 REMAIN_QTY
					 ,0 TOTAL_QTY					
						 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
						 WHERE  PLAN_DATE >= #{startDate}
				    AND PLAN_DATE <= #{endDate}
					GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A
				 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
				 ON A.MATRL_CD = C.MATRL_CD
					AND LEFT(PRE_IN_WHS_DATE,6) = LEFT(PLAN_DATE,6)	
					AND C.APPROVAL_CD = '006'
					GROUP BY A.MATRL_CD
				) EE

				WHERE AA.MATRL_CD = BB.MATRL_CD
				AND AA.MATRL_CD = CC.MATRL_CD
				AND AA.MATRL_CD = DD.MATRL_CD
				AND AA.MATRL_CD = EE.MATRL_CD
				AND AA.MATRL_CD in (${codeList})

			
			   UNION ALL
			
			   
				SELECT 
				'91'GUBUNJA
				,'롤수(재고)'GUBUNJA2
				  ,AA.MATRL_CD
				  ,BB.MATRL_NM			
				   ,CONVERT(VARCHAR,(ISNULL(CC.ROLL_REMAIN,0)- ISNULL(DD.ROLL_SUM,0))) AS  SUM_REMAIN				 
				 ,CONVERT(VARCHAR,ISNULL(CC.ROLL_SUM, 0)) AS  SUM_QTY
				  ,CONVERT(VARCHAR,CC.ROLL_REMAIN)   AS REMAIN_QTY
				  ,ISNULL(ISNULL(CC.ROLL_REMAIN,0)- ISNULL(DD.ROLL_SUM,0) + ISNULL(CC.ROLL_SUM, 0)  - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
				- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
				- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
				- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
				- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
				- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
				- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
				- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
				- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
				- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
				- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0) - ISNULL(BB.[31], 0) + ISNULL(AA.[31] ,0),0) AS TOTAL_QTY
				,0.0 FAULTY_QTY
				,0.0 RESULT_QTY				  
				,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0),0)  AS '01'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) ,0)  AS '02'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0),0)  AS '03'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0),0)  AS '04'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0),0)  AS '05'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) ,0)  AS '06'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) ,0)  AS '07'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0) ,0)  AS '08'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) ,0)  AS '09'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) ,0)  AS '10'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0) ,0)  AS '11'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) ,0)  AS '12'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) ,0)  AS '13'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0) ,0)  AS '14'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) ,0)  AS '15'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) ,0)  AS '16'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0) ,0)  AS '17'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) ,0)  AS '18'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) ,0)  AS '19'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0),0)  AS '20'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0),0)  AS '21'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0),0)  AS '22'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0),0)  AS '23'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0),0)  AS '24'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0),0)  AS '25'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0),0)  AS '26'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0),0)  AS '27'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0),0)  AS '28'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0),0)  AS '29'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0),0)  AS '30'
,ISNULL(CC.ROLL_REMAIN - ISNULL(DD.ROLL_SUM,0) - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0) - ISNULL(BB.[31], 0) + ISNULL(AA.[31] ,0),0)  AS '31'
			   FROM 	(
			   
			   SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
			   
			   select * from  (SELECT * FROM(
						SELECT
								'3' GUBUNJA
								,'롤수(
								)' GUBUNJA2
								,ISNULL(CONVERT(FLOAT,C.PRE_IN_WHS_QTY),0) PRE_IN_WHS_QTY
							   ,A.MATRL_CD
							  ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_IN_WHS_DATE
						      
						 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
						 WHERE PLAN_DATE >= #{startDate}
							AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						LEFT OUTER JOIN
						(
						
							SELECT A.MATRL_CD, ISNULL(COUNT(CAST(B.PRE_IN_WHS_QTY AS FLOAT)),0)  PRE_IN_WHS_QTY, PRE_IN_WHS_DATE
							FROM TB_MATRL_CODE_ADM A  LEFT OUTER JOIN TB_IN_OUT_WHS_ADM B
							ON A.MATRL_CD = B.MATRL_CD
							AND A.USE_YN_CD = '001'
							AND B.APPROVAL_CD != '006'
							AND LEFT(B.PRE_IN_WHS_DATE,6) = LEFT(#{startDate},6)
							GROUP BY A.MATRL_CD,PRE_IN_WHS_DATE
					
						)C
	
						ON 1=1
						AND A.MATRL_CD = C.MATRL_CD
							
					) AS RESULT
					PIVOT  (SUM( PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
			 ) AA,
			   
			 	
				(		 	
				 SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
				
				
				select * from  (SELECT * FROM(
						SELECT
								'6' GUBUNJA
								,'MP 생산 불출량' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_OUT_QTY) PRE_OUT_QTY
							   ,A.MATRL_CD
							 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_OUT_WHS_DATE	
								 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								 WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD
						  AND LEFT(PRE_OUT_WHS_DATE,6) = LEFT(PLAN_DATE,6)		
							AND C.APPROVAL_CD != '006'
							
							 and A.MATRL_CD in (${codeList})	
							
					) AS RESULT
					PIVOT  (COUNT( PRE_OUT_QTY)  FOR PRE_OUT_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B) BB,


				(SELECT MATRL_CD,ROLL_REMAIN,ISNULL(ROLL_SUM,0) ROLL_SUM,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
				WHERE PLAN_DATE >= #{startDate}
				AND PLAN_DATE <= #{endDate}
				GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),ROLL_REMAIN, ROLL_SUM) CC

			
				,	(SELECT MATRL_CD,ROLL_SUM,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
				WHERE PLAN_DATE = (SELECT CONVERT(VARCHAR(6), DATEADD(M, -1, #{startDate}), 112) + '01')				
				GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),ROLL_SUM) DD

				WHERE AA.MATRL_CD = BB.MATRL_CD
				AND AA.MATRL_CD = CC.MATRL_CD
				AND AA.MATRL_CD = DD.MATRL_CD	
				

				AND AA.MATRL_CD IN (${codeList})
		
				

		order by matrl_CD,GUBUNJA asc
				]]>
				
				<!-- 	UNION ALL
				
				
				select * from  
							
							(							
							SELECT * FROM (

								SELECT
									'92' GUBUNJA
									,'불량(실반품)' GUBUNJA2
									,CONVERT(FLOAT,C.PRE_IN_WHS_QTY) PRE_IN_WHS_QTY
								   ,A.MATRL_CD
								 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
								 ,0 SUM_REMAIN
								 ,0.0 SUM_QTY
								 ,0 REMAIN_QTY
								 ,0 TOTAL_QTY
								  ,C.PRE_IN_WHS_DATE	
									 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
									 WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}	
								GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A
							 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
							 ON A.MATRL_CD = C.MATRL_CD
								AND LEFT(PRE_IN_WHS_DATE,6) = LEFT(PLAN_DATE,6)	
								AND C.APPROVAL_CD = '006'
								and A.MATRL_CD in (${codeList})	
					) AS RESULT
					PIVOT  (SUM( PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
					WHERE MATRL_CD in (${codeList}) -->
	</select>
	<!-- ${codeList} #{planDate} ${planDateList} -->
		<!-- 단가 조회 -->
	<select id="listMatrlPrice" resultType="HashMap">
		<![CDATA[	
					SELECT 
						* 
					FROM(
						SELECT
							 B.MATRL_CD
							,B.MATRL_NM
							,PLAN_DATE
							,PRICE				 
				 			
						FROM  TB_MATRL_CODE_ADM B LEFT OUTER JOIN TB_MATRL_PRICE A
						ON A.MATRL_CD = B.MATRL_CD
						WHERE 1=1	
						AND B.USE_YN_CD = '001'
		]]>
						<if test="qutyCd != null and qutyCd != ''"> 
							AND B.QUTY_CD = #{qutyCd}
						</if>	
		<![CDATA[						
					) AS AA
					PIVOT(SUM(PRICE) FOR PLAN_DATE IN (${planDateList})) AS RESULT
		
		]]>
	</select>
	
	<!-- 단가 상세 조회 -->
	<select id="readMatrlPrice" resultMap="RawMatrlSupplyVo">
		<![CDATA[	
			SELECT
				   B.MATRL_CD
				  ,B.MATRL_NM
			      ,PLAN_DATE
			      ,PRICE				 
 			
			 FROM  TB_MATRL_CODE_ADM B LEFT OUTER JOIN TB_MATRL_PRICE A
			 ON A.MATRL_CD = B.MATRL_CD
			  WHERE 1=1	
			 AND A.MATRL_CD = #{matrlCd}
			 ANd A.PLAN_DATE = #{planDate}
			 AND B.USE_YN_CD = '001'
		
		]]>
	</select>

	<insert id="createMatrlPrice">
		
			INSERT INTO TB_MATRL_PRICE (
				MATRL_CD
	           ,PLAN_DATE	           
	           ,PRICE	         
	           ,REG_ID
	           ,REG_DATE
				) 
			VALUES(
			 
				#{matrlCd}
				, #{planDate}							
				, #{price}				
				, #{regId}
				, getDate()				
			 
			)		 
	</insert>

	<!-- 수정 -->
	<update id="updateMatrlPrice">
		<![CDATA[
			UPDATE	TB_MATRL_PRICE		 
			SET
				CNT = #{price}				
				, UPD_ID = #{updId}
				, UPD_DATE = getDate()
			
			WHERE
				MATRL_CD = #{matrlCd}
			AND
				PLAN_DATE = #{planDate}
		
		]]>
	</update>
	
	<!-- 삭제 -->
	<delete id="deleteMatrlPrice">
		<![CDATA[
		DELETE FROM TB_MATRL_PRICE 
				WHERE LEFT(PLAN_DATE,4) = #{planDate}
				AND MATRL_CD = #{matrlCd}
				
	
		]]>
	</delete>
	
		<!-- 단가 조회 -->
	<select id="listRawMartl" resultMap="RawMatrlSupplyVo">
		

		
		<!-- 	SELECT
				CASE 
				WHEN LEFT(A.MATRL_CD,1) = 'A' THEN '1'
				WHEN LEFT(A.MATRL_CD,1) = 'N' THEN '2'
				WHEN LEFT(A.MATRL_CD,1) = 'F' AND ROLL_GUBUN = '001' THEN '3'
				WHEN LEFT(A.MATRL_CD,1) = 'F' AND ROLL_GUBUN = '002' THEN '4'
				END
				GUBUNJA,
				A.MATRL_CD,
				F.MATRL_NM,
				A.PAID_GUBUN,
				(F.THICKNESS + 'X' + F.DEPTH) THICKNESS,
				
				ISNULL(REMAIN_QTY,0)  REMAIN_QTY,
				(ISNULL(REMAIN_QTY,0)* ISNULL(PRICE,0)) REMAIN_QTY_TOTAL,	

				ISNULL(PRE_IN_WHS_QTY,0) PRE_IN_WHS_QTY,
				CASE 	
				WHEN LEFT(A.MATRL_CD,1) = 'F' AND ROLL_GUBUN = '002' THEN 0 
				ELSE ISNULL(PRE_IN_WHS_QTY,0)* ISNULL(PRICE,0)
				END
				PRE_IN_WHS_QTY_TOTAL,		
				ISNULL(PRE_OUT_WHS_QTY,0)  PRE_OUT_WHS_QTY,
					CASE 	
				WHEN LEFT(A.MATRL_CD,1) = 'F' AND ROLL_GUBUN = '001' THEN 0 
				ELSE ISNULL(PRE_OUT_WHS_QTY,0)* ISNULL(PRICE,0)
				END
				PRE_OUT_WHS_QTY_TOTAL,
				ISNULL(REMAIN_QTY,0) + ISNULL(SUM_QTY,0) + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) RESULT_QTY,
				(ISNULL(REMAIN_QTY,0) + ISNULL(SUM_QTY,0) + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0)) * ISNULL(PRICE,0) RESULT_QTY_TOTAL,
				
				ISNULL(SUM_QTY,0) SUM_QTY,
				ISNULL(SUM_QTY,0)* ISNULL(PRICE,0) SUM_QTY_TOTAL,
				ISNULL(PRICE,0) PRICE
				
			FROM
				(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY, PAID_GUBUN FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_IN_WHS_DATE,6) = #{planDate} AND (APPROVAL_CD = '001' OR APPROVAL_CD = '002' OR APPROVAL_CD = '009') GROUP BY MATRL_CD,LEFT(PRE_IN_WHS_DATE,6), PAID_GUBUN) A LEFT OUTER JOIN
				(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_OUT_WHS_QTY, PAID_GUBUN FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_IN_WHS_DATE,6) = #{planDate} AND (STATUS_CD = 'O' OR STATUS_CD = 'P') AND (APPROVAL_CD = '001' OR APPROVAL_CD = '002' OR APPROVAL_CD = '009') GROUP BY MATRL_CD,LEFT(PRE_IN_WHS_DATE,6), PAID_GUBUN)  B
				ON 1=1 AND A.MATRL_CD = B.MATRL_CD 
				AND A.PAID_GUBUN = B.PAID_GUBUN
				LEFT OUTER JOIN
				
				(SELECT MATRL_CD, REMAIN_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),REMAIN_QTY) C
				ON 1=1 AND A.MATRL_CD = C.MATRL_CD
				
				LEFT OUTER JOIN
				(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) D
				ON 1=1 AND D.MATRL_CD = A.MATRL_CD
				
				LEFT OUTER JOIN
				(SELECT MATRL_CD, PRICE FROM TB_MATRL_PRICE A WHERE PLAN_DATE = #{planDate}) E
				ON 1=1 AND A.MATRL_CD = E.MATRL_CD
				AND A.PAID_GUBUN = '001', 
				TB_MATRL_CODE_ADM F
				
				WHERE A.MATRL_CD = F.MATRL_CD
				AND F.USE_YN_CD = '001'
			
			UNION ALL

			
			SELECT 
				'21' GUBUNJA,
				'N99999' MATRL_CD
				,'소계' MATRL_NM
				,'' PAID_GUBUN
				,'' THICKNESS
				,SUM(REMAIN_QTY) REMAIN_QTY,
				SUM(REMAIN_QTY_TOTAL) REMAIN_QTY_TOTAL,
				SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
				SUM(PRE_IN_WHS_QTY_TOTAL) PRE_IN_WHS_QTY_TOTAL,
				SUM(PRE_OUT_WHS_QTY) PRE_OUT_WHS_QTY,
				SUM(PRE_OUT_WHS_QTY_TOTAL) PRE_OUT_WHS_QTY_TOTAL,
				SUM(RESULT_QTY) RESULT_QTY,
				SUM(RESULT_QTY_TOTAL) RESULT_QTY_TOTAL,
				SUM(SUM_QTY) SUM_QTY,
				SUM(SUM_QTY_TOTAL) SUM_QTY_TOTAL,
				0 PRICE
				
			FROM
			
				(
				SELECT
					A.MATRL_CD,
					(F.THICKNESS + 'X' + F.DEPTH) THICKNESS,
					ISNULL(REMAIN_QTY,0) REMAIN_QTY,
					ISNULL(REMAIN_QTY,0)* ISNULL(PRICE,0) REMAIN_QTY_TOTAL,
					ISNULL(PRE_IN_WHS_QTY,0) PRE_IN_WHS_QTY,
					ISNULL(PRE_IN_WHS_QTY,0)* ISNULL(PRICE,0) PRE_IN_WHS_QTY_TOTAL,
					ISNULL(PRE_OUT_WHS_QTY,0) PRE_OUT_WHS_QTY,
					ISNULL(PRE_OUT_WHS_QTY,0)* ISNULL(PRICE,0) PRE_OUT_WHS_QTY_TOTAL,
					ISNULL(REMAIN_QTY,0) + ISNULL(SUM_QTY,0) + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) RESULT_QTY,
					(ISNULL(REMAIN_QTY,0) + ISNULL(SUM_QTY,0) + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0)) * ISNULL(PRICE,0) RESULT_QTY_TOTAL,
					ISNULL(SUM_QTY,0) SUM_QTY,
					ISNULL(PRICE,0) PRICE,
					ISNULL(SUM_QTY,0)* ISNULL(PRICE,0) SUM_QTY_TOTAL
				
				FROM
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY, PAID_GUBUN FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_IN_WHS_DATE,6) = #{planDate} AND (APPROVAL_CD = '001' OR APPROVAL_CD = '002' OR APPROVAL_CD = '009') GROUP BY MATRL_CD,LEFT(PRE_IN_WHS_DATE,6), PAID_GUBUN) A LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_OUT_WHS_QTY, PAID_GUBUN FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_IN_WHS_DATE,6) = #{planDate} AND (STATUS_CD = 'O' OR STATUS_CD = 'P') AND (APPROVAL_CD = '001' OR APPROVAL_CD = '002' OR APPROVAL_CD = '009') GROUP BY MATRL_CD,LEFT(PRE_IN_WHS_DATE,6), PAID_GUBUN)  B
					ON 1=1 AND A.MATRL_CD = B.MATRL_CD
					AND A.PAID_GUBUN = B.PAID_GUBUN
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, REMAIN_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),REMAIN_QTY) C
					ON 1=1 AND A.MATRL_CD = C.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) D
					ON 1=1 AND D.MATRL_CD = A.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, PRICE FROM TB_MATRL_PRICE A WHERE PLAN_DATE = #{planDate}) E
					ON 1=1 AND A.MATRL_CD = E.MATRL_CD
					AND A.PAID_GUBUN = '001',
					TB_MATRL_CODE_ADM F
					
					WHERE A.MATRL_CD = F.MATRL_CD
					AND LEFT(A.MATRL_CD,1) = 'N'
					AND F.USE_YN_CD = '001'
				) AA
				
				GROUP BY LEFT(AA.MATRL_CD,1)
			
			UNION ALL
			
			
			SELECT 
				'11' GUBUNJA,
				'A99999' MATRL_CD
				,'소계' MATRL_NM
				,'' PAID_GUBUN
				,'' THICKNESS
				,SUM(REMAIN_QTY) REMAIN_QTY,
				SUM(REMAIN_QTY_TOTAL) REMAIN_QTY_TOTAL,
				SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
				SUM(PRE_IN_WHS_QTY_TOTAL) PRE_IN_WHS_QTY_TOTAL,
				SUM(PRE_OUT_WHS_QTY) PRE_OUT_WHS_QTY,
				SUM(PRE_OUT_WHS_QTY_TOTAL) PRE_OUT_WHS_QTY_TOTAL,
				SUM(RESULT_QTY) RESULT_QTY,
				SUM(RESULT_QTY_TOTAL) RESULT_QTY_TOTAL,
				SUM(SUM_QTY) SUM_QTY,
				SUM(SUM_QTY_TOTAL) SUM_QTY_TOTAL,
				0 PRICE
			
			FROM
			
				(
								SELECT
					A.MATRL_CD,
					(F.THICKNESS + 'X' + F.DEPTH) THICKNESS,
					ISNULL(REMAIN_QTY,0) REMAIN_QTY,
					ISNULL(REMAIN_QTY,0)* ISNULL(PRICE,0) REMAIN_QTY_TOTAL,
					ISNULL(PRE_IN_WHS_QTY,0) PRE_IN_WHS_QTY,
					ISNULL(PRE_IN_WHS_QTY,0)* ISNULL(PRICE,0) PRE_IN_WHS_QTY_TOTAL,
					ISNULL(PRE_OUT_WHS_QTY,0) PRE_OUT_WHS_QTY,
					ISNULL(PRE_OUT_WHS_QTY,0)* ISNULL(PRICE,0) PRE_OUT_WHS_QTY_TOTAL,
					ISNULL(REMAIN_QTY,0) + ISNULL(SUM_QTY,0) + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) RESULT_QTY,
					(ISNULL(REMAIN_QTY,0) + ISNULL(SUM_QTY,0) + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0)) * ISNULL(PRICE,0) RESULT_QTY_TOTAL,
					ISNULL(SUM_QTY,0) SUM_QTY,
					ISNULL(PRICE,0) PRICE,
					ISNULL(SUM_QTY,0)* ISNULL(PRICE,0) SUM_QTY_TOTAL
				
				FROM
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY, PAID_GUBUN FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_IN_WHS_DATE,6) = #{planDate} AND (APPROVAL_CD = '001' OR APPROVAL_CD = '002' OR APPROVAL_CD = '009') GROUP BY MATRL_CD,LEFT(PRE_IN_WHS_DATE,6), PAID_GUBUN) A LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_OUT_WHS_QTY, PAID_GUBUN FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_IN_WHS_DATE,6) = #{planDate} AND (STATUS_CD = 'O' OR STATUS_CD = 'P') AND (APPROVAL_CD = '001' OR APPROVAL_CD = '002' OR APPROVAL_CD = '009') GROUP BY MATRL_CD,LEFT(PRE_IN_WHS_DATE,6), PAID_GUBUN)  B
					ON 1=1 AND A.MATRL_CD = B.MATRL_CD
					AND A.PAID_GUBUN = B.PAID_GUBUN
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, REMAIN_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),REMAIN_QTY) C
					ON 1=1 AND A.MATRL_CD = C.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) D
					ON 1=1 AND D.MATRL_CD = A.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, PRICE FROM TB_MATRL_PRICE A WHERE PLAN_DATE = #{planDate}) E
					ON 1=1 AND A.MATRL_CD = E.MATRL_CD
					AND A.PAID_GUBUN = '001',
					TB_MATRL_CODE_ADM F
					
					WHERE A.MATRL_CD = F.MATRL_CD
					AND LEFT(A.MATRL_CD,1) = 'A'
					AND F.USE_YN_CD = '001'
				) AA
				
				GROUP BY LEFT(AA.MATRL_CD,1)
			
			UNION ALL
			
			
			SELECT 
				'41' GUBUNJA,
				'F99999' MATRL_CD
				,'소계' MATRL_NM
				,'' PAID_GUBUN
				,'' THICKNESS	
				,SUM(REMAIN_QTY)  REMAIN_QTY,
				SUM(REMAIN_QTY_TOTAL) REMAIN_QTY_TOTAL,
				SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
				SUM(PRE_IN_WHS_QTY_TOTAL) PRE_IN_WHS_QTY_TOTAL,
				SUM(PRE_OUT_WHS_QTY) PRE_OUT_WHS_QTY,
				SUM(PRE_OUT_WHS_QTY_TOTAL) PRE_OUT_WHS_QTY_TOTAL,
				SUM(RESULT_QTY) RESULT_QTY,
				SUM(RESULT_QTY_TOTAL) RESULT_QTY_TOTAL,
				SUM(SUM_QTY) SUM_QTY,
				SUM(SUM_QTY_TOTAL) SUM_QTY_TOTAL,
				0 PRICE
			
			FROM
			
				(
				SELECT
					A.MATRL_CD,
					(F.THICKNESS + 'X' + F.DEPTH) THICKNESS,
					ISNULL(REMAIN_QTY,0) REMAIN_QTY,
					ISNULL(REMAIN_QTY,0)* ISNULL(PRICE,0) REMAIN_QTY_TOTAL,
					ISNULL(PRE_IN_WHS_QTY,0) PRE_IN_WHS_QTY,						
					0 PRE_IN_WHS_QTY_TOTAL,
					ISNULL(PRE_OUT_WHS_QTY,0) PRE_OUT_WHS_QTY,
					ISNULL(PRE_OUT_WHS_QTY,0)* ISNULL(PRICE,0) PRE_OUT_WHS_QTY_TOTAL,
					ISNULL(REMAIN_QTY,0) + ISNULL(SUM_QTY,0) + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) RESULT_QTY,
					(ISNULL(REMAIN_QTY,0) + ISNULL(SUM_QTY,0) + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0)) * ISNULL(PRICE,0) RESULT_QTY_TOTAL,
					ISNULL(SUM_QTY,0) SUM_QTY,
					ISNULL(PRICE,0) PRICE,
					ISNULL(SUM_QTY,0)* ISNULL(PRICE,0) SUM_QTY_TOTAL
				
				FROM
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY, PAID_GUBUN FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_IN_WHS_DATE,6) = #{planDate} AND (APPROVAL_CD = '001' OR APPROVAL_CD = '002' OR APPROVAL_CD = '009') GROUP BY MATRL_CD,LEFT(PRE_IN_WHS_DATE,6), PAID_GUBUN) A LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_OUT_WHS_QTY, PAID_GUBUN FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_IN_WHS_DATE,6) = #{planDate} AND (STATUS_CD = 'O' OR STATUS_CD = 'P') AND (APPROVAL_CD = '001' OR APPROVAL_CD = '002' OR APPROVAL_CD = '009')  GROUP BY MATRL_CD,LEFT(PRE_IN_WHS_DATE,6), PAID_GUBUN)  B
					ON 1=1 AND A.MATRL_CD = B.MATRL_CD
					AND A.PAID_GUBUN = B.PAID_GUBUN
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, REMAIN_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),REMAIN_QTY) C
					ON 1=1 AND A.MATRL_CD = C.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) D
					ON 1=1 AND D.MATRL_CD = A.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, PRICE FROM TB_MATRL_PRICE A WHERE PLAN_DATE = #{planDate}) E
					ON 1=1 AND A.MATRL_CD = E.MATRL_CD
					AND A.PAID_GUBUN = '001',
					TB_MATRL_CODE_ADM F
					
					WHERE A.MATRL_CD = F.MATRL_CD
					AND LEFT(A.MATRL_CD,1) = 'F'
					AND ROLL_GUBUN = '002'
					AND F.USE_YN_CD = '001'
				) AA
				
				GROUP BY LEFT(AA.MATRL_CD,1)

			UNION ALL

			SELECT 
				'31' GUBUNJA,
				'F99999' MATRL_CD
				,'소계' MATRL_NM
				,'' PAID_GUBUN
				,'' THICKNESS	
				,SUM(REMAIN_QTY) REMAIN_QTY,
				SUM(REMAIN_QTY_TOTAL) REMAIN_QTY_TOTAL,
				SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
				SUM(PRE_IN_WHS_QTY_TOTAL) PRE_IN_WHS_QTY_TOTAL,
				SUM(PRE_OUT_WHS_QTY) PRE_OUT_WHS_QTY,
				SUM(PRE_OUT_WHS_QTY_TOTAL) PRE_OUT_WHS_QTY_TOTAL,
				SUM(RESULT_QTY) RESULT_QTY,
				SUM(RESULT_QTY_TOTAL) RESULT_QTY_TOTAL,
				SUM(SUM_QTY) SUM_QTY,
				SUM(SUM_QTY_TOTAL) SUM_QTY_TOTAL,
				0 PRICE
			
			FROM
			
				(
				SELECT
					A.MATRL_CD,
					(F.THICKNESS + 'X' + F.DEPTH) THICKNESS,
					ISNULL(REMAIN_QTY,0) REMAIN_QTY,
					ISNULL(REMAIN_QTY,0)* ISNULL(PRICE,0) REMAIN_QTY_TOTAL,
					ISNULL(PRE_IN_WHS_QTY,0) PRE_IN_WHS_QTY,
					ISNULL(PRE_IN_WHS_QTY,0)* ISNULL(PRICE,0) PRE_IN_WHS_QTY_TOTAL,
					ISNULL(PRE_OUT_WHS_QTY,0) PRE_OUT_WHS_QTY,									
					0 PRE_OUT_WHS_QTY_TOTAL,
					ISNULL(REMAIN_QTY,0) + ISNULL(SUM_QTY,0) + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) RESULT_QTY,
					(ISNULL(REMAIN_QTY,0) + ISNULL(SUM_QTY,0) + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0)) * ISNULL(PRICE,0) RESULT_QTY_TOTAL,
					ISNULL(SUM_QTY,0) SUM_QTY,
					ISNULL(PRICE,0) PRICE,
					ISNULL(SUM_QTY,0)* ISNULL(PRICE,0) SUM_QTY_TOTAL
				
				FROM
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY, PAID_GUBUN FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_IN_WHS_DATE,6) = #{planDate} AND (APPROVAL_CD = '001' OR APPROVAL_CD = '002' OR APPROVAL_CD = '009') GROUP BY MATRL_CD,LEFT(PRE_IN_WHS_DATE,6), PAID_GUBUN) A LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_OUT_WHS_QTY, PAID_GUBUN FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_IN_WHS_DATE,6) = #{planDate} AND (STATUS_CD = 'O' OR STATUS_CD = 'P') AND (APPROVAL_CD = '001' OR APPROVAL_CD = '002' OR APPROVAL_CD = '009') GROUP BY MATRL_CD,LEFT(PRE_IN_WHS_DATE,6), PAID_GUBUN)  B
					ON 1=1 AND A.MATRL_CD = B.MATRL_CD
					AND A.PAID_GUBUN = B.PAID_GUBUN
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, REMAIN_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),REMAIN_QTY) C
					ON 1=1 AND A.MATRL_CD = C.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) D
					ON 1=1 AND D.MATRL_CD = A.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, PRICE FROM TB_MATRL_PRICE A WHERE PLAN_DATE = #{planDate}) E
					ON 1=1 AND A.MATRL_CD = E.MATRL_CD
					AND A.PAID_GUBUN = '001',
					TB_MATRL_CODE_ADM F
					
					WHERE A.MATRL_CD = F.MATRL_CD
					AND LEFT(A.MATRL_CD,1) = 'F'
					AND ROLL_GUBUN = '001'
					AND F.USE_YN_CD = '001'
				) AA
				
				GROUP BY LEFT(AA.MATRL_CD,1)
			
			ORDER BY GUBUNJA,MATRL_CD -->
		
			<![CDATA[	
				SELECT
				CASE 
				WHEN LEFT(F.MATRL_CD,1) = 'A' THEN '1'
				WHEN LEFT(F.MATRL_CD,1) = 'N' THEN '2'
				WHEN LEFT(F.MATRL_CD,1) = 'F' AND ROLL_GUBUN = '001' THEN '3'
				WHEN LEFT(F.MATRL_CD,1) = 'F' AND ROLL_GUBUN = '002' THEN '4'
				END
				GUBUNJA,
				F.MATRL_CD,
				F.MATRL_NM,			
				(F.THICKNESS + 'X' + F.DEPTH) THICKNESS,
				
				ISNULL(REMAIN_QTY,0)  REMAIN_QTY,
				(ISNULL(REMAIN_QTY,0)* ISNULL(PRICE,0)) REMAIN_QTY_TOTAL,	

				ISNULL(PRE_IN_WHS_QTY,0) PRE_IN_WHS_QTY,
				CASE 	
				WHEN LEFT(A.MATRL_CD,1) = 'F' AND ROLL_GUBUN = '002' THEN 0 
				ELSE ISNULL(PRE_IN_WHS_QTY,0)* ISNULL(PRICE,0)
				END
				PRE_IN_WHS_QTY_TOTAL,		
				ISNULL(PRE_OUT_WHS_QTY,0) +  ISNULL(G.SUM_QTY,0) - ISNULL(D.SUM_QTY,0)  PRE_OUT_WHS_QTY,
					CASE 	
				WHEN LEFT(A.MATRL_CD,1) = 'F' AND ROLL_GUBUN = '001' THEN 0 
				ELSE (ISNULL(PRE_OUT_WHS_QTY,0) +  ISNULL(G.SUM_QTY,0) - ISNULL(D.SUM_QTY,0))* ISNULL(PRICE,0)
				END
				PRE_OUT_WHS_QTY_TOTAL,
				ISNULL(REMAIN_QTY,0)  + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) - ISNULL(G.SUM_QTY,0) + ISNULL(D.SUM_QTY,0)   RESULT_QTY,
				(ISNULL(REMAIN_QTY,0) + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) - ISNULL(G.SUM_QTY,0) + ISNULL(D.SUM_QTY,0) ) * ISNULL(PRICE,0) RESULT_QTY_TOTAL,
				
				ISNULL(D.SUM_QTY,0) SUM_QTY,
				ISNULL(D.SUM_QTY,0)* ISNULL(PRICE,0) SUM_QTY_TOTAL,
				ISNULL(PRICE,0) PRICE
				
			FROM
				TB_MATRL_CODE_ADM F
				LEFT OUTER JOIN
				(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_IN_WHS_DATE,6) = #{planDate} AND APPROVAL_CD != '006' GROUP BY MATRL_CD,LEFT(PRE_IN_WHS_DATE,6)) A
				ON 1=1 AND F.MATRL_CD = A.MATRL_CD
				LEFT OUTER JOIN
				(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_OUT_QTY)) PRE_OUT_WHS_QTY FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_OUT_WHS_DATE,6) = #{planDate}  AND APPROVAL_CD != '006' GROUP BY MATRL_CD,LEFT(PRE_OUT_WHS_DATE,6))  B
				ON 1=1 AND F.MATRL_CD = B.MATRL_CD 
	
				LEFT OUTER JOIN
				
				(SELECT MATRL_CD, REMAIN_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),REMAIN_QTY) C
				ON 1=1 AND F.MATRL_CD = C.MATRL_CD
				
				LEFT OUTER JOIN
				(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) D
				ON 1=1 AND D.MATRL_CD = F.MATRL_CD
				
				LEFT OUTER JOIN
				(SELECT MATRL_CD, PRICE FROM TB_MATRL_PRICE A WHERE PLAN_DATE = #{planDate}) E
				ON 1=1 AND F.MATRL_CD = E.MATRL_CD

				LEFT OUTER JOIN
				(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = (SELECT CONVERT(VARCHAR(6), DATEADD(M, -1, #{planDate}+'01'), 112) ) GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) G
				ON 1=1 AND G.MATRL_CD = F.MATRL_CD

				WHERE F.USE_YN_CD = '001'
				AND F.DEFECT_CD != '003'
			
			UNION ALL

			
			SELECT 
				'21' GUBUNJA,
				'N99999' MATRL_CD
				,'소계' MATRL_NM
				,'' THICKNESS
				,SUM(REMAIN_QTY) REMAIN_QTY,
				SUM(REMAIN_QTY_TOTAL) REMAIN_QTY_TOTAL,
				SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
				SUM(PRE_IN_WHS_QTY_TOTAL) PRE_IN_WHS_QTY_TOTAL,
				SUM(PRE_OUT_WHS_QTY) PRE_OUT_WHS_QTY,
				SUM(PRE_OUT_WHS_QTY_TOTAL) PRE_OUT_WHS_QTY_TOTAL,
				SUM(RESULT_QTY) RESULT_QTY,
				SUM(RESULT_QTY_TOTAL) RESULT_QTY_TOTAL,
				SUM(SUM_QTY) SUM_QTY,
				SUM(SUM_QTY_TOTAL) SUM_QTY_TOTAL,
				0 PRICE
				
			FROM
			
				(
				SELECT
					F.MATRL_CD,
					(F.THICKNESS + 'X' + F.DEPTH) THICKNESS,
					ISNULL(REMAIN_QTY,0) REMAIN_QTY,
					ISNULL(REMAIN_QTY,0)* ISNULL(PRICE,0) REMAIN_QTY_TOTAL,
					ISNULL(PRE_IN_WHS_QTY,0) PRE_IN_WHS_QTY,
					ISNULL(PRE_IN_WHS_QTY,0)* ISNULL(PRICE,0) PRE_IN_WHS_QTY_TOTAL,
					(ISNULL(PRE_OUT_WHS_QTY,0) +  ISNULL(G.SUM_QTY,0) - ISNULL(D.SUM_QTY,0)) PRE_OUT_WHS_QTY,
					(ISNULL(PRE_OUT_WHS_QTY,0) +  ISNULL(G.SUM_QTY,0) - ISNULL(D.SUM_QTY,0)) * ISNULL(PRICE,0) PRE_OUT_WHS_QTY_TOTAL,
				    ISNULL(REMAIN_QTY,0)  + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) - ISNULL(G.SUM_QTY,0) + ISNULL(D.SUM_QTY,0)   RESULT_QTY,
					(ISNULL(REMAIN_QTY,0) + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) - ISNULL(G.SUM_QTY,0) + ISNULL(D.SUM_QTY,0) ) * ISNULL(PRICE,0) RESULT_QTY_TOTAL,
					ISNULL(D.SUM_QTY,0) SUM_QTY,
					ISNULL(PRICE,0) PRICE,
					ISNULL(D.SUM_QTY,0)* ISNULL(PRICE,0) SUM_QTY_TOTAL
				
				FROM
					TB_MATRL_CODE_ADM F
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_IN_WHS_DATE,6) = #{planDate} AND APPROVAL_CD != '006' GROUP BY MATRL_CD,LEFT(PRE_IN_WHS_DATE,6)) A 
					ON 1=1 AND A.MATRL_CD = F.MATRL_CD					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_OUT_QTY)) PRE_OUT_WHS_QTY FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_OUT_WHS_DATE,6) = #{planDate}  AND APPROVAL_CD != '006' GROUP BY MATRL_CD,LEFT(PRE_OUT_WHS_DATE,6))  B
					ON 1=1 AND F.MATRL_CD = B.MATRL_CD		
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, REMAIN_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),REMAIN_QTY) C
					ON 1=1 AND F.MATRL_CD = C.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) D
					ON 1=1 AND D.MATRL_CD = F.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, PRICE FROM TB_MATRL_PRICE A WHERE PLAN_DATE = #{planDate}) E
					ON 1=1 AND F.MATRL_CD = E.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = (SELECT CONVERT(VARCHAR(6), DATEADD(M, -1, #{planDate}+'01'), 112) ) GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) G
					ON 1=1 AND G.MATRL_CD = F.MATRL_CD
				
					
					
					WHERE LEFT(F.MATRL_CD,1) = 'N'
					AND F.USE_YN_CD = '001'
					AND F.DEFECT_CD != '003'
				) AA
				
				GROUP BY LEFT(AA.MATRL_CD,1)
			
			UNION ALL
			
			
			SELECT 
				'11' GUBUNJA,
				'A99999' MATRL_CD
				,'소계' MATRL_NM
				,'' THICKNESS
				,SUM(REMAIN_QTY) REMAIN_QTY,
				SUM(REMAIN_QTY_TOTAL) REMAIN_QTY_TOTAL,
				SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
				SUM(PRE_IN_WHS_QTY_TOTAL) PRE_IN_WHS_QTY_TOTAL,
				SUM(PRE_OUT_WHS_QTY) PRE_OUT_WHS_QTY,
				SUM(PRE_OUT_WHS_QTY_TOTAL) PRE_OUT_WHS_QTY_TOTAL,
				SUM(RESULT_QTY) RESULT_QTY,
				SUM(RESULT_QTY_TOTAL) RESULT_QTY_TOTAL,
				SUM(SUM_QTY) SUM_QTY,
				SUM(SUM_QTY_TOTAL) SUM_QTY_TOTAL,
				0 PRICE
			
			FROM
			
				(
					SELECT
					F.MATRL_CD,
					(F.THICKNESS + 'X' + F.DEPTH) THICKNESS,
					ISNULL(REMAIN_QTY,0) REMAIN_QTY,
					ISNULL(REMAIN_QTY,0)* ISNULL(PRICE,0) REMAIN_QTY_TOTAL,
					ISNULL(PRE_IN_WHS_QTY,0) PRE_IN_WHS_QTY,
					ISNULL(PRE_IN_WHS_QTY,0)* ISNULL(PRICE,0) PRE_IN_WHS_QTY_TOTAL,
					(ISNULL(PRE_OUT_WHS_QTY,0) +  ISNULL(G.SUM_QTY,0) - ISNULL(D.SUM_QTY,0)) PRE_OUT_WHS_QTY,
					(ISNULL(PRE_OUT_WHS_QTY,0) +  ISNULL(G.SUM_QTY,0) - ISNULL(D.SUM_QTY,0)) * ISNULL(PRICE,0) PRE_OUT_WHS_QTY_TOTAL,
					ISNULL(REMAIN_QTY,0)  + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) - ISNULL(G.SUM_QTY,0) + ISNULL(D.SUM_QTY,0)   RESULT_QTY,
					(ISNULL(REMAIN_QTY,0) + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) - ISNULL(G.SUM_QTY,0) + ISNULL(D.SUM_QTY,0) ) * ISNULL(PRICE,0) RESULT_QTY_TOTAL,
					ISNULL(D.SUM_QTY,0) SUM_QTY,
					ISNULL(PRICE,0) PRICE,
					ISNULL(D.SUM_QTY,0)* ISNULL(PRICE,0) SUM_QTY_TOTAL
				
				FROM
					TB_MATRL_CODE_ADM F
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_IN_WHS_DATE,6) = #{planDate} AND APPROVAL_CD != '006' GROUP BY MATRL_CD,LEFT(PRE_IN_WHS_DATE,6)) A 
					ON 1=1 AND A.MATRL_CD = F.MATRL_CD
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_OUT_QTY)) PRE_OUT_WHS_QTY FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_OUT_WHS_DATE,6) = #{planDate}  AND APPROVAL_CD != '006' GROUP BY MATRL_CD,LEFT(PRE_OUT_WHS_DATE,6))  B
					ON 1=1 AND F.MATRL_CD = B.MATRL_CD
				
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, REMAIN_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),REMAIN_QTY) C
					ON 1=1 AND F.MATRL_CD = C.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) D
					ON 1=1 AND D.MATRL_CD = F.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, PRICE FROM TB_MATRL_PRICE A WHERE PLAN_DATE = #{planDate}) E
					ON 1=1 AND F.MATRL_CD = E.MATRL_CD

					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = (SELECT CONVERT(VARCHAR(6), DATEADD(M, -1, #{planDate}+'01'), 112) ) GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) G
					ON 1=1 AND G.MATRL_CD = F.MATRL_CD
				

					
					WHERE LEFT(F.MATRL_CD,1) = 'A'
					AND F.USE_YN_CD = '001'
					AND F.DEFECT_CD != '003'
				) AA
				
				GROUP BY LEFT(AA.MATRL_CD,1)
			
			UNION ALL
			
			
			SELECT
				BB.GUBUNJA,
				BB.MATRL_CD,
				BB.MATRL_NM	,		 
				BB.THICKNESS	
				,BB.REMAIN_QTY,
				BB.REMAIN_QTY_TOTAL,
				BB.PRE_IN_WHS_QTY,
				BB.PRE_IN_WHS_QTY_TOTAL,
				BB.PRE_OUT_WHS_QTY + AA.PRE_OUT_WHS_QTY PRE_OUT_WHS_QTY,
				BB.PRE_OUT_WHS_QTY_TOTAL + AA.PRE_OUT_WHS_QTY_TOTAL PRE_OUT_WHS_QTY_TOTAL,
				BB.RESULT_QTY,
				BB.RESULT_QTY_TOTAL,
				BB.SUM_QTY,
				BB.SUM_QTY_TOTAL,
				0 PRICE
			FROM 

			(
			
			
			SELECT				
				'41' GUBUNJA,
				'F99999' MATRL_CD
				,'가공LOSS' MATRL_NM			 
				,'' THICKNESS	
				,0  REMAIN_QTY,
				0 REMAIN_QTY_TOTAL,
				0 PRE_IN_WHS_QTY,
				0 PRE_IN_WHS_QTY_TOTAL,
				BB.PRE_OUT_WHS_QTY - SUM(AA.PRE_IN_WHS_QTY) PRE_OUT_WHS_QTY,
				(BB.PRE_OUT_WHS_QTY - SUM(AA.PRE_IN_WHS_QTY))*PRICE PRE_OUT_WHS_QTY_TOTAL,
				0 RESULT_QTY,
				0 RESULT_QTY_TOTAL,
				0.0 SUM_QTY,
				0.0 SUM_QTY_TOTAL,
				PRICE

			FROM 				
				(
					SELECT A.MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
					FROM TB_IN_OUT_WHS_ADM A, TB_MATRL_CODE_ADM X
					WHERE LEFT(PRE_IN_WHS_DATE,6) = #{planDate} AND APPROVAL_CD != '006' 
					AND LEFT(A.MATRL_CD,1) = 'F' AND X.ROLL_GUBUN = '002' 
					AND X.MATRL_CD = A.MATRL_CD
					GROUP BY A.MATRL_CD,LEFT(PRE_IN_WHS_DATE,6)
				) AA			
				,
				(
					SELECT A.MATRL_CD, SUM(CONVERT(FLOAT,PRE_OUT_QTY)) PRE_OUT_WHS_QTY 
					FROM TB_IN_OUT_WHS_ADM A , TB_MATRL_CODE_ADM X
					WHERE LEFT(PRE_OUT_WHS_DATE,6) = #{planDate}  
					AND APPROVAL_CD != '006' 
					AND LEFT(A.MATRL_CD,1) = 'F' AND X.ROLL_GUBUN = '001' 
					AND X.MATRL_CD = A.MATRL_CD
					GROUP BY A.MATRL_CD,LEFT(PRE_OUT_WHS_DATE,6)
				)  BB
				,
				(SELECT MATRL_CD, PRICE FROM TB_MATRL_PRICE A WHERE PLAN_DATE = #{planDate}) EE

				WHERE BB.MATRL_CD = EE.MATRL_CD
				GROUP BY PRE_OUT_WHS_QTY,PRICE
				) AA

				,

				(

				SELECT 
				'42' GUBUNJA,
				'F99999' MATRL_CD
				,'소계' MATRL_NM			 
				,'' THICKNESS	
				,SUM(REMAIN_QTY)  REMAIN_QTY,
				SUM(REMAIN_QTY_TOTAL) REMAIN_QTY_TOTAL,
				SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
				SUM(PRE_IN_WHS_QTY_TOTAL) PRE_IN_WHS_QTY_TOTAL,
				SUM(PRE_OUT_WHS_QTY) PRE_OUT_WHS_QTY,
				SUM(PRE_OUT_WHS_QTY_TOTAL) PRE_OUT_WHS_QTY_TOTAL,
				SUM(RESULT_QTY) RESULT_QTY,
				SUM(RESULT_QTY_TOTAL) RESULT_QTY_TOTAL,
				SUM(SUM_QTY) SUM_QTY,
				SUM(SUM_QTY_TOTAL) SUM_QTY_TOTAL,
				0 PRICE
			
			FROM
			
				(
				SELECT
					F.MATRL_CD,
					(F.THICKNESS + 'X' + F.DEPTH) THICKNESS,
					ISNULL(REMAIN_QTY,0) REMAIN_QTY,
					ISNULL(REMAIN_QTY,0)* ISNULL(PRICE,0) REMAIN_QTY_TOTAL,
					ISNULL(PRE_IN_WHS_QTY,0) PRE_IN_WHS_QTY,						
					0 PRE_IN_WHS_QTY_TOTAL,
					(ISNULL(PRE_OUT_WHS_QTY,0) +  ISNULL(G.SUM_QTY,0) - ISNULL(D.SUM_QTY,0)) PRE_OUT_WHS_QTY,
					(ISNULL(PRE_OUT_WHS_QTY,0) +  ISNULL(G.SUM_QTY,0) - ISNULL(D.SUM_QTY,0))* ISNULL(PRICE,0) PRE_OUT_WHS_QTY_TOTAL,
					ISNULL(REMAIN_QTY,0)  + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) - ISNULL(G.SUM_QTY,0) + ISNULL(D.SUM_QTY,0)   RESULT_QTY,
					(ISNULL(REMAIN_QTY,0) + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) - ISNULL(G.SUM_QTY,0) + ISNULL(D.SUM_QTY,0) ) * ISNULL(PRICE,0) RESULT_QTY_TOTAL,
					ISNULL(D.SUM_QTY,0) SUM_QTY,
					ISNULL(PRICE,0) PRICE,
					ISNULL(D.SUM_QTY,0)* ISNULL(PRICE,0) SUM_QTY_TOTAL
				
				FROM
					TB_MATRL_CODE_ADM F
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_IN_WHS_DATE,6) = #{planDate} AND APPROVAL_CD != '006' GROUP BY MATRL_CD,LEFT(PRE_IN_WHS_DATE,6)) A 
					ON 1=1 AND A.MATRL_CD = F.MATRL_CD
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_OUT_QTY)) PRE_OUT_WHS_QTY FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_OUT_WHS_DATE,6) = #{planDate}  AND APPROVAL_CD != '006' GROUP BY MATRL_CD,LEFT(PRE_OUT_WHS_DATE,6))  B
					ON 1=1 AND F.MATRL_CD = B.MATRL_CD
				
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, REMAIN_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),REMAIN_QTY) C
					ON 1=1 AND F.MATRL_CD = C.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) D
					ON 1=1 AND D.MATRL_CD = F.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, PRICE FROM TB_MATRL_PRICE A WHERE PLAN_DATE = #{planDate}) E
					ON 1=1 AND F.MATRL_CD = E.MATRL_CD

					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = (SELECT CONVERT(VARCHAR(6), DATEADD(M, -1, #{planDate}+'01'), 112) ) GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) G
					ON 1=1 AND G.MATRL_CD = F.MATRL_CD
				
					
					
					WHERE LEFT(F.MATRL_CD,1) = 'F'
					AND ROLL_GUBUN = '002'
					AND F.USE_YN_CD = '001'
					AND F.DEFECT_CD != '003'
				) AA
				
				GROUP BY LEFT(AA.MATRL_CD,1)

				) BB

				UNION ALL

							SELECT 
				'31' GUBUNJA,
				'F99999' MATRL_CD
				,'소계' MATRL_NM				
				,'' THICKNESS	
				,SUM(REMAIN_QTY) REMAIN_QTY,
				SUM(REMAIN_QTY_TOTAL) REMAIN_QTY_TOTAL,
				SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
				SUM(PRE_IN_WHS_QTY_TOTAL) PRE_IN_WHS_QTY_TOTAL,
				SUM(PRE_OUT_WHS_QTY) PRE_OUT_WHS_QTY,
				SUM(PRE_OUT_WHS_QTY_TOTAL) PRE_OUT_WHS_QTY_TOTAL,
				SUM(RESULT_QTY) RESULT_QTY,
				SUM(RESULT_QTY_TOTAL) RESULT_QTY_TOTAL,
				SUM(SUM_QTY) SUM_QTY,
				SUM(SUM_QTY_TOTAL) SUM_QTY_TOTAL,
				0 PRICE
			
			FROM
			
				(
				SELECT
					F.MATRL_CD,
					(F.THICKNESS + 'X' + F.DEPTH) THICKNESS,
					ISNULL(REMAIN_QTY,0) REMAIN_QTY,
					ISNULL(REMAIN_QTY,0)* ISNULL(PRICE,0) REMAIN_QTY_TOTAL,
					ISNULL(PRE_IN_WHS_QTY,0) PRE_IN_WHS_QTY,
					ISNULL(PRE_IN_WHS_QTY,0)* ISNULL(PRICE,0) PRE_IN_WHS_QTY_TOTAL,
					(ISNULL(PRE_OUT_WHS_QTY,0) +  ISNULL(G.SUM_QTY,0) - ISNULL(D.SUM_QTY,0)) PRE_OUT_WHS_QTY,									
					0 PRE_OUT_WHS_QTY_TOTAL,
					ISNULL(REMAIN_QTY,0)  + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) - ISNULL(G.SUM_QTY,0) + ISNULL(D.SUM_QTY,0)   RESULT_QTY,
					(ISNULL(REMAIN_QTY,0) + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) - ISNULL(G.SUM_QTY,0) + ISNULL(D.SUM_QTY,0) ) * ISNULL(PRICE,0) RESULT_QTY_TOTAL,
					ISNULL(D.SUM_QTY,0) SUM_QTY,
					ISNULL(PRICE,0) PRICE,
					ISNULL(D.SUM_QTY,0)* ISNULL(PRICE,0) SUM_QTY_TOTAL
				
				FROM
						TB_MATRL_CODE_ADM F
						LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_IN_WHS_DATE,6) = #{planDate} AND APPROVAL_CD != '006' GROUP BY MATRL_CD,LEFT(PRE_IN_WHS_DATE,6)) A 
					ON 1=1 AND A.MATRL_CD = F.MATRL_CD
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_OUT_QTY)) PRE_OUT_WHS_QTY FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_OUT_WHS_DATE,6) = #{planDate}  AND APPROVAL_CD != '006' GROUP BY MATRL_CD,LEFT(PRE_OUT_WHS_DATE,6))  B
					ON 1=1 AND F.MATRL_CD = B.MATRL_CD 				
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, REMAIN_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),REMAIN_QTY) C
					ON 1=1 AND F.MATRL_CD = C.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) D
					ON 1=1 AND D.MATRL_CD = F.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, PRICE FROM TB_MATRL_PRICE A WHERE PLAN_DATE = #{planDate}) E
					ON 1=1 AND F.MATRL_CD = E.MATRL_CD

					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = (SELECT CONVERT(VARCHAR(6), DATEADD(M, -1, #{planDate}+'01'), 112) ) GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) G
					ON 1=1 AND G.MATRL_CD = F.MATRL_CD
				
				
					
					WHERE 
					 LEFT(F.MATRL_CD,1) = 'F'
					AND ROLL_GUBUN = '001'
					AND F.USE_YN_CD = '001'
					AND F.DEFECT_CD != '003'
				) AA
				
				GROUP BY LEFT(AA.MATRL_CD,1)
				
				UNION ALL
				
				SELECT				
				'41' GUBUNJA,
				'F99999' MATRL_CD
				,'가공LOSS' MATRL_NM			 
				,'' THICKNESS	
				,0  REMAIN_QTY,
				0 REMAIN_QTY_TOTAL,
				0 PRE_IN_WHS_QTY,
				0 PRE_IN_WHS_QTY_TOTAL,
				BB.PRE_OUT_WHS_QTY - SUM(AA.PRE_IN_WHS_QTY) PRE_OUT_WHS_QTY,
				(BB.PRE_OUT_WHS_QTY - SUM(AA.PRE_IN_WHS_QTY))*PRICE PRE_OUT_WHS_QTY_TOTAL,
				0 RESULT_QTY,
				0 RESULT_QTY_TOTAL,
				0.0 SUM_QTY,
				0.0 SUM_QTY_TOTAL,
				PRICE

			FROM 				
				(
					SELECT A.MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
					FROM TB_IN_OUT_WHS_ADM A, TB_MATRL_CODE_ADM X
					WHERE LEFT(PRE_IN_WHS_DATE,6) = #{planDate} AND APPROVAL_CD != '006' 
					AND LEFT(A.MATRL_CD,1) = 'F' AND X.ROLL_GUBUN = '002' 
					AND X.MATRL_CD = A.MATRL_CD
					GROUP BY A.MATRL_CD,LEFT(PRE_IN_WHS_DATE,6)
				) AA			
				,
				(
					SELECT A.MATRL_CD, SUM(CONVERT(FLOAT,PRE_OUT_QTY)) PRE_OUT_WHS_QTY 
					FROM TB_IN_OUT_WHS_ADM A , TB_MATRL_CODE_ADM X
					WHERE LEFT(PRE_OUT_WHS_DATE,6) = #{planDate}  
					AND APPROVAL_CD != '006' 
					AND LEFT(A.MATRL_CD,1) = 'F' AND X.ROLL_GUBUN = '001' 
					AND X.MATRL_CD = A.MATRL_CD
					GROUP BY A.MATRL_CD,LEFT(PRE_OUT_WHS_DATE,6)
				)  BB
				,
				(SELECT MATRL_CD, PRICE FROM TB_MATRL_PRICE A WHERE PLAN_DATE = #{planDate}) EE

				WHERE BB.MATRL_CD = EE.MATRL_CD
			

				GROUP BY PRE_OUT_WHS_QTY,PRICE

			
			ORDER BY GUBUNJA,MATRL_CD



			]]>
	</select>
	
	<!-- 
	
	<select id="listTab320220708" resultType="HashMap" parameterType="mes.domain.br.RawMatrlSupplyVo">
		
			SET ANSI_WARNINGS OFF
			SET ARITHIGNORE ON
			SET ARITHABORT OFF
			
			SELECT * FROM  (SELECT * FROM(
						SELECT			
							'1' GUBUNJA
							,'입고계획' GUBUNJA2
							,A.MATRL_CD
							,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
							,0 SUM_REMAIN
							,A.PLAN_DATE				
							,CNT				  
						FROM TB_RAW_MATRL_SUPPLY A 
						  WHERE 1=1	
						  ANd PLAN_DATE >= #{startDate}
						  ANd PLAN_DATE <= #{endDate}
						  AND A.MATRL_CD in (${codeList})
					) AS RESULT
					PIVOT  (SUM(CNT) FOR PLAN_DATE IN (${planDateList})) AS PIVOT_RESULT) B
			
					UNION ALL
			

						select * from  (SELECT * FROM(
						SELECT
								'2' GUBUNJA
								,'가입고량' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_IN_WHS_QTY) PRE_IN_WHS_QTY
							   ,A.MATRL_CD
							 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
							 ,0 SUM_REMAIN
						      ,C.PRE_IN_WHS_DATE	
								 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								 WHERE  PLAN_DATE >= #{startDate}
						    AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6) ) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD
							AND LEFT(PRE_IN_WHS_DATE,6) = LEFT(PLAN_DATE,6)						  	
							AND (C.APPROVAL_CD = '001' OR C.APPROVAL_CD = '002' )
							AND A.MATRL_CD in (${codeList})	
							
					) AS RESULT
					PIVOT  (SUM( PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
					WHERE MATRL_CD in (${codeList})

					UNION ALL

					SELECT * FROM  (SELECT * FROM(
						SELECT
								'3' GUBUNJA
								,'롤수(가입고량)' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_IN_WHS_QTY) PRE_IN_WHS_QTY
							   ,A.MATRL_CD
							  ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
							  ,0 SUM_REMAIN
						      ,C.PRE_IN_WHS_DATE
						 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
						 WHERE PLAN_DATE >= #{startDate}
						    AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD						  							
							AND A.MATRL_CD = C.MATRL_CD
							AND LEFT(PRE_IN_WHS_DATE,6) = LEFT(PLAN_DATE,6)		
							AND (C.APPROVAL_CD = '001' OR C.APPROVAL_CD = '002' )
							 and A.MATRL_CD in (${codeList})	
							
					) AS RESULT
					PIVOT  (COUNT( PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
					WHERE MATRL_CD in (${codeList})

			UNION ALL
			
			SELECT * FROM 
				(SELECT * FROM (
					SELECT
						'4' GUBUNJA
						,'입고량(불량)' GUBUNJA2
						,CONVERT(FLOAT,C.PRE_IN_WHS_QTY) PRE_IN_WHS_QTY
						,A.MATRL_CD
						,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						,0 SUM_REMAIN
						,C.PRE_IN_WHS_DATE
						 			
					FROM (SELECT A.MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  
						FROM TB_MATRL_CODE_ADM A LEFT OUTER JOIN TB_RAW_MATRL_SUPPLY X ON A.MATRL_CD = X.MATRL_CD 
						WHERE PLAN_DATE >= #{startDate}
						    AND PLAN_DATE <= #{endDate}
						AND A.MATRL_CD IN (${codeList}) 
						GROUP BY A.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
					LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
					ON A.MATRL_CD = C.MATRL_CD
					AND LEFT(PRE_IN_WHS_DATE,6) = LEFT(PLAN_DATE,6)	
					AND C.APPROVAL_CD != '001'
					AND C.APPROVAL_CD != '002'
					AND C.MATRL_CD IN (${codeList})
			) AS RESULT
			PIVOT  (SUM(PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
		
					
					
			
			UNION ALL
			
			
			SELECT * FROM 
				(SELECT * FROM (
					SELECT
						'5' GUBUNJA
						,'롤수(불량)' GUBUNJA2
						,CONVERT(FLOAT,C.PRE_IN_WHS_QTY) PRE_IN_WHS_QTY
						,A.MATRL_CD
						,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						,0 SUM_REMAIN
						,C.PRE_IN_WHS_DATE
					FROM (SELECT A.MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  
						FROM TB_MATRL_CODE_ADM A LEFT OUTER JOIN TB_RAW_MATRL_SUPPLY X ON A.MATRL_CD = X.MATRL_CD 
						WHERE PLAN_DATE >= #{startDate}
						AND PLAN_DATE <= #{endDate}
						AND A.MATRL_CD IN (${codeList})
						GROUP BY A.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
					LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
					ON A.MATRL_CD = C.MATRL_CD
					AND LEFT(PRE_IN_WHS_DATE,6) = LEFT(PLAN_DATE,6)	
					AND C.APPROVAL_CD != '001'
					AND C.APPROVAL_CD != '002'
					AND C.MATRL_CD IN (${codeList})
			) AS RESULT
			PIVOT  (COUNT(PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
						
			
			
			

				UNION ALL
			  
			
				select * from  
							
							(							
							SELECT * FROM (

								SELECT
									'6' GUBUNJA
									,'MP 생산 불출량' GUBUNJA2
									,CONVERT(FLOAT,C.PRE_OUT_QTY) PRE_OUT_QTY
								   ,A.MATRL_CD
								 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
								 ,-SUM_QTY AS SUM_REMAIN
								  ,C.PRE_OUT_WHS_DATE	
									 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
									 WHERE PLAN_DATE >= #{startDate}
									AND PLAN_DATE <= #{endDate}
								GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A
							 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
							 ON A.MATRL_CD = C.MATRL_CD
								AND LEFT(PRE_OUT_WHS_DATE,6) = LEFT(PLAN_DATE,6)	
								AND (C.APPROVAL_CD = '001' OR C.APPROVAL_CD = '002' )
								AND A.MATRL_CD in (${codeList})

							  ,	 (SELECT MATRL_CD,SUM_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
							  WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
								GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),SUM_QTY) BB
							  WHERE 1=1						
								AND A.MATRL_CD = BB.MATRL_CD

							
					) AS RESULT
					PIVOT  (SUM( PRE_OUT_QTY)  FOR PRE_OUT_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
					WHERE MATRL_CD in (${codeList})


						  UNION ALL
						
						 	select * from  (SELECT * FROM(
						SELECT
								'7' GUBUNJA
								,'롤수(불출량)' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_OUT_QTY) PRE_OUT_QTY
							   ,A.MATRL_CD
							 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
							 , -ROLL_SUM AS SUM_REMAIN
						      ,C.PRE_OUT_WHS_DATE	
								 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								 WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD						 
							AND LEFT(PRE_OUT_WHS_DATE,6) = LEFT(PLAN_DATE,6)	
							AND (C.APPROVAL_CD = '001' OR C.APPROVAL_CD = '002' )
							AND A.MATRL_CD in (${codeList})	
						  , (SELECT MATRL_CD,ROLL_SUM,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
						  WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),ROLL_SUM) BB
						  WHERE 1=1						
							
							AND A.MATRL_CD = BB.MATRL_CD
							
					) AS RESULT
					PIVOT  (COUNT( PRE_OUT_QTY)  FOR PRE_OUT_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
					WHERE MATRL_CD in (${codeList})


			UNION ALL
			

			SELECT 
				'8'GUBUNJA
				,'MP 사용일수'GUBUNJA2
				  ,AA.MATRL_CD
				  ,BB.MATRL_NM				 
				  ,0 SUM_REMAIN
				,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '01'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) ,0) / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '02'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '03'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '04'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '05'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '06'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '07'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '08'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '09'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '10'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '11'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '12'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '13'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '14'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '15'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '16'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '17'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '18'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) ,0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '19'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '20'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '21'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '22'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '23'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '24'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '25'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '26'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '27'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '28'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '29'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '30'

,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0) - ISNULL(BB.[31], 0) + ISNULL(AA.[31] ,0),0)  / (ISNULL(ISNULL(BB.[01], 0)+ ISNULL(BB.[02], 0)
				+ ISNULL(BB.[03], 0) + ISNULL(BB.[04], 0)  + ISNULL(BB.[05], 0) 
				+ ISNULL(BB.[06], 0) + ISNULL(BB.[07], 0)  + ISNULL(BB.[08], 0) 
				+ ISNULL(BB.[09], 0) + ISNULL(BB.[10], 0)  + ISNULL(BB.[11], 0) 
				+ ISNULL(BB.[12], 0) + ISNULL(BB.[13], 0)  + ISNULL(BB.[14], 0) 
				+ ISNULL(BB.[15], 0) + ISNULL(BB.[16], 0)  + ISNULL(BB.[17], 0) 
				+ ISNULL(BB.[18], 0) + ISNULL(BB.[19], 0)  + ISNULL(BB.[20], 0) 
				+ ISNULL(BB.[21], 0) + ISNULL(BB.[22], 0)  + ISNULL(BB.[23], 0) 
				+ ISNULL(BB.[24], 0) + ISNULL(BB.[25], 0)  + ISNULL(BB.[26], 0) 
				+ ISNULL(BB.[27], 0) + ISNULL(BB.[28], 0)  + ISNULL(BB.[29], 0) 
				+ ISNULL(BB.[30], 0) + ISNULL(BB.[31], 0)  - DD.SUM_QTY ,0) / RIGHT(EOMONTH(#{startDate}),2) ) AS '31'
			   FROM 	(
			   
			   SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
			   
			   select * from  (SELECT * FROM(
						SELECT
								'3' GUBUNJA
								,'롤수(가입고량)' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_IN_WHS_QTY) PRE_IN_WHS_QTY
							   ,A.MATRL_CD
							  ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_IN_WHS_DATE
						 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
						 WHERE PLAN_DATE >= #{startDate}
							AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD
						  	AND LEFT(PRE_IN_WHS_DATE,6) = LEFT(PLAN_DATE,6)														
							AND (C.APPROVAL_CD = '001' OR C.APPROVAL_CD = '002' )
							 and A.MATRL_CD in (${codeList})	
							
					) AS RESULT
					PIVOT  (SUM( PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
			 ) AA,
			   
			 	
				(		 	
				 SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
				
				
				select * from  (SELECT * FROM(
						SELECT
								'6' GUBUNJA
								,'MP 생산 불출량' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_OUT_QTY) PRE_OUT_QTY
							   ,A.MATRL_CD
							 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_OUT_WHS_DATE	
								 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD
						  AND LEFT(PRE_OUT_WHS_DATE,6) = LEFT(PLAN_DATE,6)		
							AND (C.APPROVAL_CD = '001' OR C.APPROVAL_CD = '002' )
						  WHERE 1=1						
							
							 and A.MATRL_CD in (${codeList})	
							
					) AS RESULT
					PIVOT  (SUM( PRE_OUT_QTY)  FOR PRE_OUT_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B) BB,


									   (SELECT MATRL_CD,REMAIN_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
									   WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),REMAIN_QTY) CC,

							 (SELECT MATRL_CD,SUM_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
							 WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),SUM_QTY) DD


				WHERE AA.MATRL_CD = BB.MATRL_CD
				AND AA.MATRL_CD = CC.MATRL_CD
				AND AA.MATRL_CD = DD.MATRL_CD
			
			
			   UNION ALL
			
			   
				SELECT 
					'9'GUBUNJA
					,'MP재고량'GUBUNJA2
				  ,AA.MATRL_CD
				  ,BB.MATRL_NM				
				  ,CONVERT(VARCHAR,CC.REMAIN_QTY)  AS SUM_REMAIN
				,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0),0)  AS '01'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) ,0)  AS '02'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0),0)  AS '03'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0),0)  AS '04'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0),0)  AS '05'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) ,0)  AS '06'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) ,0)  AS '07'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0) ,0)  AS '08'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) ,0)  AS '09'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) ,0)  AS '10'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0) ,0)  AS '11'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) ,0)  AS '12'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) ,0)  AS '13'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0) ,0)  AS '14'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) ,0)  AS '15'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) ,0)  AS '16'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0) ,0)  AS '17'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) ,0)  AS '18'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) ,0)  AS '19'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0),0)  AS '20'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0),0)  AS '21'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0),0)  AS '22'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0),0)  AS '23'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0),0)  AS '24'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0),0)  AS '25'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0),0)  AS '26'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0),0)  AS '27'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0),0)  AS '28'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0),0)  AS '29'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0),0)  AS '30'
,ISNULL(CC.REMAIN_QTY - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0) - ISNULL(BB.[31], 0) + ISNULL(AA.[31] ,0),0)  AS '31'
			   FROM 	(
			   
			   SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
			   
			   select * from  (SELECT * FROM(
						SELECT
								'3' GUBUNJA
								,'롤수(가입고량)' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_IN_WHS_QTY) PRE_IN_WHS_QTY
							   ,A.MATRL_CD
							  ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_IN_WHS_DATE
						 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
						 WHERE PLAN_DATE >= #{startDate}
							AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD						  							
							AND LEFT(PRE_IN_WHS_DATE,6) = LEFT(PLAN_DATE,6)		
							AND (C.APPROVAL_CD = '001' OR C.APPROVAL_CD = '002' )
							 and A.MATRL_CD in (${codeList})	
							
					) AS RESULT
					PIVOT  (SUM( PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
			 ) AA,
			   
			 	
				(		 	
				 SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
				
				
				select * from  (SELECT * FROM(
						SELECT
								'6' GUBUNJA
								,'MP 생산 불출량' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_OUT_QTY) PRE_OUT_QTY
							   ,A.MATRL_CD
							 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_OUT_WHS_DATE	
								 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								 WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD
						 					
						AND A.MATRL_CD = C.MATRL_CD
						AND LEFT(PRE_OUT_WHS_DATE,6) = LEFT(PLAN_DATE,6)		
						AND (C.APPROVAL_CD = '001' OR C.APPROVAL_CD = '002' )
						and A.MATRL_CD in (${codeList})	
							
					) AS RESULT
					PIVOT  (SUM( PRE_OUT_QTY)  FOR PRE_OUT_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B) BB,


									   (SELECT MATRL_CD,REMAIN_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
									   WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),REMAIN_QTY) CC,

							(SELECT MATRL_CD,SUM_QTY,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
							WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),SUM_QTY) DD

				WHERE AA.MATRL_CD = BB.MATRL_CD
				AND AA.MATRL_CD = CC.MATRL_CD
				AND AA.MATRL_CD = DD.MATRL_CD
				AND AA.MATRL_CD in (${codeList})

			
			   UNION ALL
			
			   
				SELECT 
				'91'GUBUNJA
				,'롤수(재고)'GUBUNJA2
				  ,AA.MATRL_CD
				  ,BB.MATRL_NM
				  ,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0) - ISNULL(BB.[31], 0) + ISNULL(AA.[31] ,0),0) + ROLL_SUM AS SUM_REMAIN
				,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0),0)  AS '01'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) ,0)  AS '02'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0),0)  AS '03'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0),0)  AS '04'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0),0)  AS '05'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) ,0)  AS '06'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) ,0)  AS '07'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0) ,0)  AS '08'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) ,0)  AS '09'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) ,0)  AS '10'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0) ,0)  AS '11'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) ,0)  AS '12'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) ,0)  AS '13'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0) ,0)  AS '14'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) ,0)  AS '15'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) ,0)  AS '16'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0) ,0)  AS '17'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) ,0)  AS '18'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) ,0)  AS '19'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0),0)  AS '20'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0),0)  AS '21'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0),0)  AS '22'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0),0)  AS '23'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0),0)  AS '24'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0),0)  AS '25'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0),0)  AS '26'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0),0)  AS '27'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0),0)  AS '28'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0),0)  AS '29'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0),0)  AS '30'
,ISNULL(CC.ROLL_REMAIN - ISNULL(BB.[01], 0) + ISNULL(AA.[01], 0) - ISNULL(BB.[02], 0) + ISNULL(AA.[02], 0) 
- ISNULL(BB.[03], 0) + ISNULL(AA.[03], 0) - ISNULL(BB.[04], 0) + ISNULL(AA.[04], 0) - ISNULL(BB.[05], 0) + ISNULL(AA.[05], 0)
- ISNULL(BB.[06], 0) + ISNULL(AA.[06], 0) - ISNULL(BB.[07], 0) + ISNULL(AA.[07], 0) - ISNULL(BB.[08], 0) + ISNULL(AA.[08], 0)
- ISNULL(BB.[09], 0) + ISNULL(AA.[09], 0) - ISNULL(BB.[10], 0) + ISNULL(AA.[10], 0) - ISNULL(BB.[11], 0) + ISNULL(AA.[11], 0)
- ISNULL(BB.[12], 0) + ISNULL(AA.[12], 0) - ISNULL(BB.[13], 0) + ISNULL(AA.[13], 0) - ISNULL(BB.[14], 0) + ISNULL(AA.[14], 0)
- ISNULL(BB.[15], 0) + ISNULL(AA.[15], 0) - ISNULL(BB.[16], 0) + ISNULL(AA.[16], 0) - ISNULL(BB.[17], 0) + ISNULL(AA.[17], 0)
- ISNULL(BB.[18], 0) + ISNULL(AA.[18], 0) - ISNULL(BB.[19], 0) + ISNULL(AA.[19] ,0) - ISNULL(BB.[20], 0) + ISNULL(AA.[20] ,0)
- ISNULL(BB.[21], 0) + ISNULL(AA.[21] ,0) - ISNULL(BB.[22], 0) + ISNULL(AA.[22] ,0) - ISNULL(BB.[23], 0) + ISNULL(AA.[23] ,0)
- ISNULL(BB.[24], 0) + ISNULL(AA.[24] ,0) - ISNULL(BB.[25], 0) + ISNULL(AA.[25] ,0) - ISNULL(BB.[26], 0) + ISNULL(AA.[26] ,0)
- ISNULL(BB.[27], 0) + ISNULL(AA.[27] ,0) - ISNULL(BB.[28], 0) + ISNULL(AA.[28] ,0) - ISNULL(BB.[29], 0) + ISNULL(AA.[29] ,0)
- ISNULL(BB.[30], 0) + ISNULL(AA.[30] ,0) - ISNULL(BB.[31], 0) + ISNULL(AA.[31] ,0),0)  AS '31'
			   FROM 	(
			   
			   SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
			   
			   select * from  (SELECT * FROM(
						SELECT
								'3' GUBUNJA
								,'롤수(
								)' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_IN_WHS_QTY) PRE_IN_WHS_QTY
							   ,A.MATRL_CD
							  ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_IN_WHS_DATE
						 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
						 WHERE PLAN_DATE >= #{startDate}
							AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD						  							
							AND LEFT(PRE_IN_WHS_DATE,6) = LEFT(PLAN_DATE,6)		
							AND (C.APPROVAL_CD = '001' OR C.APPROVAL_CD = '002' )
							 and A.MATRL_CD in (${codeList})	
							
					) AS RESULT
					PIVOT  (COUNT( PRE_IN_WHS_QTY)  FOR PRE_IN_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B
			 ) AA,
			   
			 	
				(		 	
				 SELECT '3' GUBUNJA
					,'롤수(가입고량)' GUBUNJA2
					, 'trash' MATRL_CD
					, '' MATRL_NM
					,  '' AS '01',  '' AS '02',  '' AS '03',  '' AS '04', '' AS '05', '' AS '06', '' AS '07', '' AS '08', '' AS '09', '' AS '10'
					,  '' AS '11',  '' AS '12',  '' AS '13',  '' AS '14', '' AS '15', '' AS '16', '' AS '17', '' AS '18', '' AS '19', '' AS '20'
					,  '' AS '21',  '' AS '22',  '' AS '23',  '' AS '24', '' AS '25', '' AS '26', '' AS '27', '' AS '28', '' AS '29', '' AS '30'
					,  '' AS '31'  				

				UNION ALL	
				
				
				select * from  (SELECT * FROM(
						SELECT
								'6' GUBUNJA
								,'MP 생산 불출량' GUBUNJA2
								,CONVERT(FLOAT,C.PRE_OUT_QTY) PRE_OUT_QTY
							   ,A.MATRL_CD
							 ,(SELECT MATRL_NM FROM TB_MATRL_CODE_ADM WHERE A.MATRL_CD = MATRL_CD) MATRL_NM
						      ,C.PRE_OUT_WHS_DATE	
								 FROM (SELECT MATRL_CD,SUM(CNT) CNT,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
								 WHERE PLAN_DATE >= #{startDate}
								AND PLAN_DATE <= #{endDate}
							GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6)) A 
						 LEFT OUTER JOIN TB_IN_OUT_WHS_ADM C
						  ON A.MATRL_CD = C.MATRL_CD
						  AND LEFT(PRE_OUT_WHS_DATE,6) = LEFT(PLAN_DATE,6)		
							AND (C.APPROVAL_CD = '001' OR C.APPROVAL_CD = '002' )
							 and A.MATRL_CD in (${codeList})	
							
					) AS RESULT
					PIVOT  (COUNT( PRE_OUT_QTY)  FOR PRE_OUT_WHS_DATE IN (${planDateList})) AS PIVOT_RESULT) B) BB,


				(SELECT MATRL_CD,ROLL_REMAIN,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
				WHERE PLAN_DATE >= #{startDate}
				AND PLAN_DATE <= #{endDate}
				GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),ROLL_REMAIN) CC
				,
				(SELECT MATRL_CD,ROLL_SUM,LEFT(X.PLAN_DATE,6) PLAN_DATE  FROM TB_RAW_MATRL_SUPPLY X 
				WHERE PLAN_DATE >= #{startDate}
				AND PLAN_DATE <= #{endDate}
				GROUP BY X.MATRL_CD,LEFT(X.PLAN_DATE,6),ROLL_SUM) DD

				WHERE AA.MATRL_CD = BB.MATRL_CD
				AND AA.MATRL_CD = CC.MATRL_CD
				AND AA.MATRL_CD = DD.MATRL_CD


				AND AA.MATRL_CD IN (${codeList})
				AND BB.MATRL_CD IN (${codeList})
				AND CC.MATRL_CD IN (${codeList})
				AND DD.MATRL_CD IN (${codeList})
				order by matrl_CD,GUBUNJA asc
				 
	</select>
	-->
	
	<!-- 자재 실적 -->
	<select id="performanceMatrl" resultMap="RawMatrlSupplyVo" >
	
		<![CDATA[			
			SET ANSI_WARNINGS OFF
			SET ARITHIGNORE ON
			SET ARITHABORT OFF			

			SELECT * 
			FROM
			(
			SELECT 			
					'0' GUBUN
					,'' GUBUN_NM
					,'' MATRL_CD
					,'' MATRL_NM
					,0.0 COUNT_SUM
					,0.0 COUNT1
					,0.0 COUNT2
					,0.0 COUNT3
					,0.0 COUNT4
					,0.0 COUNT5
					,0.0 COUNT6
					,0.0 COUNT7
					,0.0 COUNT8
					,0.0 COUNT9
					,0.0 COUNT10
					,0.0 COUNT11
					,0.0 COUNT12	
			
			UNION ALL
			
			SELECT * 
			FROM (
				SELECT 
					'1' GUBUN
					,'입고계획' GUBUN_NM
					,B.MATRL_CD
					,MATRL_NM
					, ( SELECT  SUM(CNT) CNT		
						FROM TB_RAW_MATRL_SUPPLY X
						WHERE  X.MATRL_CD = B.MATRL_CD
						AND LEFT(PLAN_DATE,4) = #{planDate}
					) TOTAL_CNT
					, SUM(CNT) CNT
					, LEFT(PLAN_DATE,6) PLAN_DATE
				FROM TB_MATRL_CODE_ADM B 
				LEFT OUTER JOIN 
				TB_RAW_MATRL_SUPPLY A
				ON 1=1
				AND A.MATRL_CD = B.MATRL_CD
				AND LEFT(PLAN_DATE,4) = #{planDate}
				WHERE  1=1
					AND USE_YN_CD = '001'		
				GROUP BY B.MATRL_CD,LEFT(PLAN_DATE,6),MATRL_NM
			) A
			PIVOT(SUM(CNT) FOR PLAN_DATE IN (${planDateList}			
			)) AS PVIOT	
			
			UNION ALL
			
			SELECT * 
			FROM (
				SELECT 
					'2' GUBUN
					,'가입고량' GUBUN_NM
					,B.MATRL_CD
					,MATRL_NM
					, ( SELECT  SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
						FROM TB_IN_OUT_WHS_ADM X
						WHERE  X.MATRL_CD = B.MATRL_CD
						AND LEFT(PRE_IN_WHS_DATE,4) = #{planDate}
					) TOTAL_CNT
					,SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY 
					,LEFT(PRE_IN_WHS_DATE,6) PRE_IN_WHS_DATE
				FROM TB_MATRL_CODE_ADM B 
				LEFT OUTER JOIN 
				TB_IN_OUT_WHS_ADM A
				ON 1=1
				AND A.MATRL_CD = B.MATRL_CD
				AND LEFT(PRE_IN_WHS_DATE,4) = #{planDate} 	
				AND APPROVAL_CD != '006'
				WHERE  1=1 		
					AND USE_YN_CD = '001'		 
				GROUP BY B.MATRL_CD,MATRL_NM,LEFT(PRE_IN_WHS_DATE,6)
			) A
			PIVOT(SUM(PRE_IN_WHS_QTY) FOR PRE_IN_WHS_DATE IN (${planDateList}			
			)) AS PVIOT	
			
			UNION ALL
			
			SELECT * 
			FROM (
				SELECT 
					'3' GUBUN
					,'차이량' GUBUN_NM
					,X.MATRL_CD
					,X.MATRL_NM				
					,SUM(ISNULL((CNT),0)-ISNULL(PRE_IN_WHS_QTY,0)) OVER (PARTITION BY X.MATRL_CD,X.MATRL_NM) TOTAL_CNT
					,ISNULL((CNT),0) - ISNULL(PRE_IN_WHS_QTY,0) CNT
					,LEFT(X.DATE,6) PLAN_DATE
				FROM
					(	
						select * 
						from
							(
							select * from TB_MATRL_CODE_ADM
							WHERE USE_YN_CD = '001'
							) A
							FULL OUTER JOIN
							(
								SELECT DISTINCT 
									LEFT(CALENDAR.DATE,6) DATE		
								FROM 
									CALENDAR
								WHERE 
									LEFT(CALENDAR.DATE,4) = #{planDate}
					
							) B
							ON 1=1
					) X
					LEFT OUTER JOIN
					(
					SELECT 
						'1' GUBUN
						,'입고계획' GUBUN_NM
						,B.MATRL_CD
						,MATRL_NM					
						, SUM(CNT) CNT
						, LEFT(PLAN_DATE,6) PLAN_DATE
					FROM TB_MATRL_CODE_ADM B 
					LEFT OUTER JOIN 
					TB_RAW_MATRL_SUPPLY A
					ON 1=1
						AND A.MATRL_CD = B.MATRL_CD
						AND LEFT(PLAN_DATE,4) = #{planDate}
					WHERE  1=1
						AND USE_YN_CD = '001'		
					GROUP BY B.MATRL_CD,LEFT(PLAN_DATE,6),MATRL_NM
					) AA
					ON 1=1
					AND AA.MATRL_CD = X.MATRL_CD
					AND X.DATE = AA.PLAN_DATE

					LEFT OUTER JOIN
					(
					SELECT 
						'2' GUBUN
						,'가입고량' GUBUN_NM
						,B.MATRL_CD
						,MATRL_NM				
						,SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY 
						,LEFT(PRE_IN_WHS_DATE,6) PRE_IN_WHS_DATE
					FROM TB_MATRL_CODE_ADM B 
					LEFT OUTER JOIN 
					TB_IN_OUT_WHS_ADM A
					ON 1=1
						AND A.MATRL_CD = B.MATRL_CD
						AND LEFT(PRE_IN_WHS_DATE,4) = #{planDate} 	
						AND APPROVAL_CD != '006'
					WHERE  1=1 		
						AND USE_YN_CD = '001'		 
					GROUP BY B.MATRL_CD,MATRL_NM,LEFT(PRE_IN_WHS_DATE,6)
					) BB
					ON 1=1
					AND BB.MATRL_CD = X.MATRL_CD
					AND X.DATE = BB.PRE_IN_WHS_DATE			

			) A
			PIVOT(SUM(CNT) FOR PLAN_DATE IN (${planDateList} 			
			)) AS PVIOT	
			
			UNION ALL
			
			SELECT * 
			FROM (
				SELECT 
					'4' GUBUN
					,'실적' GUBUN_NM
					,X.MATRL_CD
					,X.MATRL_NM
					,SUM(ISNULL(BB.PRE_IN_WHS_QTY,0)) OVER (PARTITION BY X.MATRL_CD,X.MATRL_NM) * 100 / SUM(ISNULL(CNT,0)) OVER (PARTITION BY X.MATRL_CD,X.MATRL_NM)   TOTAL_CNT
					,(ISNULL(PRE_IN_WHS_QTY,0) * 100) / ISNULL(CNT,0)   CNT		
					,LEFT(PLAN_DATE,6) PLAN_DATE
				FROM
					(	
						select * 
						from
							(
							select * from TB_MATRL_CODE_ADM
							WHERE USE_YN_CD = '001'
							) A
							FULL OUTER JOIN
							(
								SELECT DISTINCT 
									LEFT(CALENDAR.DATE,6) DATE		
								FROM 
									CALENDAR
								WHERE 
									LEFT(CALENDAR.DATE,4) = #{planDate}
					
							) B
							ON 1=1
					) X
					LEFT OUTER JOIN					
					(
					SELECT 
						'1' GUBUN
						,'입고계획' GUBUN_NM
						,B.MATRL_CD
						,MATRL_NM					
						, SUM(CNT) CNT
						, LEFT(PLAN_DATE,6) PLAN_DATE
					FROM TB_MATRL_CODE_ADM B 
					LEFT OUTER JOIN 
					TB_RAW_MATRL_SUPPLY A
					ON 1=1
						AND A.MATRL_CD = B.MATRL_CD
						AND LEFT(PLAN_DATE,4) = #{planDate}
					WHERE  1=1
						AND USE_YN_CD = '001'		
					GROUP BY B.MATRL_CD,LEFT(PLAN_DATE,6),MATRL_NM
					) AA
					ON 1=1
					AND AA.MATRL_CD = X.MATRL_CD
					AND X.DATE = AA.PLAN_DATE
					LEFT OUTER JOIN
					(
					SELECT 
						'2' GUBUN
						,'가입고량' GUBUN_NM
						,B.MATRL_CD
						,MATRL_NM					
						,SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY 
						,LEFT(PRE_IN_WHS_DATE,6) PRE_IN_WHS_DATE
					FROM TB_MATRL_CODE_ADM B 
					LEFT OUTER JOIN 
					TB_IN_OUT_WHS_ADM A
					ON 1=1
						AND A.MATRL_CD = B.MATRL_CD
						AND LEFT(PRE_IN_WHS_DATE,4) = #{planDate} 	
						AND APPROVAL_CD != '006'
					WHERE  1=1 		
						AND USE_YN_CD = '001'		 
					GROUP BY B.MATRL_CD,MATRL_NM,LEFT(PRE_IN_WHS_DATE,6)
					) BB
					ON 1=1
					AND BB.MATRL_CD = X.MATRL_CD
					AND X.DATE = BB.PRE_IN_WHS_DATE

			) A
			PIVOT(SUM(CNT) FOR PLAN_DATE IN (${planDateList} 			
			)) AS PVIOT	
			
			UNION ALL
			
			SELECT * 
			FROM (
				SELECT 
					'5' GUBUN
					,'입고계획' GUBUN_NM
					,'Z99999' MATRL_CD
					,'종합' MATRL_NM
					, ( SELECT  SUM(CNT) CNT		
						FROM TB_RAW_MATRL_SUPPLY X
						WHERE LEFT(PLAN_DATE,4) = #{planDate}
					) TOTAL_CNT
					, SUM(CNT) CNT
					, LEFT(PLAN_DATE,6) PLAN_DATE
				FROM  TB_MATRL_CODE_ADM B
				LEFT OUTER JOIN 
				TB_RAW_MATRL_SUPPLY A 
				ON 1=1 
					AND B.MATRL_CD = A.MATRL_CD
					AND LEFT(PLAN_DATE,4) = #{planDate}
				WHERE  USE_YN_CD = '001'		
				GROUP BY LEFT(PLAN_DATE,6)
			) A
			PIVOT(SUM(CNT) FOR PLAN_DATE IN (${planDateList}			
			)) AS PVIOT	
			
			UNION ALL
			
			SELECT * 
			FROM (
				SELECT 
					'6' GUBUN
					,'가입고량' GUBUN_NM
					,'Z99999' MATRL_CD
					,'종합' MATRL_NM
					, ( SELECT  SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
						FROM TB_IN_OUT_WHS_ADM X
						WHERE LEFT(PRE_IN_WHS_DATE,4) = #{planDate}
					) TOTAL_CNT
					,SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY 
					,LEFT(PRE_IN_WHS_DATE,6) PRE_IN_WHS_DATE
				FROM TB_MATRL_CODE_ADM B
				LEFT OUTER JOIN
				TB_IN_OUT_WHS_ADM A
				ON 1=1
					AND  LEFT(PRE_IN_WHS_DATE,4) = #{planDate} 
					AND A.MATRL_CD = B.MATRL_CD
					AND APPROVAL_CD != '006' 
				WHERE		
					 USE_YN_CD = '001'		
				GROUP BY LEFT(PRE_IN_WHS_DATE,6)
			) A
			PIVOT(SUM(PRE_IN_WHS_QTY) FOR PRE_IN_WHS_DATE IN (${planDateList}			
			)) AS PVIOT	
			
			UNION ALL
			
			SELECT * 
			FROM (
				SELECT 
					'7' GUBUN
					,'차이량' GUBUN_NM
					,'Z99999' MATRL_CD
					,'종합' MATRL_NM
					,ISNULL(AA.TOTAL_CNT,0) - ISNULL(BB.TOTAL_CNT,0) TOTAL_CNT
					,ISNULL(CNT,0) - ISNULL(PRE_IN_WHS_QTY,0) CNT		
					,LEFT(PLAN_DATE,6) PLAN_DATE
				FROM		
					(
					SELECT 
						'5' GUBUN
						,'입고계획' GUBUN_NM
						,'Z99999' MATRL_CD
						,'종합' MATRL_NM
						, ( SELECT  SUM(CNT) CNT		
							FROM TB_RAW_MATRL_SUPPLY X
							WHERE LEFT(PLAN_DATE,4) = #{planDate}
						) TOTAL_CNT
						, SUM(CNT) CNT
						, LEFT(PLAN_DATE,6) PLAN_DATE
					FROM  TB_MATRL_CODE_ADM B
					LEFT OUTER JOIN 
					TB_RAW_MATRL_SUPPLY A 
					ON 1=1 
						AND B.MATRL_CD = A.MATRL_CD
						AND LEFT(PLAN_DATE,4) = #{planDate}
					WHERE  USE_YN_CD = '001'		
					GROUP BY LEFT(PLAN_DATE,6)
					) AA
					,
					(
					SELECT 
						'6' GUBUN
						,'가입고량' GUBUN_NM
						,'Z99999' MATRL_CD
						,'종합' MATRL_NM
						, ( SELECT  SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
							FROM TB_IN_OUT_WHS_ADM X
							WHERE LEFT(PRE_IN_WHS_DATE,4) = #{planDate}
						) TOTAL_CNT
						,SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY 
						,LEFT(PRE_IN_WHS_DATE,6) PRE_IN_WHS_DATE
					FROM TB_MATRL_CODE_ADM B
					LEFT OUTER JOIN
					TB_IN_OUT_WHS_ADM A
					ON 1=1
						AND  LEFT(PRE_IN_WHS_DATE,4) = #{planDate} 
						AND A.MATRL_CD = B.MATRL_CD
						AND APPROVAL_CD != '006' 
					WHERE		
						 USE_YN_CD = '001'		
					GROUP BY LEFT(PRE_IN_WHS_DATE,6)
					) BB
					
					WHERE 1=1
					AND AA.PLAN_DATE = BB.PRE_IN_WHS_DATE
			
				
			) A
			PIVOT(SUM(CNT) FOR PLAN_DATE IN (${planDateList}  			
			)) AS PVIOT	
			
			UNION ALL
			
			SELECT * 
			FROM (
				SELECT 
					'8' GUBUN
					,'실적' GUBUN_NM
					,'Z99999' MATRL_CD
					,'종합' MATRL_NM
					,ISNULL(BB.TOTAL_CNT,0) * 100 / ISNULL(AA.TOTAL_CNT,0)  TOTAL_CNT
					,ISNULL(PRE_IN_WHS_QTY,0) * 100 / ISNULL(CNT,0)   CNT		
					,LEFT(PLAN_DATE,6) PLAN_DATE
				FROM
					(
					SELECT 
						'5' GUBUN
						,'입고계획' GUBUN_NM
						,'Z99999' MATRL_CD
						,'종합' MATRL_NM
						, ( SELECT  SUM(CNT) CNT		
							FROM TB_RAW_MATRL_SUPPLY X
							WHERE LEFT(PLAN_DATE,4) = #{planDate}
						) TOTAL_CNT
						, SUM(CNT) CNT
						, LEFT(PLAN_DATE,6) PLAN_DATE
					FROM  TB_MATRL_CODE_ADM B
					LEFT OUTER JOIN 
					TB_RAW_MATRL_SUPPLY A 
					ON 1=1 
						AND B.MATRL_CD = A.MATRL_CD
						AND LEFT(PLAN_DATE,4) = #{planDate}
					WHERE  USE_YN_CD = '001'		
					GROUP BY LEFT(PLAN_DATE,6)
					) AA	
					,
					(
					SELECT 
						'6' GUBUN
						,'가입고량' GUBUN_NM
						,'Z99999' MATRL_CD
						,'종합' MATRL_NM
						, ( SELECT  SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY
							FROM TB_IN_OUT_WHS_ADM X
							WHERE LEFT(PRE_IN_WHS_DATE,4) = #{planDate}
						) TOTAL_CNT
						,SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY 
						,LEFT(PRE_IN_WHS_DATE,6) PRE_IN_WHS_DATE
					FROM TB_MATRL_CODE_ADM B
					LEFT OUTER JOIN
					TB_IN_OUT_WHS_ADM A
					ON 1=1
						AND  LEFT(PRE_IN_WHS_DATE,4) = #{planDate} 
						AND A.MATRL_CD = B.MATRL_CD
						AND APPROVAL_CD != '006' 
					WHERE		
						 USE_YN_CD = '001'		
					GROUP BY LEFT(PRE_IN_WHS_DATE,6)
					) BB
			
					WHERE 1=1
					AND AA.PLAN_DATE = BB.PRE_IN_WHS_DATE
			
			) A
			PIVOT(SUM(CNT) FOR PLAN_DATE IN (${planDateList}  			
			)) AS PVIOT	
			) A
			WHERE GUBUN != '0'
			order by MATRL_CD,GUBUN

		]]>
	</select>
	
	<!-- 생산대비실적사용율 -->
	<select id="performanceMatrl2" resultMap="RawMatrlSupplyVo" >	
		<![CDATA[			
			SET ANSI_WARNINGS OFF
			SET ARITHIGNORE ON
			SET ARITHABORT OFF	;
			WITH MAIN AS (
				 SELECT
					A.GOODS_CD
					,(SELECT GOODS_NM FROM TB_GOODS_CODE_ADM X WHERE X.GOODS_CD = A.GOODS_CD) GOODS_NM
					,A.WORK_ORD_DATE
					, ISNULL( SUM(CC.FAULTY_CNT), 0 ) +  ISNULL( SUM(B.FAULTY_CNT), 0 ) +  ISNULL( SUM(APPEAR_OUTPUT_CNT), 0 ) + ISNULL( SUM(C.FAULTY_CNT), 0 ) + ISNULL( SUM(D.FAULTY_CNT), 0 ) USER_INPUT_INSPCT_CNT
									
			   FROM 
			
					   ( SELECT E.GOODS_CD,		
							   LEFT(C.WORK_ORD_DATE,6 ) WORK_ORD_DATE, 
							   SUM(C.OUTPUT_CNT) AS APPEAR_OUTPUT_CNT							
						FROM TB_WORK_ORDER_OUTPUT_SUB C, TB_WORK_ORDER E
						WHERE LEFT(C.WORK_ORD_DATE,4) = #{planDate}
						AND C.WORK_ORD_NO = E.WORK_ORD_NO
						GROUP BY E.GOODS_CD,LEFT(C.WORK_ORD_DATE,6 )
						) A 

						LEFT OUTER JOIN 
						(
						SELECT
								E.GOODS_CD,
								SUM(ISNULL(FAULTY_CNT,0)) FAULTY_CNT,						
								X.WORK_ORD_DATE
							FROM TB_GOODS_FAULTY_ADM_CODE Z, 
							(SELECT DISTINCT WORK_ORD_NO, LEFT(X.WORK_ORD_DATE,6 ) WORK_ORD_DATE FROM TB_WORK_ORDER_OUTPUT_SUB X WHERE LEFT(X.WORK_ORD_DATE,4) = #{planDate}) X,
							TB_WORK_ORDER E
							WHERE 1=1 
							AND X.WORK_ORD_NO = Z.WORK_ORD_NO
							AND E.WORK_ORD_NO = X.WORK_ORD_NO
						GROUP BY E.GOODS_CD,X.WORK_ORD_DATE
							) CC
						ON 1=1
						AND A.GOODS_CD = CC.GOODS_CD
						AND A.WORK_ORD_DATE = CC.WORK_ORD_DATE
			
						LEFT OUTER JOIN 
			
					   ( 
					   SELECT E.GOODS_CD,		
							   ISNULL(SUM(C.FAULTY_CNT),0) FAULTY_CNT,
							   X.WORK_ORD_DATE
						FROM TB_EDGE_GOODS_FAULTY_ADM_CODE C ,
						(SELECT DISTINCT WORK_ORD_NO, LEFT(X.WORK_ORD_DATE,6 ) WORK_ORD_DATE FROM TB_WORK_ORDER_OUTPUT_SUB X WHERE LEFT(X.WORK_ORD_DATE,4) = #{planDate}) X,
						TB_WORK_ORDER E
						WHERE C.WORK_ORD_NO = X.WORK_ORD_NO				
						AND E.WORK_ORD_NO = X.WORK_ORD_NO
						GROUP BY E.GOODS_CD,X.WORK_ORD_DATE						
						) B			
						ON 1=1
						AND A.GOODS_CD = B.GOODS_CD
						AND A.WORK_ORD_DATE = B.WORK_ORD_DATE
						
						LEFT OUTER JOIN

						(SELECT 							
							E.GOODS_CD,
							ISNULL(SUM(A.FAULTY_CNT),0) FAULTY_CNT,
							X.WORK_ORD_DATE
						FROM TB_SHIP_INSPECT_ADM B,
						TB_SHIP_INSPECT_DTL A,
						(SELECT DISTINCT WORK_ORD_NO, LEFT(X.WORK_ORD_DATE,6 ) WORK_ORD_DATE FROM TB_WORK_ORDER_OUTPUT_SUB X WHERE LEFT(X.WORK_ORD_DATE,4) = #{planDate}) X,
						TB_WORK_ORDER E
						WHERE B.WORK_ORD_NO = X.WORK_ORD_NO
						AND A.SHIP_INSP_IDX = B.IDX
						AND RE_INSP_STATUS = '002'
						AND E.WORK_ORD_NO = X.WORK_ORD_NO
						GROUP BY E.GOODS_CD,X.WORK_ORD_DATE		
						) C
						ON 1=1
						AND A.GOODS_CD = C.GOODS_CD
						AND A.WORK_ORD_DATE = C.WORK_ORD_DATE		
						
						LEFT OUTER JOIN

						(SELECT 							
							E.GOODS_CD,
							ISNULL(SUM(A.FAULTY_CNT),0) FAULTY_CNT,		
							X.WORK_ORD_DATE
						FROM TB_SHIP_INSPECT_ADM B,
						TB_SHIP_INSPECT_DTL A,
						(SELECT DISTINCT WORK_ORD_NO, LEFT(X.WORK_ORD_DATE,6 ) WORK_ORD_DATE FROM TB_WORK_ORDER_OUTPUT_SUB X WHERE LEFT(X.WORK_ORD_DATE,4) = #{planDate}) X,
						TB_WORK_ORDER E
						WHERE B.WORK_ORD_NO = X.WORK_ORD_NO
						AND A.SHIP_INSP_IDX = B.IDX
						AND RE_INSP_STATUS != '002'
						AND E.WORK_ORD_NO = X.WORK_ORD_NO
						GROUP BY E.GOODS_CD,X.WORK_ORD_DATE	
						) D
						ON 1=1
						AND A.GOODS_CD = D.GOODS_CD
						AND A.WORK_ORD_DATE = D.WORK_ORD_DATE
						
						GROUP BY A.GOODS_CD,A.WORK_ORD_DATE
					)
		
					SELECT * 
					FROM
					(
					SELECT 			
							'0' GUBUN
							,'' GUBUN_NM
							,'' MATRL_CD
							,'' MATRL_NM
							,0.0 COUNT_SUM
							,0.0 COUNT1
							,0.0 COUNT2
							,0.0 COUNT3
							,0.0 COUNT4
							,0.0 COUNT5
							,0.0 COUNT6
							,0.0 COUNT7
							,0.0 COUNT8
							,0.0 COUNT9
							,0.0 COUNT10
							,0.0 COUNT11
							,0.0 COUNT12	
					
					UNION ALL

					SELECT 
						'1' GUBUN
						,'생산량'GUBUN_NM
						,*			 
					FROM (
						SELECT 
						E.MATRL_CD
						,E.MATRL_NM
						,USER_INPUT_INSPCT_CNT CNT
						,SUM(ISNULL((USER_INPUT_INSPCT_CNT),0)) OVER(PARTITION BY E.MATRL_CD,E.MATRL_NM ) TOTAL_CNT
						,WORK_ORD_DATE
					FROM 
			
					(select DISTINCT A.GOODS_CD,A.GOODS_NM,B.MATRL_CD,B.MATRL_NM from TB_GOODS_CODE_ADM A, TB_MATRL_CODE_ADM B
					WHERE 1=1
					AND (A.ALNICU_MATRL_CD = B.MATRL_CD
					OR A.FILM_MATRL_CD = B.MATRL_CD)
					AND A.USE_YN_CD  = '001'
					AND B.USE_YN_CD  = '001'
					AND B.DEFECT_CD != '003'
					) E
			
					LEFT OUTER JOIN			
					MAIN AA
					ON 1=1 
					AND E.GOODS_CD = AA.GOODS_CD
			
			
			
					) A
					PIVOT(SUM(CNT) FOR WORK_ORD_DATE IN (${planDateList}  			
				)) AS PVIOT			
					
				UNION ALL
					
					SELECT 
						'2' GUBUN
						,'필요량'GUBUN_NM
						,*			 
					FROM (
						SELECT 
						E.MATRL_CD
						,E.MATRL_NM
						,ISNULL((CASE 
								WHEN LEFT(E.MATRL_CD,1) = 'A' THEN (CONVERT(FLOAT,((AA.USER_INPUT_INSPCT_CNT)) * CONVERT(FLOAT,replace(E.THICKNESS,'m','')) * CONVERT(FLOAT,replace(E.DEPTH,'m','')) * replace(ISNULL(E.GOODS_PITCH,0),'m','') / 1000000) * 2.7  * ISNULL(G.CNT,0) /100 ) 
								WHEN LEFT(E.MATRL_CD,1) = 'N' THEN (CONVERT(FLOAT,((AA.USER_INPUT_INSPCT_CNT)) * CONVERT(FLOAT,replace(E.THICKNESS,'m','')) * CONVERT(FLOAT,replace(E.DEPTH,'m','')) * replace(ISNULL(E.GOODS_PITCH,0),'m','') / 1000000) * 8.96 * ISNULL(G.CNT,0) /100 ) 
								ELSE 0 
								END),0) CNT
						,SUM(ISNULL((CASE 
								WHEN LEFT(E.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((AA.USER_INPUT_INSPCT_CNT)) * CONVERT(FLOAT,replace(E.THICKNESS,'m','')) * CONVERT(FLOAT,replace(E.DEPTH,'m','')) * replace(ISNULL(E.GOODS_PITCH,0),'m','') / 1000000 * 2.7  * ISNULL(G.CNT,0) /100 ) 
								WHEN LEFT(E.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((AA.USER_INPUT_INSPCT_CNT)) * CONVERT(FLOAT,replace(E.THICKNESS,'m','')) * CONVERT(FLOAT,replace(E.DEPTH,'m','')) * replace(ISNULL(E.GOODS_PITCH,0),'m','') / 1000000 * 8.96 * ISNULL(G.CNT,0) /100) 
								ELSE 0 
								END),0)) OVER(PARTITION BY E.MATRL_CD,E.MATRL_NM ) TOTAL_CNT
						,WORK_ORD_DATE
			
					FROM 
			
					(select DISTINCT A.GOODS_CD,A.GOODS_NM,A.GOODS_PITCH,B.MATRL_CD,B.MATRL_NM,B.THICKNESS,B.DEPTH from TB_GOODS_CODE_ADM A, TB_MATRL_CODE_ADM B
					WHERE 1=1
					AND (A.ALNICU_MATRL_CD = B.MATRL_CD
					OR A.FILM_MATRL_CD = B.MATRL_CD)
					AND A.USE_YN_CD  = '001'
					AND B.USE_YN_CD  = '001'
					AND B.DEFECT_CD != '003'
					) E
			
					LEFT OUTER JOIN			
					MAIN AA
					ON 1=1 
					AND E.GOODS_CD = AA.GOODS_CD
						   		
			
					LEFT OUTER JOIN
					TB_RAW_MATRL_YIELD G
					ON 1=1
					AND E.MATRL_CD = G.MATRL_CD
					AND PLAN_DATE = AA.WORK_ORD_DATE
				
					) A
					PIVOT(SUM(CNT) FOR WORK_ORD_DATE IN (${planDateList}  			
				)) AS PVIOT	
				
			UNION ALL
			SELECT * 
					FROM (
						SELECT 
							'3' GUBUN
							,'실사용량' GUBUN_NM
							,B.MATRL_CD
							,MATRL_NM
							,SUM(CONVERT(FLOAT,SUM(CONVERT(FLOAT,PRE_OUT_QTY)))) OVER (PARTITION BY B.MATRL_CD,MATRL_NM)  TOTAL_CNT
							,SUM(CONVERT(FLOAT,PRE_OUT_QTY)) PRE_OUT_QTY 
							,LEFT(PRE_OUT_WHS_DATE,6) PRE_OUT_WHS_DATE
						FROM (select DISTINCT B.MATRL_CD,B.MATRL_NM,B.THICKNESS,B.DEPTH from TB_GOODS_CODE_ADM A, TB_MATRL_CODE_ADM B
						WHERE 1=1
						AND (A.ALNICU_MATRL_CD = B.MATRL_CD
						OR A.FILM_MATRL_CD = B.MATRL_CD)
						AND A.USE_YN_CD  = '001'
						AND B.USE_YN_CD  = '001'
						AND B.DEFECT_CD != '003'
						) B
						LEFT OUTER JOIN 
						TB_IN_OUT_WHS_ADM A
						ON 1=1
						AND A.MATRL_CD = B.MATRL_CD
						AND LEFT(PRE_OUT_WHS_DATE,4) = #{planDate} 	
						AND APPROVAL_CD != '006'
						
						WHERE  1=1 		
							
						GROUP BY B.MATRL_CD,MATRL_NM,LEFT(PRE_OUT_WHS_DATE,6)
					) A
					PIVOT(SUM(PRE_OUT_QTY) FOR PRE_OUT_WHS_DATE IN (${planDateList}  		
					)) AS PVIOT	
			
			UNION ALL
				
				SELECT * 
						FROM (
				SELECT 
					'4' GUBUN
					,'차이량' GUBUN_NM
					,CC.MATRL_CD
					,CC.MATRL_NM
					,ISNULL(A.TOTAL_CNT,0) - ISNULL(B.TOTAL_CNT,0) TOTAL_CNT
					,ISNULL(A.CNT,0) - ISNULL(B.PRE_OUT_QTY,0) CNT
					,CC.DATE
				FROM 
				(
						SELECT * FROM
						(select DISTINCT B.MATRL_CD,B.MATRL_NM,B.THICKNESS,B.DEPTH from TB_GOODS_CODE_ADM A, TB_MATRL_CODE_ADM B
							WHERE 1=1
							AND (A.ALNICU_MATRL_CD = B.MATRL_CD
							OR A.FILM_MATRL_CD = B.MATRL_CD)
							AND A.USE_YN_CD  = '001'
							AND B.USE_YN_CD  = '001'
							AND B.DEFECT_CD != '003'
						) A	
							FULL OUTER JOIN
						(
							SELECT DISTINCT 
								LEFT(CALENDAR.DATE,6) DATE		
							FROM 
								CALENDAR
							WHERE 
								LEFT(CALENDAR.DATE,4) = #{planDate}
								
						) B
						ON 1=1
							
						) CC
				LEFT OUTER JOIN
				(
			
					SELECT 
						MATRL_CD
						,MATRL_NM
						,SUM(ISNULL(CNT,0)) CNT
						,TOTAL_CNT
						,WORK_ORD_DATE
					FROM (
						SELECT 
							E.MATRL_CD
							,E.MATRL_NM
							,ISNULL((CASE 
									WHEN LEFT(E.MATRL_CD,1) = 'A' THEN (CONVERT(FLOAT,((AA.USER_INPUT_INSPCT_CNT)) * CONVERT(FLOAT,replace(E.THICKNESS,'m','')) * CONVERT(FLOAT,replace(E.DEPTH,'m','')) * replace(ISNULL(E.GOODS_PITCH,0),'m','') / 1000000) * 2.7  * ISNULL(G.CNT,0) /100 ) 
									WHEN LEFT(E.MATRL_CD,1) = 'N' THEN (CONVERT(FLOAT,((AA.USER_INPUT_INSPCT_CNT)) * CONVERT(FLOAT,replace(E.THICKNESS,'m','')) * CONVERT(FLOAT,replace(E.DEPTH,'m','')) * replace(ISNULL(E.GOODS_PITCH,0),'m','') / 1000000) * 8.96 * ISNULL(G.CNT,0) /100 ) 
									ELSE 0 
									END),0) CNT
							,SUM(ISNULL((CASE 
									WHEN LEFT(E.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((AA.USER_INPUT_INSPCT_CNT)) * CONVERT(FLOAT,replace(E.THICKNESS,'m','')) * CONVERT(FLOAT,replace(E.DEPTH,'m','')) * replace(ISNULL(E.GOODS_PITCH,0),'m','') / 1000000 * 2.7  * ISNULL(G.CNT,0) /100 ) 
									WHEN LEFT(E.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((AA.USER_INPUT_INSPCT_CNT)) * CONVERT(FLOAT,replace(E.THICKNESS,'m','')) * CONVERT(FLOAT,replace(E.DEPTH,'m','')) * replace(ISNULL(E.GOODS_PITCH,0),'m','') / 1000000 * 8.96 * ISNULL(G.CNT,0) /100) 
									ELSE 0 
									END),0)) OVER(PARTITION BY E.MATRL_CD,E.MATRL_NM ) TOTAL_CNT
							,WORK_ORD_DATE
			
						FROM 
			
						(
						select DISTINCT A.GOODS_CD,A.GOODS_NM,A.GOODS_PITCH,B.MATRL_CD,B.MATRL_NM,B.THICKNESS,B.DEPTH from TB_GOODS_CODE_ADM A, TB_MATRL_CODE_ADM B
						WHERE 1=1
						AND (A.ALNICU_MATRL_CD = B.MATRL_CD
						OR A.FILM_MATRL_CD = B.MATRL_CD)
						AND A.USE_YN_CD  = '001'
						AND B.USE_YN_CD  = '001'
						AND B.DEFECT_CD != '003'
			
						
						) E
			
						LEFT OUTER JOIN			
						MAIN AA
						ON 1=1 
						AND E.GOODS_CD = AA.GOODS_CD
						   		
			
						LEFT OUTER JOIN
						TB_RAW_MATRL_YIELD G
						ON 1=1
						AND E.MATRL_CD = G.MATRL_CD
						AND PLAN_DATE = AA.WORK_ORD_DATE
						) AA
					GROUP BY MATRL_CD,TOTAL_CNT,WORK_ORD_DATE,MATRL_NM
					) A
					ON 1=1
					AND CC.MATRL_CD = A.MATRL_CD
					AND CC.DATE = A.WORK_ORD_DATE
			
					LEFT OUTER JOIN
					(
					SELECT 
								'3' GUBUN
								,'가입고량' GUBUN_NM
								,B.MATRL_CD
								,MATRL_NM
								,SUM(CONVERT(FLOAT,SUM(CONVERT(FLOAT,PRE_OUT_QTY)))) OVER (PARTITION BY B.MATRL_CD,MATRL_NM)  TOTAL_CNT
								,SUM(CONVERT(FLOAT,PRE_OUT_QTY)) PRE_OUT_QTY 
								,LEFT(PRE_OUT_WHS_DATE,6) PRE_OUT_WHS_DATE
							FROM (select DISTINCT B.MATRL_CD,B.MATRL_NM,B.THICKNESS,B.DEPTH from TB_GOODS_CODE_ADM A, TB_MATRL_CODE_ADM B
							WHERE 1=1
							AND (A.ALNICU_MATRL_CD = B.MATRL_CD
							OR A.FILM_MATRL_CD = B.MATRL_CD)
							AND A.USE_YN_CD  = '001'
							AND B.USE_YN_CD  = '001'
							AND B.DEFECT_CD != '003'
							) B
							LEFT OUTER JOIN 
							TB_IN_OUT_WHS_ADM A
							ON 1=1
							AND A.MATRL_CD = B.MATRL_CD
							AND LEFT(PRE_OUT_WHS_DATE,4) = #{planDate} 	
							AND APPROVAL_CD != '006'
							
							WHERE  1=1 		
								
							GROUP BY B.MATRL_CD,MATRL_NM,LEFT(PRE_OUT_WHS_DATE,6)
					) B
					ON CC.MATRL_CD =B.MATRL_CD
					AND CC.DATE = B.PRE_OUT_WHS_DATE
					
					) A
						PIVOT(SUM(CNT) FOR DATE IN (${planDateList}  		
						)) AS PVIOT	
					WHERE TOTAL_CNT != 0
			
					UNION ALL
			
				SELECT * 
						FROM (
				SELECT 
					'5' GUBUN
					,'사용율' GUBUN_NM
					,A.MATRL_CD
					,A.MATRL_NM
					, ISNULL(B.TOTAL_CNT,0) * 100 / ISNULL(A.TOTAL_CNT,0)  TOTAL_CNT
					, ISNULL(B.PRE_OUT_QTY,0) * 100 / ISNULL(A.CNT,0) CNT
					,A.DATE
				FROM 
				
				(
			
					SELECT 
						MATRL_CD
						,MATRL_NM
						,SUM(ISNULL(CNT,0)) CNT
						,TOTAL_CNT
						,DATE
					FROM (
						SELECT 
							E.MATRL_CD
							,E.MATRL_NM
							,ISNULL((CASE 
									WHEN LEFT(E.MATRL_CD,1) = 'A' THEN (CONVERT(FLOAT,((AA.USER_INPUT_INSPCT_CNT)) * CONVERT(FLOAT,replace(E.THICKNESS,'m','')) * CONVERT(FLOAT,replace(E.DEPTH,'m','')) * replace(ISNULL(E.GOODS_PITCH,0),'m','') / 1000000) * 2.7  * ISNULL(G.CNT,0) /100 ) 
									WHEN LEFT(E.MATRL_CD,1) = 'N' THEN (CONVERT(FLOAT,((AA.USER_INPUT_INSPCT_CNT)) * CONVERT(FLOAT,replace(E.THICKNESS,'m','')) * CONVERT(FLOAT,replace(E.DEPTH,'m','')) * replace(ISNULL(E.GOODS_PITCH,0),'m','') / 1000000) * 8.96 * ISNULL(G.CNT,0) /100 ) 
									ELSE 0 
									END),0) CNT
							,SUM(ISNULL((CASE 
									WHEN LEFT(E.MATRL_CD,1) = 'A' THEN CONVERT(FLOAT,((AA.USER_INPUT_INSPCT_CNT)) * CONVERT(FLOAT,replace(E.THICKNESS,'m','')) * CONVERT(FLOAT,replace(E.DEPTH,'m','')) * replace(ISNULL(E.GOODS_PITCH,0),'m','') / 1000000 * 2.7  * ISNULL(G.CNT,0) /100 ) 
									WHEN LEFT(E.MATRL_CD,1) = 'N' THEN CONVERT(FLOAT,((AA.USER_INPUT_INSPCT_CNT)) * CONVERT(FLOAT,replace(E.THICKNESS,'m','')) * CONVERT(FLOAT,replace(E.DEPTH,'m','')) * replace(ISNULL(E.GOODS_PITCH,0),'m','') / 1000000 * 8.96 * ISNULL(G.CNT,0) /100) 
									ELSE 0 
									END),0)) OVER(PARTITION BY E.MATRL_CD,E.MATRL_NM ) TOTAL_CNT
							,DATE
			
						FROM 
			
						(
						SELECT * FROM
						(select DISTINCT GOODS_CD,GOODS_PITCH,B.MATRL_CD,B.MATRL_NM,B.THICKNESS,B.DEPTH from TB_GOODS_CODE_ADM A, TB_MATRL_CODE_ADM B
							WHERE 1=1
							AND (A.ALNICU_MATRL_CD = B.MATRL_CD
							OR A.FILM_MATRL_CD = B.MATRL_CD)
							AND A.USE_YN_CD  = '001'
							AND B.USE_YN_CD  = '001'
							AND B.DEFECT_CD != '003'
						) A	
							FULL OUTER JOIN
						(
							SELECT DISTINCT 
								LEFT(CALENDAR.DATE,6) DATE		
							FROM 
								CALENDAR
							WHERE 
								LEFT(CALENDAR.DATE,4) = #{planDate}
								
						) B
						ON 1=1
			
						
						) E
			
						LEFT OUTER JOIN			
						MAIN AA
						ON 1=1 
						AND E.GOODS_CD = AA.GOODS_CD
						AND AA.WORK_ORD_DATE = E.DATE
			
						LEFT OUTER JOIN
						TB_RAW_MATRL_YIELD G
						ON 1=1
						AND E.MATRL_CD = G.MATRL_CD
						AND PLAN_DATE = E.DATE
						) AA
					GROUP BY MATRL_CD,TOTAL_CNT,DATE,MATRL_NM
					) A
					LEFT OUTER JOIN
					(
					SELECT 
								'3' GUBUN
								,'가입고량' GUBUN_NM
								,B.MATRL_CD
								,MATRL_NM
								,ISNULL(SUM(CONVERT(FLOAT,SUM(CONVERT(FLOAT,PRE_OUT_QTY)))) OVER (PARTITION BY B.MATRL_CD,MATRL_NM),0)  TOTAL_CNT
								,ISNULL(SUM(CONVERT(FLOAT,PRE_OUT_QTY)),0) PRE_OUT_QTY 
								,LEFT(PRE_OUT_WHS_DATE,6) PRE_OUT_WHS_DATE
							FROM (select DISTINCT B.MATRL_CD,B.MATRL_NM,B.THICKNESS,B.DEPTH from TB_GOODS_CODE_ADM A, TB_MATRL_CODE_ADM B
							WHERE 1=1
							AND (A.ALNICU_MATRL_CD = B.MATRL_CD
							OR A.FILM_MATRL_CD = B.MATRL_CD)
							AND A.USE_YN_CD  = '001'
							AND B.USE_YN_CD  = '001'
							AND B.DEFECT_CD != '003'
							) B
							LEFT OUTER JOIN 
							TB_IN_OUT_WHS_ADM A
							ON 1=1
							AND A.MATRL_CD = B.MATRL_CD
							AND LEFT(PRE_OUT_WHS_DATE,4) = #{planDate} 	
							AND APPROVAL_CD != '006'
							
							WHERE  1=1 		
								
							GROUP BY B.MATRL_CD,MATRL_NM,LEFT(PRE_OUT_WHS_DATE,6)
					) B
					ON A.MATRL_CD =B.MATRL_CD
					AND A.DATE = B.PRE_OUT_WHS_DATE
					
					) A
						PIVOT(SUM(CNT) FOR DATE IN (${planDateList}  		
						)) AS PVIOT	
					WHERE TOTAL_CNT != 0 
					OR TOTAL_CNT IS NULL
					
					) A
				
					WHERE GUBUN != '0'
	
 			ORDER BY MATRL_CD,GUBUN
		
		]]>
	</select>		
	
	<!-- 원자재 수불 명세서 누적-->
	<select id="listRawMartlSum" resultMap="RawMatrlSupplyVo">

			SELECT 
				'11' GUBUNJA,
				'A99999' MATRL_CD
				,'AL' MATRL_NM
				,'' THICKNESS
				,SUM(REMAIN_QTY) REMAIN_QTY,
				SUM(REMAIN_QTY_TOTAL) REMAIN_QTY_TOTAL,
				SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
				SUM(PRE_IN_WHS_QTY_TOTAL) PRE_IN_WHS_QTY_TOTAL,
				SUM(PRE_OUT_WHS_QTY) PRE_OUT_WHS_QTY,
				SUM(PRE_OUT_WHS_QTY_TOTAL) PRE_OUT_WHS_QTY_TOTAL,
				SUM(RESULT_QTY) RESULT_QTY,
				SUM(RESULT_QTY_TOTAL) RESULT_QTY_TOTAL,
				SUM(SUM_QTY) SUM_QTY,
				SUM(SUM_QTY_TOTAL) SUM_QTY_TOTAL,
				0 PRICE
			
			FROM
			
				(
					SELECT
					F.MATRL_CD,
					(F.THICKNESS + 'X' + F.DEPTH) THICKNESS,
					ISNULL(REMAIN_QTY,0) REMAIN_QTY,
					ISNULL(REMAIN_QTY,0)* ISNULL(PRICE,0) REMAIN_QTY_TOTAL,
					ISNULL(PRE_IN_WHS_QTY,0) PRE_IN_WHS_QTY,
					ISNULL(PRE_IN_WHS_QTY,0)* ISNULL(PRICE,0) PRE_IN_WHS_QTY_TOTAL,
					(ISNULL(PRE_OUT_WHS_QTY,0) +  ISNULL(G.SUM_QTY,0) - ISNULL(D.SUM_QTY,0)) PRE_OUT_WHS_QTY,
					(ISNULL(PRE_OUT_WHS_QTY,0) +  ISNULL(G.SUM_QTY,0) - ISNULL(D.SUM_QTY,0)) * ISNULL(PRICE,0) PRE_OUT_WHS_QTY_TOTAL,
					ISNULL(REMAIN_QTY,0)  + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) + ISNULL(D.SUM_QTY,0)   RESULT_QTY,
					(ISNULL(REMAIN_QTY,0) + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) + ISNULL(D.SUM_QTY,0) ) * ISNULL(PRICE,0) RESULT_QTY_TOTAL,
					ISNULL(D.SUM_QTY,0) SUM_QTY,
					ISNULL(PRICE,0) PRICE,
					ISNULL(D.SUM_QTY,0)* ISNULL(PRICE,0) SUM_QTY_TOTAL
				
				FROM
					TB_MATRL_CODE_ADM F
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_IN_WHS_DATE,4) = LEFT(#{planDate},4) AND APPROVAL_CD != '006' GROUP BY MATRL_CD,LEFT(PRE_IN_WHS_DATE,4)) A 
					ON 1=1 AND A.MATRL_CD = F.MATRL_CD
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_OUT_QTY)) PRE_OUT_WHS_QTY FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_OUT_WHS_DATE,4) = LEFT(#{planDate},4)  AND APPROVAL_CD != '006' GROUP BY MATRL_CD,LEFT(PRE_OUT_WHS_DATE,4))  B
					ON 1=1 AND F.MATRL_CD = B.MATRL_CD
				
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, REMAIN_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = LEFT(#{planDate},4)+'01' GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),REMAIN_QTY) C
					ON 1=1 AND F.MATRL_CD = C.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) D
					ON 1=1 AND D.MATRL_CD = F.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, PRICE FROM TB_MATRL_PRICE A WHERE PLAN_DATE = #{planDate}) E
					ON 1=1 AND F.MATRL_CD = E.MATRL_CD

					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = (SELECT CONVERT(VARCHAR(6), DATEADD(M, -1, #{planDate}+'01'), 112) ) GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) G
					ON 1=1 AND G.MATRL_CD = F.MATRL_CD
				

					
					WHERE LEFT(F.MATRL_CD,1) = 'A'
					AND F.USE_YN_CD = '001'
					AND F.DEFECT_CD != '003'
				) AA
				
				GROUP BY LEFT(AA.MATRL_CD,1)

				UNION ALL

			SELECT 
				'21' GUBUNJA,
				'N99999' MATRL_CD
				,'NICU' MATRL_NM
				,'' THICKNESS
				,SUM(REMAIN_QTY) REMAIN_QTY,
				SUM(REMAIN_QTY_TOTAL) REMAIN_QTY_TOTAL,
				SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
				SUM(PRE_IN_WHS_QTY_TOTAL) PRE_IN_WHS_QTY_TOTAL,
				SUM(PRE_OUT_WHS_QTY) PRE_OUT_WHS_QTY,
				SUM(PRE_OUT_WHS_QTY_TOTAL) PRE_OUT_WHS_QTY_TOTAL,
				SUM(RESULT_QTY) RESULT_QTY,
				SUM(RESULT_QTY_TOTAL) RESULT_QTY_TOTAL,
				SUM(SUM_QTY) SUM_QTY,
				SUM(SUM_QTY_TOTAL) SUM_QTY_TOTAL,
				0 PRICE
				
			FROM
			
				(
				SELECT
					F.MATRL_CD,
					(F.THICKNESS + 'X' + F.DEPTH) THICKNESS,
					ISNULL(REMAIN_QTY,0) REMAIN_QTY,
					ISNULL(REMAIN_QTY,0)* ISNULL(PRICE,0) REMAIN_QTY_TOTAL,
					ISNULL(PRE_IN_WHS_QTY,0) PRE_IN_WHS_QTY,
					ISNULL(PRE_IN_WHS_QTY,0)* ISNULL(PRICE,0) PRE_IN_WHS_QTY_TOTAL,
					(ISNULL(PRE_OUT_WHS_QTY,0) +  ISNULL(G.SUM_QTY,0) - ISNULL(D.SUM_QTY,0)) PRE_OUT_WHS_QTY,
					(ISNULL(PRE_OUT_WHS_QTY,0) +  ISNULL(G.SUM_QTY,0) - ISNULL(D.SUM_QTY,0)) * ISNULL(PRICE,0) PRE_OUT_WHS_QTY_TOTAL,
				    ISNULL(REMAIN_QTY,0)  + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) + ISNULL(D.SUM_QTY,0)   RESULT_QTY,
					(ISNULL(REMAIN_QTY,0) + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) + ISNULL(D.SUM_QTY,0) ) * ISNULL(PRICE,0) RESULT_QTY_TOTAL,
					ISNULL(D.SUM_QTY,0) SUM_QTY,
					ISNULL(PRICE,0) PRICE,
					ISNULL(D.SUM_QTY,0)* ISNULL(PRICE,0) SUM_QTY_TOTAL
				
				FROM
					TB_MATRL_CODE_ADM F
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_IN_WHS_DATE,4) = LEFT(#{planDate},4) AND APPROVAL_CD != '006' GROUP BY MATRL_CD,LEFT(PRE_IN_WHS_DATE,4)) A 
					ON 1=1 AND A.MATRL_CD = F.MATRL_CD					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_OUT_QTY)) PRE_OUT_WHS_QTY FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_OUT_WHS_DATE,4) = LEFT(#{planDate},4)  AND APPROVAL_CD != '006' GROUP BY MATRL_CD,LEFT(PRE_OUT_WHS_DATE,4))  B
					ON 1=1 AND F.MATRL_CD = B.MATRL_CD		
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, REMAIN_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = LEFT(#{planDate},4)+'01' GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),REMAIN_QTY) C
					ON 1=1 AND F.MATRL_CD = C.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) D
					ON 1=1 AND D.MATRL_CD = F.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, PRICE FROM TB_MATRL_PRICE A WHERE PLAN_DATE = #{planDate}) E
					ON 1=1 AND F.MATRL_CD = E.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = (SELECT CONVERT(VARCHAR(6), DATEADD(M, -1, #{planDate}+'01'), 112) ) GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) G
					ON 1=1 AND G.MATRL_CD = F.MATRL_CD
				
					
					
					WHERE LEFT(F.MATRL_CD,1) = 'N'
					AND F.USE_YN_CD = '001'
					AND F.DEFECT_CD != '003'
				) AA
				
				GROUP BY LEFT(AA.MATRL_CD,1)
			
			UNION ALL
			
			
			
			SELECT
				BB.GUBUNJA,
				BB.MATRL_CD,
				BB.MATRL_NM	,		 
				BB.THICKNESS	
				,BB.REMAIN_QTY,
				BB.REMAIN_QTY_TOTAL,
				BB.PRE_IN_WHS_QTY,
				BB.PRE_IN_WHS_QTY_TOTAL,
				BB.PRE_OUT_WHS_QTY  PRE_OUT_WHS_QTY,
				BB.PRE_OUT_WHS_QTY_TOTAL PRE_OUT_WHS_QTY_TOTAL,
				BB.RESULT_QTY,
				BB.RESULT_QTY_TOTAL,
				BB.SUM_QTY,
				BB.SUM_QTY_TOTAL,
				0 PRICE
			FROM 

		
				(

				SELECT 
				'42' GUBUNJA,
				'F99999' MATRL_CD
				,'FILM' MATRL_NM			 
				,'' THICKNESS	
				,SUM(REMAIN_QTY)  REMAIN_QTY,
				SUM(REMAIN_QTY_TOTAL) REMAIN_QTY_TOTAL,
				SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
				SUM(PRE_IN_WHS_QTY_TOTAL) PRE_IN_WHS_QTY_TOTAL,
				SUM(PRE_OUT_WHS_QTY) PRE_OUT_WHS_QTY,
				SUM(PRE_OUT_WHS_QTY_TOTAL) PRE_OUT_WHS_QTY_TOTAL,
				SUM(RESULT_QTY) RESULT_QTY,
				SUM(RESULT_QTY_TOTAL) RESULT_QTY_TOTAL,
				SUM(SUM_QTY) SUM_QTY,
				SUM(SUM_QTY_TOTAL) SUM_QTY_TOTAL,
				0 PRICE
			
			FROM
			
				(
				SELECT
					F.MATRL_CD,
					(F.THICKNESS + 'X' + F.DEPTH) THICKNESS,
					ISNULL(REMAIN_QTY,0) REMAIN_QTY,
					ISNULL(REMAIN_QTY,0)* ISNULL(PRICE,0) REMAIN_QTY_TOTAL,
					ISNULL(PRE_IN_WHS_QTY,0) PRE_IN_WHS_QTY,						
					0 PRE_IN_WHS_QTY_TOTAL,
					(ISNULL(PRE_OUT_WHS_QTY,0) +  ISNULL(G.SUM_QTY,0) - ISNULL(D.SUM_QTY,0)) PRE_OUT_WHS_QTY,
					(ISNULL(PRE_OUT_WHS_QTY,0) +  ISNULL(G.SUM_QTY,0) - ISNULL(D.SUM_QTY,0))* ISNULL(PRICE,0) PRE_OUT_WHS_QTY_TOTAL,
					ISNULL(REMAIN_QTY,0)  + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) + ISNULL(D.SUM_QTY,0)   RESULT_QTY,
					(ISNULL(REMAIN_QTY,0) + ISNULL(PRE_IN_WHS_QTY,0) - ISNULL(PRE_OUT_WHS_QTY,0) + ISNULL(D.SUM_QTY,0) ) * ISNULL(PRICE,0) RESULT_QTY_TOTAL,
					ISNULL(D.SUM_QTY,0) SUM_QTY,
					ISNULL(PRICE,0) PRICE,
					ISNULL(D.SUM_QTY,0)* ISNULL(PRICE,0) SUM_QTY_TOTAL
				
				FROM
					TB_MATRL_CODE_ADM F
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_IN_WHS_QTY)) PRE_IN_WHS_QTY FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_IN_WHS_DATE,4) = LEFT(#{planDate},4) AND APPROVAL_CD != '006' GROUP BY MATRL_CD,LEFT(PRE_IN_WHS_DATE,4)) A 
					ON 1=1 AND A.MATRL_CD = F.MATRL_CD
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM(CONVERT(FLOAT,PRE_OUT_QTY)) PRE_OUT_WHS_QTY FROM TB_IN_OUT_WHS_ADM A WHERE LEFT(PRE_OUT_WHS_DATE,4) = LEFT(#{planDate},4)  AND APPROVAL_CD != '006' GROUP BY MATRL_CD,LEFT(PRE_OUT_WHS_DATE,4))  B
					ON 1=1 AND F.MATRL_CD = B.MATRL_CD
				
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, REMAIN_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = LEFT(#{planDate},4)+'01' GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),REMAIN_QTY) C
					ON 1=1 AND F.MATRL_CD = C.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = #{planDate} GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) D
					ON 1=1 AND D.MATRL_CD = F.MATRL_CD
					
					LEFT OUTER JOIN
					(SELECT MATRL_CD, PRICE FROM TB_MATRL_PRICE A WHERE PLAN_DATE = #{planDate}) E
					ON 1=1 AND F.MATRL_CD = E.MATRL_CD

					LEFT OUTER JOIN
					(SELECT MATRL_CD, SUM_QTY FROM TB_RAW_MATRL_SUPPLY A WHERE LEFT(PLAN_DATE,6) = (SELECT CONVERT(VARCHAR(6), DATEADD(M, -1, #{planDate}+'01'), 112) ) GROUP BY MATRL_CD,LEFT(PLAN_DATE,6),SUM_QTY) G
					ON 1=1 AND G.MATRL_CD = F.MATRL_CD
				
					
					
					WHERE LEFT(F.MATRL_CD,1) = 'F'
					AND ROLL_GUBUN = '002'
					AND F.USE_YN_CD = '001'
					AND F.DEFECT_CD != '003'
				) AA
				
				GROUP BY LEFT(AA.MATRL_CD,1)

				) BB

			
			ORDER BY GUBUNJA,MATRL_CD
		
	</select>
	
</mapper>