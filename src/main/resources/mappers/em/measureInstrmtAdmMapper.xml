<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  	
<mapper namespace="mes.mappers.em.measureInstrmtAdmMapper">

	<resultMap id="MeasureInstrmtAdmVo" type="mes.domain.em.MeasureInstrmtAdmVo">
		<result property="mitCd"			column="MIT_CD"			/>
		<result property="admNo"			column="ADM_NO"			/>
		<result property="mitNo"			column="MIT_NO"			/>
		<result property="admDept"			column="ADM_DEPT"		/>
		<result property="mainChargr"		column="MAIN_CHARGR"	/>
		<result property="mitNm"			column="MIT_NM"			/>
		<result property="corrCycle"		column="CORR_CYCLE"		/>
		<result property="corrCycleNm"		column="CORR_CYCLE_NM"	/>
		<result property="corrCount"		column="CORR_COUNT"		/>
		<result property="mitForm"			column="MIT_FORM"		/>
		<result property="mitKind"			column="MIT_KIND"		/>
		<result property="modelNm"			column="MODEL_NM"		/>
		<result property="mfcCorpNm"		column="MFC_CORP_NM"	/>
		<result property="acqDate"			column="ACQ_DATE"		/>
		<result property="acqCost"			column="ACQ_COST"		/>
		<result property="mitLoc"			column="MIT_LOC"		/>
		<result property="mitLocNm"			column="MIT_LOC_NM"		/>
		<result property="useYn"			column="USE_YN"			/>
		<result property="mitDesc"			column="MIT_DESC"		/>
		<result property="imageFile1"		column="IMAGE_FILE1"	/>
		<result property="imageFile2"		column="IMAGE_FILE2"	/>
		<result property="imageFile3"		column="IMAGE_FILE3"	/>
		<result property="imageFile4"		column="IMAGE_FILE4"	/>
		<result property="imageFile1Nm"		column="IMAGE_FILE1_NM"	/>
		<result property="imageFile2Nm"		column="IMAGE_FILE2_NM"	/>
		<result property="imageFile3Nm"		column="IMAGE_FILE3_NM"	/>
		<result property="imageFile4Nm"		column="IMAGE_FILE4_NM"	/>
		<result property="regId"			column="REG_ID"			/>
		<result property="regDate"			column="REG_DATE"		/>
		<result property="updId"			column="UPD_ID"			/>
		<result property="updDate"			column="UPD_DATE"		/>
		<result property="value"			column="VALUE"			/>
<!-- 		추가사항 -->
		<result property="corrDate"			column="CORR_DATE"			/>
		<result property="corrWillDate"		column="CORR_WILL_DATE"		/>
		<result property="mainGubun"		column="MAIN_GUBUN"			/>
		<result property="mainGubunNm"		column="MAIN_GUBUN_NM"		/>
		<result property="monthOne"			column="MONTH_ONE"			/>
		<result property="monthTwo"			column="MONTH_TWO"			/>
		<result property="monthThree"		column="MONTH_THREE"		/>
		<result property="monthFour"		column="MONTH_FOUR"			/>
		<result property="monthFive"		column="MONTH_FIVE"			/>
		<result property="monthSix"			column="MONTH_SIX"			/>
		<result property="monthSeven"		column="MONTH_SEVEN"		/>
		<result property="monthEight"		column="MONTH_EIGHT"		/>
		<result property="monthNine"		column="MONTH_NINE"			/>
		<result property="monthTen"			column="MONTH_TEN"			/>
		<result property="monthEleven"		column="MONTH_ELEVEN"		/>
		<result property="monthTwelve"		column="MONTH_TWELVE"		/>
		<result property="corrCheck"		column="CORR_CHECK"			/>
		<result property="corrGubun"		column="CORR_GUBUN"			/>
		<result property="corrGubunNm"		column="CORR_GUBUN_NM"		/>
		<result property="admDeptNm"		column="ADM_DEPT_NM"		/>
		<result property="mitCorrDate"		column="MIT_CORR_DATE"		/>
		<result property="mitCorrWillDate"	column="MIT_CORR_WILL_DATE"	/>
	</resultMap>
	
	<resultMap id="CorrDataListVo" type="mes.domain.em.CorrDataListVo">
		<result property="mitCd"			column="MIT_CD"				/>
		<result property="corrSeq"			column="CORR_SEQ"			/>
		<result property="corrGubun"		column="CORR_GUBUN"			/>
		<result property="corrDate"			column="CORR_DATE"			/>
		<result property="corrWillDate"		column="CORR_WILL_DATE"		/>
		<result property="corrNo"			column="CORR_NO"			/>
		<result property="attachFn"			column="ATTACH_FN"			/>
		<result property="attachPath"		column="ATTACH_PATH"		/>
		<result property="attachRegDate"	column="ATTACH_REG_DATE"	/>
		<result property="regId"			column="REG_ID"				/>
		<result property="regNm"			column="REG_NM"			    />
		<result property="regDate"			column="REG_DATE"			/>
		<result property="updId"			column="UPD_ID"				/>
		<result property="updDate"			column="UPD_DATE"			/>
		

	</resultMap>

	<!-- 계측기 전체조회 -->
	<select id="measureInstrmtAdmList" resultMap="MeasureInstrmtAdmVo">
		SELECT
			A.MIT_CD
			, A.ADM_NO
			, A.MAIN_GUBUN
			, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE X WHERE X.BASE_GROUP_CD = '109' AND A.MAIN_GUBUN = X.BASE_CD) MAIN_GUBUN_NM
			, A.MIT_NO
			, A.MIT_NM
			, A.MODEL_NM
			, A.CORR_CYCLE
			, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE X WHERE X.BASE_CD = A.CORR_CYCLE AND X.BASE_GROUP_CD = '107') CORR_CYCLE_NM
			, A.CORR_COUNT
			, A.MFC_CORP_NM
			, A.MIT_LOC
			, A.USE_YN
			, A.ADM_DEPT
			, (SELECT X.BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE X WHERE X.BASE_CD = A.ADM_DEPT AND X.BASE_GROUP_CD = '013') ADM_DEPT_NM
			<if test="corrGubun != '' and corrGubun != null"> 
			, (SELECT TOP(1) B.CORR_DATE FROM TB_CORR_DATA_LIST B WHERE B.MIT_CD = A.MIT_CD AND B.CORR_WILL_DATE != '' AND B.CORR_GUBUN = #{corrGubun} ORDER BY B.CORR_DATE DESC) MIT_CORR_DATE
			, (SELECT TOP(1) B.CORR_DATE FROM TB_CORR_DATA_LIST B WHERE B.MIT_CD = A.MIT_CD AND B.CORR_WILL_DATE = '' AND B.CORR_GUBUN = #{corrGubun} ORDER BY B.CORR_DATE) MIT_CORR_WILL_DATE
			</if>
			<if test="(corrYear != null and corrYear != '') and (corrGubun != null and corrGubun != '')">
			, (SELECT TOP(1) B.CORR_DATE FROM TB_CORR_DATA_LIST B WHERE B.MIT_CD = A.MIT_CD AND B.CORR_WILL_DATE != '' AND B.CORR_GUBUN = #{corrGubun} ORDER BY B.CORR_DATE DESC) CORR_DATE
			, (SELECT TOP(1) B.CORR_DATE FROM TB_CORR_DATA_LIST B WHERE B.MIT_CD = A.MIT_CD AND B.CORR_WILL_DATE = '' AND B.CORR_GUBUN = #{corrGubun} ORDER BY B.CORR_DATE) CORR_WILL_DATE
			, (SELECT TOP(1) CASE WHEN B.CORR_WILL_DATE != '' THEN '실적' ELSE '계획' END FROM TB_CORR_DATA_LIST B WHERE B.MIT_CD = A.MIT_CD AND B.CORR_GUBUN = #{corrGubun} AND B.CORR_WILL_DATE = '') CORR_CHECK
			, (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '01' AND AA.CORR_GUBUN = #{corrGubun}) MONTH_ONE
			, (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '02' AND AA.CORR_GUBUN = #{corrGubun}) MONTH_TWO
			, (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '03' AND AA.CORR_GUBUN = #{corrGubun}) MONTH_THREE
			, (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '04' AND AA.CORR_GUBUN = #{corrGubun}) MONTH_FOUR
			, (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '05' AND AA.CORR_GUBUN = #{corrGubun}) MONTH_FIVE
			, (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '06' AND AA.CORR_GUBUN = #{corrGubun}) MONTH_SIX
			, (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '07' AND AA.CORR_GUBUN = #{corrGubun}) MONTH_SEVEN
			, (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '08' AND AA.CORR_GUBUN = #{corrGubun}) MONTH_EIGHT
			, (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '09' AND AA.CORR_GUBUN = #{corrGubun}) MONTH_NINE
			, (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '10' AND AA.CORR_GUBUN = #{corrGubun}) MONTH_TEN
			, (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '11' AND AA.CORR_GUBUN = #{corrGubun}) MONTH_ELEVEN
			, (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '12' AND AA.CORR_GUBUN = #{corrGubun}) MONTH_TWELVE
			</if>
		FROM TB_MEASURE_INSTRMT_ADM	A
		<if test="corrGubun != '' and corrGubun != null"> 
		LEFT JOIN TB_CORR_DATA_LIST B 
		ON A.MIT_CD = B.MIT_CD
		AND B.CORR_GUBUN = #{corrGubun}
		</if>
		WHERE 1=1
		<if test="mainGubun != '' and mainGubun != null"> 
		AND A.MAIN_GUBUN = #{mainGubun}
		</if>
		<if test="(corrYear != null and corrYear != '') and (corrGubun != null and corrGubun != '')">
		AND (
			(SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '01' AND AA.CORR_GUBUN = #{corrGubun}) IS NOT NULL 
			OR (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END AS TEMP FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '02' AND AA.CORR_GUBUN = #{corrGubun}) IS NOT NULL 
			OR (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END AS TEMP FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '03' AND AA.CORR_GUBUN = #{corrGubun}) IS NOT NULL 
			OR (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END AS TEMP FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '04' AND AA.CORR_GUBUN = #{corrGubun}) IS NOT NULL 
			OR (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END AS TEMP FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '05' AND AA.CORR_GUBUN = #{corrGubun}) IS NOT NULL 
			OR (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END AS TEMP FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '06' AND AA.CORR_GUBUN = #{corrGubun}) IS NOT NULL 
			OR (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END AS TEMP FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '07' AND AA.CORR_GUBUN = #{corrGubun}) IS NOT NULL 
			OR (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END AS TEMP FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '08' AND AA.CORR_GUBUN = #{corrGubun}) IS NOT NULL 
			OR (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END AS TEMP FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '09' AND AA.CORR_GUBUN = #{corrGubun}) IS NOT NULL 
			OR (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END AS TEMP FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '10' AND AA.CORR_GUBUN = #{corrGubun}) IS NOT NULL 
			OR (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END AS TEMP FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '11' AND AA.CORR_GUBUN = #{corrGubun}) IS NOT NULL 
			OR (SELECT CASE WHEN AA.CORR_WILL_DATE != '' THEN 'result' ELSE AA.CORR_DATE END AS TEMP FROM TB_CORR_DATA_LIST AA WHERE AA.MIT_CD = A.MIT_CD AND SUBSTRING(AA.CORR_DATE,1,6) = #{corrYear} + '12' AND AA.CORR_GUBUN = #{corrGubun}) IS NOT NULL 
		)
		</if>
		GROUP BY
			A.MIT_CD
			, A.ADM_NO
			, A.MAIN_GUBUN
			, A.MIT_NO
			, A.MIT_NM
			, A.MODEL_NM
			, A.CORR_CYCLE
			, A.CORR_COUNT
			, A.MFC_CORP_NM
			, A.MIT_LOC
			, A.USE_YN
			, A.ADM_DEPT
	</select>
	
	<!-- 계측기 상세 정보 -->
	<select id="measureInstrmtAdmRead" resultMap="MeasureInstrmtAdmVo">
		SELECT	
			M.MIT_CD
			, M.ADM_NO 
			, M.MAIN_GUBUN 
			, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE X WHERE X.BASE_GROUP_CD = '109' AND M.MAIN_GUBUN = X.BASE_CD) MAIN_GUBUN_NM
			, M.MIT_NO 
			, M.MIT_NM  
			, M.MODEL_NM
			, M.ADM_DEPT
			, M.MFC_CORP_NM 
			, M.CORR_CYCLE 
			, M.CORR_COUNT
			, M.MAIN_CHARGR 
			, M.MIT_FORM
			, M.MIT_KIND
			, M.ACQ_DATE
			, M.ACQ_COST
			, M.MIT_LOC 
			, M.USE_YN 
			, M.MIT_DESC
			, M.IMAGE_FILE1
			, M.IMAGE_FILE1_NM
		FROM	TB_MEASURE_INSTRMT_ADM M 	 
		WHERE	MIT_CD = #{mitCd}
	</select>
	
	<!-- 계측기 등록 -->
	<insert id="measureInstrmtAdmCreate" parameterType="mes.domain.em.MeasureInstrmtAdmVo">
		INSERT INTO TB_MEASURE_INSTRMT_ADM(
			MIT_CD,
			MAIN_GUBUN,
			ADM_NO,
			MIT_NO,
			ADM_DEPT,
			MAIN_CHARGR,
			MIT_NM,
			CORR_CYCLE,
			CORR_COUNT,
			MIT_FORM,
			MIT_KIND,
			MODEL_NM,
			MFC_CORP_NM,
			ACQ_DATE,
			ACQ_COST,
			MIT_LOC,
			USE_YN,
			MIT_DESC,
			REG_ID,
			REG_DATE
		) 
		VALUES(
			#{mitCd},
			#{mainGubun},
			#{admNo},
			#{mitNo},
			#{admDept},
			#{mainChargr},
			#{mitNm},
			#{corrCycle},
			#{corrCount},
			#{mitForm},
			#{mitKind},
			#{modelNm},
			#{mfcCorpNm},
			#{acqDate},
			#{acqCost},
			#{mitLoc},
			#{useYn},
			#{mitDesc},
			#{regId},
			GETDATE()
		)
	</insert>
	
	<!-- 계측기 Update -->
	<update id="measureInstrmtAdmUpdate">
        UPDATE	TB_MEASURE_INSTRMT_ADM 
		SET	ADM_NO = #{admNo},
			MAIN_GUBUN = #{mainGubun},
			MIT_NO = #{mitNo},
			ADM_DEPT = #{admDept},
			MAIN_CHARGR = #{mainChargr},
			MIT_NM = #{mitNm},
			CORR_CYCLE = #{corrCycle},
			CORR_COUNT = #{corrCount},
			MIT_FORM = #{mitForm},
			MIT_KIND = #{mitKind},
			MODEL_NM = #{modelNm},
			MFC_CORP_NM = #{mfcCorpNm},
			ACQ_DATE = #{acqDate},
			ACQ_COST = #{acqCost},
			MIT_LOC = #{mitLoc},
			USE_YN = #{useYn},
			MIT_DESC = #{mitDesc},
			UPD_ID = #{updId},
			UPD_DATE = GETDATE()
		WHERE	MIT_CD = #{mitCd}
	</update>
	
	<!-- 계측기 Delete -->
	<delete id="measureInstrmtAdmDelete">
		DELETE FROM TB_MEASURE_INSTRMT_ADM 
		WHERE	MIT_CD = #{mitCd}
	</delete>
	
	
	<!-- 계측기코드 자동생성 -->
	<select id="measureInstrmtSeq" resultType="String">
		SELECT ISNULL(CAST(MAX(MIT_CD)+1 AS NVARCHAR), '100001') 
		FROM TB_MEASURE_INSTRMT_ADM 
		WHERE 1=1
	</select>
	
	<!-- 계측기코드 중복확인 -->
	<select id="overlapMitCd" resultType="int">
		SELECT COUNT(*) FROM TB_MEASURE_INSTRMT_ADM WHERE MIT_CD = #{mitCd}
	</select>
	
	
	<!-- 관리번호 중복확인 -->
	<select id="overlapAdmNo" resultType="int">
		SELECT COUNT(*) FROM TB_MEASURE_INSTRMT_ADM WHERE ADM_NO = #{admNo}
	</select>
	
	
	<!--이미지 경로조회 -->
	<select id="measureInstrmtImgRead" resultMap="MeasureInstrmtAdmVo">
			SELECT
				MIT_CD
				, IMAGE_FILE1
				, IMAGE_FILE1_NM
			FROM TB_MEASURE_INSTRMT_ADM
			WHERE MIT_CD = #{mitCd}
	</select>
	
	
	<!--이미지 등록 -->
	<update id="measureInstrmtImageUpload">
		UPDATE TB_MEASURE_INSTRMT_ADM
		SET
		IMAGE_FILE1 = #{imageFile1}
		, IMAGE_FILE1_NM = #{imageFile1Nm}
		WHERE MIT_CD = #{mitCd}
	</update>
	
	<!--이미지 삭제 -->
	<update id="measureInstrmtImageDelete">
		UPDATE TB_MEASURE_INSTRMT_ADM
		SET
		IMAGE_FILE1 = NULL,
		IMAGE_FILE1_NM = NULL
		WHERE MIT_CD = #{mitCd}
	</update>
	
	
	<!-- 교정사항 이력 목록조회 -->
	<select id="attachCorreDataList" resultMap="CorrDataListVo">
		SELECT A.MIT_CD
			, A.CORR_SEQ
			, A.CORR_GUBUN
			, A.CORR_DATE
			, A.CORR_WILL_DATE
			, A.CORR_NO
			, A.ATTACH_FN
			, A.ATTACH_REG_DATE
			, A.REG_ID
			, ISNULL((SELECT USER_NM FROM TB_USER B WHERE B.USER_ID=A.REG_ID), '관리자') AS  REG_NM
		FROM TB_CORR_DATA_LIST A
		WHERE 1=1
		AND A.MIT_CD = #{mitCd}
		AND A.CORR_DATE != ''
		<if test="corrGubun != '' and corrGubun != null"> 
		AND A.CORR_GUBUN = #{corrGubun}
		</if>
		<if test="corrYear != null and !corrYear.equals('')">
		AND SUBSTRING(A.CORR_DATE, 1, 4) = #{corrYear}
		</if>
		<if test="corrDateVal != null and !corrDateVal.equals('')">
		AND SUBSTRING(A.CORR_DATE,1,6) = #{corrDateVal}
		</if>
		<if test="corrDateCheck != null and !corrDateCheck.equals('')">
		AND (SELECT TOP(1) SUBSTRING(C.CORR_DATE,1,6) FROM TB_CORR_DATA_LIST C WHERE C.MIT_CD = A.MIT_CD AND C.CORR_GUBUN = #{corrGubun} AND SUBSTRING(C.CORR_DATE,1,6) = #{corrDateCheck}) <![CDATA[=]]> #{corrDateCheck}
		</if>
		
		ORDER BY A.CORR_DATE ASC
	</select>
	
	<!-- 교정사항이력 상세조회 -->
	<select id="measureInstrmtCorreAdmRead" resultMap="CorrDataListVo">
		SELECT TOP (1)
			MIT_CD
			, CORR_DATE
			, CORR_WILL_DATE
			, CORR_NO
			, ATTACH_FN
			, ATTACH_PATH
			, ATTACH_REG_DATE
			, REG_ID
			, REG_DATE
		FROM	TB_CORR_DATA_LIST 	 
		WHERE	1=1
		AND MIT_CD = #{mitCd}
		<if test="corrSeq!=null and !corrSeq.equals('')">
		AND CORR_SEQ = #{corrSeq}
		</if>
		ORDER BY CORR_DATE DESC
	</select>
	
	
	<!-- 교정사항이력 시퀀스 자동생성-->
	<select id="getCorrSeq" resultType="String">
		SELECT 
			ISNULL(MAX(CONVERT(INT, CORR_SEQ)) + 1, 0) 
		FROM TB_CORR_DATA_LIST 
		WHERE MIT_CD = #{mitCd}
		<if test="corrGubun != '' and corrGubun != null"> 
		AND CORR_GUBUN = #{corrGubun}
		</if>
	</select>
	

	
	<!-- 교정사항이력 등록 -->
	<insert id="attachCorreDataCreate" >
		INSERT INTO TB_CORR_DATA_LIST(
			MIT_CD,
			CORR_SEQ,
			CORR_GUBUN,
			CORR_DATE,
			CORR_WILL_DATE,
			CORR_NO,
			ATTACH_FN,
			ATTACH_PATH,
			ATTACH_REG_DATE,
			REG_ID,
			REG_DATE
		) 
		VALUES(
			#{mitCd},
			#{corrSeq},
			#{corrGubun},
			#{corrDate},
			#{corrWillDate},
			#{corrNo},
			#{attachFn},
			#{attachPath},
			getDate(),
			#{regId},
			getDate()
		)
	</insert>
	
	<!-- 교정사항이력 수정 -->
	<update id="attachCorreDataUpdate">
		UPDATE	TB_CORR_DATA_LIST		 
		SET	
			CORR_DATE = #{corrDate},
			CORR_WILL_DATE = #{corrWillDate},
			CORR_NO = #{corrNo},
			ATTACH_FN = #{attachFn},
			ATTACH_PATH = #{attachPath},
			ATTACH_REG_DATE = #{attachRegDate},
			REG_ID = #{regId},
			UPD_ID = #{updId},
			UPD_DATE = GETDATE()
		WHERE 1=1
		AND MIT_CD = #{mitCd}
		AND	CORR_SEQ = #{corrSeq}
	</update>
	
	<!-- 교정사항이력 삭제 -->
	<delete id="attachCorreDataDelete">
		DELETE FROM TB_CORR_DATA_LIST
		WHERE 1=1
		AND MIT_CD = #{mitCd}
		<if test="corrSeq != null and corrSeq != ''">
		AND CORR_SEQ = #{corrSeq}
		</if>
		<if test="corrDateVal != null and !corrDateVal.equals('')">
		AND SUBSTRING(CORR_DATE,1,6) = #{corrDateVal}
		</if>
	</delete>
	
	
	<select id="eqCorreFilePath" resultType="String">
		<![CDATA[
			SELECT	
			  ATTACH_PATH
			FROM	
			TB_ATTACH_CORRE_DATA
			WHERE ATTACH_SEQ = #{attachSeq}
			AND ATTACH_CD = #{attachCd}
		]]>
	</select>
	

	
</mapper>

