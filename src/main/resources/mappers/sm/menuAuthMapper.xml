<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  	
<mapper namespace="mes.mappers.sm.menuAuthMapper">

<resultMap id="MenuAuthVo" type="mes.domain.sm.MenuAuthVo">
	
	<result property="menuId"			column="MENU_ID"		/>
	<!-- <result property="departmentCd"		column="DEPARTMENT_CD"	/> -->
	<result property="departmentNm"		column="DEPARTMENT_NM"	/>
	<result property="userNumber"		column="USER_NUMBER"		/>
	<result property="gradeCd"			column="GRADE_CD"		/>
	<result property="gradeNm"			column="GRADE_NM"		/>
	<result property="useYnCd"			column="USE_YN"		/>
	<result property="useYnNm"			column="USE_YN_NM"		/>
	<result property="regId"			column="REG_ID"			/>
	<result property="regDate"			column="REG_DATE"		/>
	<result property="updId"			column="UPD_ID"			/>
	<result property="updDate"			column="UPD_DATE"		/>
	<result property="cnt"			column="CNT"			/>
			
			
</resultMap>

	<select id="listAll" resultMap="MenuAuthVo">
  		SELECT	MENU_ID 
				,DEPARTMENT_CD 
				,USER_NUMBER 
				,GRADE_CD 
				,USE_YN
				,REG_ID 
				,REG_DATE 
				,UPD_ID 
				,UPD_DATE
		FROM	TB_MENU_AUTH 
	</select>
	
	<select id="read" resultMap="MenuAuthVo">

		SELECT DISTINCT MENU_ID ,DEPARTMENT_CD,USER_NUMBER
		FROM
		(
		<!-- SELECT MENU_ID ,DEPARTMENT_CD,USER_NUMBER FROM TB_MENU_AUTH WHERE DEPARTMENT_CD = #{departmentCd} AND USER_NUMBER = 'kkkk' AND USE_YN = 'Y' 
		UNION --> 
		SELECT MENU_ID ,DEPARTMENT_CD,USER_NUMBER FROM TB_MENU_AUTH WHERE <!-- DEPARTMENT_CD = 'kkk' AND --> USER_NUMBER = #{userNumber}  AND USE_YN = 'Y' 
		) AA
	
	</select>	

	
	<select id="readCheck" resultMap="MenuAuthVo">
		SELECT	COUNT(*)  CNT		
		FROM	TB_MENU_AUTH 
		WHERE USER_NUMBER = #{userNumber}		
	</select>
	
	<select id="check" resultMap="MenuAuthVo">
  		SELECT	MENU_ID 
				,DEPARTMENT_CD 
				,USER_NUMBER 
				,GRADE_CD 
				,USE_YN 
				,REG_ID 
				,REG_DATE 
				,UPD_ID 
				,UPD_DATE
		FROM	TB_MENU_AUTH 
		WHERE MENU_ID = #{menuId} <!-- AND DEPARTMENT_CD = #{departmentCd} --> AND USER_NUMBER = #{userNumber}
	</select>	
	
	<insert id="create" >
		INSERT INTO TB_MENU_AUTH(
			 MENU_ID
			,USER_NUMBER 
<!-- 			,GRADE_CD  -->
			,USE_YN 
			,REG_ID 
			,REG_DATE 
			,UPD_ID 
			,UPD_DATE
			
		) 
		VALUES
		<foreach collection="list" item="item" separator=",">
		(
			'${item.menuId}',
			'${item.userNumber}',
			'${item.useYnCd}',
			'${item.regId}',
			GETDATE(),
			'${item.updId}',
			GETDATE()
		)
		</foreach>
		
	</insert>
	
		
	<select id="update">
		UPDATE	TB_MENU_AUTH 
		SET	MENU_ID = #{menuId},
			<!-- DEPARTMENT_CD = #{departmentCd}, -->
			USER_NUMBER = #{userNumber},
			GRADE_CD = #{gradeCd},
			USE_YN = #{useYnCd},			
			UPD_ID = #{updId},
			UPD_DATE = GETDATE()
		WHERE	MENU_ID = #{menuId} <!-- AND DEPARTMENT_CD = #{departmentCd} --> AND USER_NUMBER = #{userNumber}
	</select>	
	
	<delete id="delete">
		DELETE FROM TB_MENU_AUTH
		WHERE <!-- DEPARTMENT_CD = #{departmentCd}
		AND --> USER_NUMBER = #{userNumber}
	</delete>
	

	<select id="menuAuthPath" resultType="String">
		SELECT  STUFF(
		   (
			   SELECT DISTINCT ',' + B.MENU_PATH
			   FROM TB_MENU_AUTH A, TB_MENU_INFO_ADM B
			   WHERE 1=1 
			   AND (<!-- A.DEPARTMENT_CD = #{departmentCd} OR --> A.USER_NUMBER = #{userNumber})
			   AND A.MENU_ID = B.MENU_ID
			   AND B.UPPER_MENU_ID IS NOT NULL
			   AND B.MENU_PATH IS NOT NULL
			   FOR XML PATH('')),1,1,'') AS MENU_PATH
	</select>
	
	<select id="menuAuthPathAdmin" resultType="String">
		SELECT  STUFF(
		   (
			   SELECT DISTINCT ',' + B.MENU_PATH
			   FROM TB_MENU_AUTH A, TB_MENU_INFO_ADM B
			   WHERE 1=1 
			   AND (<!-- A.DEPARTMENT_CD = #{departmentCd} OR --> A.USER_NUMBER = #{userNumber})
			   AND A.MENU_ID = B.MENU_ID
			   AND B.UPPER_MENU_ID IS NOT NULL
			   AND B.MENU_PATH IS NOT NULL
			   FOR XML PATH('')),1,1,'') AS MENU_PATH
	</select>
</mapper>
