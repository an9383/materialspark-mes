<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mes.mappers.mm.itemPartAdmMapper">
	<resultMap id="itemPartAdmVo"
		type="mes.domain.mm.ItemPartAdmVo">
		<result property="partCd" 			column="PART_CD"			/>
		<result property="partNm"			column="PART_NM" 			/>
		<result property="partRev" 			column="PART_REV" 			/>
		<result property="partGubun"		column="PART_GUBUN" 		/>
		<result property="partGubunNm" 		column="PART_GUBUN_NM"		/>
		<result property="partType"			column="PART_TYPE" 			/>
		<result property="partTypeNm" 		column="PART_TYPE_NM"		/>
		<result property="partSpec" 		column="PART_SPEC" 			/>
		<result property="inCorpCd" 		column="IN_CORP_CD" 		/>
		<result property="inCorpNm" 		column="IN_CORP_NM" 		/>
		<result property="partUnit" 		column="PART_UNIT" 			/>
		<result property="partUnitNm" 		column="PART_UNIT_NM" 		/>
		<result property="tmQty"			column="TM_QTY" 			/>
		<result property="basicDlvDate" 	column="BASIC_DLV_DATE"	 	/>
		<result property="unitCost" 		column="UNIT_COST" 			/>
		<result property="standCost" 		column="STAND_COST" 		/>
		<result property="safetyStockQty"	column="SAFETY_STOCK_QTY"	/>
		<result property="barcodeYn" 		column="BARCODE_YN" 		/>
		<result property="useYn"			column="USE_YN" 			/>
		<result property="inspectYn"		column="INSPECT_YN" 		/>
		<result property="partDesc" 		column="PART_DESC" 			/>
		<result property="partSeq"			column="PART_SEQ" 			/>
		<result property="inspectDate" 		column="INSPECT_DATE" 		/>
		<result property="fileNm" 			column="FILE_NM" 			/>
		<result property="contents" 		column="CONTENTS" 			/>
		<result property="regId" 			column="REG_ID"				/>
		<result property="regNm" 			column="REG_NM"				/>
		<result property="regDate" 			column="REG_DATE" 			/>
		<result property="updId" 			column="UPD_ID" 			/>
		<result property="updDate" 			column="UPD_DATE" 			/>
		<result property="totalCount"		column="RETHINK_QTY"		/>
		
		<result property="rethinkQty"		column="RETHINK_QTY"		/>
		<result property="lackQty"			column="LACK_QTY"			/>
		
	</resultMap>	

	<!-- 품목정보관리(부품) 목록 조회 -->
	<select id="itemPartAdmList" resultMap="itemPartAdmVo"> 
		SELECT
			A.PART_CD
			, A.PART_NM
			, A.PART_GUBUN
			, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE BASE_GROUP_CD='069' AND PART_GUBUN=B.BASE_CD) PART_GUBUN_NM
			, A.PART_TYPE
			, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE BASE_GROUP_CD='070' AND PART_TYPE=B.BASE_CD) PART_TYPE_NM
			, A.PART_REV
			, A.PART_SPEC
			, A.IN_CORP_CD
			, (SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM B WHERE B.DEAL_CORP_CD=A.IN_CORP_CD) IN_CORP_NM
			, A.BASIC_DLV_DATE
			, A.PART_DESC
			, A.PART_UNIT
			, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE X WHERE X.BASE_CD=A.PART_UNIT AND X.BASE_GROUP_CD='072') PART_UNIT_NM
			, A.UNIT_COST
			, A.STAND_COST
			, A.SAFETY_STOCK_QTY
			, A.BARCODE_YN
			, A.INSPECT_YN
			, TOTAL_COUNT = COUNT(*) OVER()
			, ISNULL(SUM(B.PART_QTY),0) - ISNULL(SUM(C.PRE_IN_WHS_QTY),0) RETHINK_QTY
			, A.SAFETY_STOCK_QTY - (ISNULL(SUM(B.PART_QTY),0) - ISNULL(SUM(C.PRE_IN_WHS_QTY),0)) LACK_QTY
		FROM TB_ITEM_PART_ADM A
		
		LEFT OUTER JOIN TB_INDIVIDUAL_ORDER_DTL B
		ON A.PART_CD = B.PART_CD
		
		LEFT OUTER JOIN TB_IN_WHS_ADM C
		ON A.PART_CD = C.PART_CD
		AND B.PO_NO = C.PO_NO
		
		WHERE 1=1
		<if test="partGubun!=null and !partGubun.equals('')">
			AND PART_GUBUN = #{partGubun}
		</if>
		<if test="partType!=null and !partType.equals('')">
			AND PART_TYPE = #{partType}
		</if>
<!-- 		<if test="searchVal != '' and searchVal != null">  -->
<!-- 		 AND (PART_CD LIKE '%' + #{searchVal} + '%'  OR PART_NM LIKE '%' + #{searchVal} + '%' -->
<!-- 			OR PART_GUBUN LIKE '%' + #{searchVal} + '%'  OR PART_TYPE LIKE '%' + #{searchVal} + '%' -->
<!-- 			OR PART_REV LIKE '%' + #{searchVal} + '%'  OR PART_SPEC LIKE '%' + #{searchVal} + '%' -->
<!-- 			) -->
<!-- 		</if> -->
		GROUP BY
			A.PART_CD
			, A.PART_NM
			, A.PART_GUBUN
			, A.PART_TYPE
			, A.PART_REV
			, A.PART_SPEC
			, A.IN_CORP_CD
			, A.BASIC_DLV_DATE
			, A.PART_DESC
			, A.PART_UNIT
			, A.UNIT_COST
			, A.STAND_COST
			, A.SAFETY_STOCK_QTY
			, A.BARCODE_YN
			, A.INSPECT_YN
<!-- 		<if test="ordColumn != '' and ordColumn != null and ordDir != null and ordDir != null">  -->
<!--  		 ORDER BY ${ordColumn} ${ordDir} -->
<!--  		</if>   -->
<!-- 		 OFFSET #{start} ROWS                         -->
<!-- 		 FETCH NEXT #{length} ROWS ONLY   -->
	</select>
	
	<!-- 품목정보관리(부품) 상세 조회 -->
	<select id="itemPartDtlList" resultMap="itemPartAdmVo">
		<![CDATA[
			SELECT
				PART_CD
				, PART_NM
				, PART_GUBUN
				, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE BASE_GROUP_CD='069' AND PART_GUBUN=B.BASE_CD) PART_GUBUN_NM
				, PART_TYPE
				, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE BASE_GROUP_CD='070' AND B.BASE_CD=PART_TYPE) PART_TYPE_NM
				, PART_REV
				, PART_SPEC
				, IN_CORP_CD
				, (SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM B WHERE B.DEAL_CORP_CD=A.IN_CORP_CD) IN_CORP_NM
				, PART_UNIT
				, (SELECT BASE_CD_NM FROM TB_SYSTEM_COMMON_CODE B WHERE BASE_GROUP_CD='072' AND PART_UNIT=B.BASE_CD) PART_UNIT_NM
				, USE_YN
				, PART_DESC
				, BASIC_DLV_DATE
				, UNIT_COST
				, STAND_COST
				, SAFETY_STOCK_QTY
				, BARCODE_YN
				, INSPECT_YN
			FROM TB_ITEM_PART_ADM A
			WHERE PART_CD = #{partCd}
			AND PART_REV = #{partRev}
		]]>
	</select>
	
	<!-- 부품수입검사기준서 조회 -->
	<select id="itemPartInspectList" resultMap="itemPartAdmVo">
		<![CDATA[
			SELECT
				PART_CD
				, PART_REV
				, PART_SEQ
				, REG_DATE
				, REG_ID
				, ISNULL((SELECT USER_NM FROM TB_USER B WHERE B.USER_ID=A.REG_ID), '관리자') AS  REG_NM
				, FILE_NM
				, INSPECT_DATE
			FROM TB_ITEM_PART_INSPECT A		
			WHERE PART_CD = #{partCd}
			AND PART_REV = #{partRev}
		]]>
	</select>
	
	<!-- 부품수입검사기준서 상세조회 -->
	<select id="itemPartInspectRead" resultMap="itemPartAdmVo">
		<![CDATA[
			SELECT
				PART_CD
				, PART_REV
				, PART_SEQ
				, REG_DATE
				, REG_ID
				, ISNULL((SELECT USER_NM FROM TB_USER B WHERE B.USER_ID=A.REG_ID), '관리자') AS  REG_NM
				, FILE_NM
				, INSPECT_DATE
			FROM TB_ITEM_PART_INSPECT A
			
			WHERE 1=1
			AND INSPECT_DATE IN (SELECT MAX(INSPECT_DATE) FROM TB_ITEM_PART_INSPECT)
			AND PART_CD = #{partCd}
			AND PART_REV = #{partRev}
		]]>
	</select>
	
	<!-- 부품관련자료 조회 -->
	<select id="itemPartAttachDataList" resultMap="itemPartAdmVo">
		<![CDATA[
			SELECT
				PART_CD
				, PART_REV
				, PART_SEQ
				, REG_ID
				, ISNULL((SELECT USER_NM FROM TB_USER B WHERE B.USER_ID=A.REG_ID), '관리자') AS  REG_NM
				, CONTENTS
				, FILE_NM
				, REG_DATE
				, REG_ID
			FROM TB_ITEM_PART_ATTACH_DATA A	
			WHERE PART_CD = #{partCd}
			AND PART_REV = #{partRev}
		]]>
	</select>
	
	<!-- 품목정보관리(부품) 등록 -->
	<insert id="itemPartAdmCreate">
		<![CDATA[
			INSERT INTO TB_ITEM_PART_ADM (
				PART_CD
				, PART_NM
				, PART_REV
				, PART_GUBUN
				, PART_TYPE
				, PART_SPEC
				, IN_CORP_CD
				, PART_UNIT
				, BASIC_DLV_DATE
				, UNIT_COST
				, STAND_COST
				, SAFETY_STOCK_QTY
				, BARCODE_YN
				, USE_YN
				, INSPECT_YN
				, PART_DESC
				, REG_ID
				, REG_DATE
			) 
			VALUES(
				#{partCd}
				, #{partNm}
				, #{partRev}
				, #{partGubun}
				, #{partType}
				, #{partSpec}
				, #{inCorpCd}
				, #{partUnit}
				, #{basicDlvDate}
				, #{unitCost}
				, #{standCost}
				, #{safetyStockQty}
				, #{barcodeYn}
				, #{useYn}
				, #{inspectYn}
				, #{partDesc}
				, #{regId}
				, getdate()
			)
		]]>
	</insert>
	
	<!-- 부품수입검사기준서 등록 -->
	<insert id="itemPartInspectCreate">
		<![CDATA[
			INSERT INTO TB_ITEM_PART_INSPECT (
				PART_CD
				, PART_REV
				, PART_SEQ
				, FILE_NM
				, INSPECT_DATE
				, REG_ID
				, REG_DATE
			) 
			VALUES(
				#{partCd}
				, #{partRev}
				, #{partSeq}
				, #{fileNm}
				, #{inspectDate}
				, #{regId}
				, getdate()
			)
		]]>
	</insert>
	
	<!-- 부품관련자료 등록 -->
	<insert id="itemPartAttachDataCreate">
		<![CDATA[
			INSERT INTO TB_ITEM_PART_ATTACH_DATA		(
				PART_CD
				, PART_REV
				, PART_SEQ
				, FILE_NM
				, CONTENTS
				, REG_ID
				, REG_DATE
			) 
			VALUES(
				#{partCd}
				, #{partRev}
				, #{partSeq}
				, #{fileNm}
				, #{contents}
				, #{regId}
				, getdate()
			)
		]]>
	</insert>
	
	<!-- 품목정보관리(부품) 수정 -->
	<update id="itemPartAdmUpdate">
		<![CDATA[
			UPDATE	TB_ITEM_PART_ADM		 
				SET	
					PART_NM = #{partNm}
					, PART_GUBUN = #{partGubun}
					, PART_TYPE = #{partType}
					, PART_SPEC = #{partSpec}
					, IN_CORP_CD = #{inCorpCd}
					, PART_UNIT = #{partUnit}
					, BASIC_DLV_DATE = #{basicDlvDate}
					, UNIT_COST = #{unitCost}
					, STAND_COST = #{standCost}
					, SAFETY_STOCK_QTY = #{safetyStockQty}
					, BARCODE_YN = #{barcodeYn}
					, USE_YN = #{useYn}
					, INSPECT_YN = #{inspectYn}
					, PART_DESC = #{partDesc}
					, UPD_ID = #{updId}
					, UPD_DATE = getdate()
				WHERE	PART_CD = #{partCd}
				AND 	PART_REV = #{partRev}
		]]>
	</update>
	
	<!-- 부품수입검사기준서 삭제 -->
	<select id="itemPartInspectDelete">
		<![CDATA[
			DELETE FROM TB_ITEM_PART_INSPECT		
			WHERE PART_CD=#{partCd}
			AND PART_REV=#{partRev}
			AND PART_SEQ=#{partSeq}
		]]>
	</select>
	
	<!-- 부품관련자료 삭제 -->
	<select id="itemPartAttachDataDelete">
		<![CDATA[
			DELETE FROM TB_ITEM_PART_ATTACH_DATA		
			WHERE PART_CD=#{partCd}
			AND PART_REV=#{partRev}
			AND PART_SEQ=#{partSeq}
		]]>
	</select>
	
	
	
	<!-- 품목정보관리(부품) partCd값 가져오기 -->
	<!--
	<select id="getPartCd" resultType="String">
		<![CDATA[
			SELECT ISNULL(MAX(PART_CD)+1 , '100000')
			FROM TB_ITEM_PART_ADM
		]]>
	</select>
	-->
	
	<select id="overlapPartCd" resultType="Integer">
		SELECT COUNT(*) FROM TB_ITEM_PART_ADM WHERE PART_CD=#{partCd} AND PART_REV=#{partRev}
	</select>
	
	<!-- 품목정보관리(부품) partRev값 가져오기 -->
	<select id="getPartRev" resultMap="itemPartAdmVo">
		SELECT REPLICATE('0',2-LEN(MAX(PART_REV)+1))+CAST(MAX(PART_REV)+1 AS VARCHAR) PART_REV FROM TB_ITEM_PART_ADM WHERE PART_CD = #{partCd}
	</select>
	
	<!-- 부품수입검사기준서 시퀀스 -->
	<select id="getInspectPartSeq" resultType="int">
		<![CDATA[
			SELECT ISNULL(MAX(PART_SEQ)+1 ,0)
			FROM TB_ITEM_PART_INSPECT	
			WHERE PART_CD = #{partCd}
			AND PART_REV = #{partRev}
		]]>
	</select>
	
	<!-- 부품관련자료 시퀀스 -->
	<select id="getAttachPartSeq" resultType="int">
		<![CDATA[
			SELECT ISNULL(MAX(PART_SEQ)+1 ,0)
			FROM TB_ITEM_PART_ATTACH_DATA	
			WHERE PART_CD = #{partCd}
			AND PART_REV = #{partRev}
		]]>
	</select>
	
	<!-- 파일명 가져오기 -->
	<select id="getFileNm" resultType="String">
		<![CDATA[
			SELECT FILE_NM 
			FROM TB_ITEM_PART_INSPECT	
			WHERE PART_CD=#{partCd}
			AND PART_REV=#{partRev}
			AND PART_SEQ=#{partSeq}
		]]>
	</select>
	
		
	<!-- 파일명 가져오기 -->
	<select id="getAttachFileNm" resultType="String">
		<![CDATA[
		  	SELECT FILE_NM 
			FROM TB_ITEM_PART_ATTACH_DATA	
			WHERE PART_CD=#{partCd}
			AND PART_REV=#{partRev}
			AND PART_SEQ=#{partSeq}
		]]>
	</select>
	
	<!-- 품목정보관리(부품) 자재단가 수정 -->
	<update id="updateUnitCost">
		<![CDATA[
			UPDATE	TB_ITEM_PART_ADM		 
				SET	
					UNIT_COST = #{unitCost}
				WHERE	PART_CD = #{partCd}
				AND 	PART_REV = #{partRev}
		]]>
	</update>
	
</mapper>